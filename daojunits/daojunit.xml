<?xml version="1.0" encoding="UTF-8"?>

<project name="DAOJunits" default="compileDaoTestCases" >
	
	<property name="base.path" value="${basedir}"> </property>
	<property name="proj.src" value="../src"/>
	<property name="proj.classes" value="../classes"/>


	<property name="base.dir" value="."/>
	<property name="lib.dir" value="../lib"/>
	<property name="cobertura.lib" value="coberturalib"/>

	<property name="test.classes.dir" value="${base.dir}/classes"/>
	<property name="test.src.dir" value="${base.dir}/src"/>
	<property name="cobertura.location" value="${base.dir}"/>
	

	<property name="test.instrumented.dir" value="./instrument"/>
	<property name="report.dir" value="."/>
	<property name="coverage.dir" value="."/>

	<path id="cobertura.classpath">
			<fileset dir="${cobertura.lib}">
				<include name="cobertura.jar" />
				<include name="**/*.jar" />
			</fileset>
	</path>

	<taskdef classpathref="cobertura.classpath" resource="tasks.properties"/>

	
	<target name="compileDaoTestCases">
		
		<delete dir="${test.classes.dir}" />
		<mkdir dir="${test.classes.dir}" />		
		<javac destdir="${test.classes.dir}" includes="**/*.java" includeantruntime="true">
			<src path="${test.src.dir}"/>
			<classpath>
				<fileset dir="${lib.dir}">
    				<include name="**/*.jar"/>
    			</fileset>
			</classpath>
		</javac>
		
		<copy todir="${test.classes.dir}">
			<fileset dir="${base.dir}">
				<include name="**/*.properties" />
				<include name="**/*.xml" />
				<include name="**/*.hbm.xml" />
			</fileset>
		</copy>
		
	</target>
	
	<target name="runDAOTestCases" depends="compileDaoTestCases">
		<mkdir dir="${report.dir}/reports/daoTestReports"/>
		<mkdir dir="${report.dir}/reports/daoTestReports/HtmlReports"/>
		
		<junit printsummary="yes" fork="yes" haltonfailure="yes" jvm="java -agentlib:yjpagent=onexit=memory,dir=f:\MySnapshots">
			<formatter type="xml"/>
			 <sysproperty key="net.sourceforge.cobertura.datafile" file="${cobertura.location}/coverage.ser" />
			
			
			<!--	Note the classpath order: instrumented classes are before the
				original (uninstrumented) classes.  This is important.
			-->	
			
			<classpath location="${test.instrumented.dir}" />
			<classpath location="${proj.classes}" />
						
			<classpath>
				<fileset dir="${lib.dir}">
					<exclude name="DAO.jar"/>
					<include name="*.jar"/>
				</fileset>
			</classpath>
							
			<classpath>
				<pathelement path="${test.src.dir}" />
				<pathelement path= "${test.classes.dir}" />
				<pathelement path = "C:/Program Files/YourKit Java Profiler 7.0.11/bin/win32" />
			</classpath>
						
			<classpath refid="cobertura.classpath" />
			
			
			<batchtest todir="${report.dir}/reports/daoTestReports">
				<fileset dir="${test.src.dir}">
					<include name="**/DAOTestSuite.java" />
				</fileset>	
			</batchtest>	
		</junit>

	</target>
	
		
	 <target name="runJunitTestCases" depends="runDAOTestCases">
		<junitreport todir="${report.dir}/reports/daoTestReports">
			<fileset dir="${report.dir}/reports/daoTestReports">
				<include name="TEST-*.xml" />
			</fileset>
			<report todir="${report.dir}/reports/daoTestReports/HtmlReports" />
		</junitreport>
	</target>
	
	<target name="init">
		
		<delete dir="${proj.classes}" />
		<mkdir dir="${proj.classes}" />
		<delete dir="${test.classes.dir}" />
		<mkdir dir="${test.classes.dir}" />
		<delete dir="${test.instrumented.dir}" />
		<mkdir dir="${test.instrumented.dir}" />
				
	</target>
	
	
	
	<target name="compile" depends="init">
		<javac destdir="${proj.classes}" includes="**/*.*" debug="on" includeAntRuntime="false" target="1.5">
					<src path="${proj.src}" />
					<classpath>
						<fileset dir="${lib.dir}">
							<include name="*.jar" />
						</fileset>
					</classpath>
			<classpath refid="cobertura.classpath" />
		</javac>
		<copy todir="${proj.classes}">
					<fileset dir="${proj.src}">
						<include name="**/*.properties" />
						<include name="**/*.xml" />
						<include name="**/*.hbm.xml" />
						<include name="**/*.ser" />
					</fileset>
				</copy>
		</target>
	
	
	<target name="instrument" depends="init,compile">
			<!--
				Remove the coverage data file.
			-->
			<delete file="${cobertura.location}/cobertura.ser"/>
			
			<!--
				Instrument the application classes, writing the
				instrumented classes into ${build.instrumented.dir}.
			-->
			
		
			<cobertura-instrument todir="${test.instrumented.dir}">
				
				<classpath>
					<fileset dir="${lib.dir}">
						<include name="**/*.jar"/>
					</fileset>
				</classpath>
				<!--
					The following line causes instrument to ignore any
					source line containing a reference to log4j, for the
					purposes of coverage reporting.
				-->
				<ignore regex="org.apache.log4j.*" />

				<fileset dir="${proj.classes}">
					<!--
						Instrument all the application classes, but
						don't instrument the test classes.
					-->
					<include name="**/*.class" />
					
				</fileset>
			</cobertura-instrument>
	</target>
	
	<target name="coverage-report">
		<mkdir dir="${coverage.dir}/reports/daoCodeCoverageXml"/>
		<mkdir dir="${coverage.dir}/reports/daoCodeCoverageHtml"/>
		
		<!--
			Generate an XML file containing the coverage data using
			the "srcdir" attribute.
		-->
			
		<cobertura-report srcdir="${proj.src}" destdir="${coverage.dir}/reports/daoCodeCoverageXml" format="xml" />
		
		<!--
				Generate a series of HTML files containing the coverage
				data in a user-readable form using nested source filesets.
		-->
		<cobertura-report destdir="${coverage.dir}/reports/daoCodeCoverageHtml">
			<fileset dir="${proj.src}">
				<include name="**/*.java"/>
			</fileset>
		</cobertura-report>
	</target>
	
	
	<target name="CodeCoverage">
	
		<antcall target="instrument"/>
		<antcall target="runJunitTestCases"/>
		<antcall target="coverage-report"/>
		
	</target>
	
</project>

