<?xml version ="1.0"?>

<!--L
  Copyright Washington University in St. Louis, SemanticBits, Persistent Systems, Krishagni.

  Distributed under the OSI-approved BSD 3-Clause License.
  See http://ncip.github.com/catissue-dao/LICENSE.txt for details.
L-->

<project name="DAOJunits" default="compileDaoTestCases" >
	
	
	<property name="base.path" value="${basedir}"> </property>
	<property name="proj.src" value="../src"/>
	<property name="proj.classes" value="../classes"/>


	<property name="base.dir" value="."/>
	<property name="lib.dir" value="../lib"/>
	<property name="build.dir" value="../build"/>
	<property name="cobertura.lib" value="coberturalib"/>

	<property name="test.classes.dir" value="${base.dir}/classes"/>
	<property name="test.src.dir" value="${base.dir}/src"/>
	<property name="cobertura.location" value="${base.dir}"/>
	

	<property name="test.instrumented.dir" value="./instrument"/>
	<property name="report.dir" value="."/>
	<property name="coverage.dir" value="."/>
	
	<!--Database specific properties ....-->
	<property name="mysql.driver.string" value="com.mysql.jdbc.Driver" />
	<property name="oracle.driver.string" value="oracle.jdbc.driver.OracleDriver"/>
	<property name="oracle.dialect.string" value="org.hibernate.dialect.Oracle9Dialect" />
	<property name="mysql.dialect.string" value="org.hibernate.dialect.MySQLDialect" />
	<property file="DAOInstall.properties"/>
	<property name="mysql.dao.prop.filename" value="MySQLDAOProperties.xml" />
	<property name="oracle.dao.prop.filename" value="OracleDAOProperties.xml" />

	<path id="cobertura.classpath">
			<fileset dir="${cobertura.lib}">
				<include name="cobertura.jar" />
				<include name="**/*.jar" />
			</fileset>
	</path>

	<!--define require dir and Properties -->
		<taskdef resource="net/sf/antcontrib/antcontrib.properties">
				<classpath>
					<pathelement location="${lib.dir}/ant-contrib.jar" />
				</classpath>
		</taskdef>
		
	<taskdef classpathref="cobertura.classpath" resource="tasks.properties"/>

	
	<target name="compileDaoTestCases">
		<echo>Compiling DAO test cases : </echo>
		<delete dir="${test.classes.dir}" />
		<mkdir dir="${test.classes.dir}" />		
		<javac destdir="${test.classes.dir}" includes="**/*.java" includeantruntime="true">
			<src path="${test.src.dir}"/>
			<classpath>
				<fileset dir="${lib.dir}">
    				<include name="**/*.jar"/>
    			</fileset>
				<fileset dir="${build.dir}">
    				<include name="**/*.jar"/>
    			</fileset>
			</classpath>
		</javac>
		
		<copy todir="${test.classes.dir}">
			<fileset dir="${base.dir}">
				<include name="**/*.properties" />
				<include name="**/*.xml" />
				<include name="**/*.hbm.xml" />
			</fileset>
		</copy>
		<antcall target="update:hibernate-cfg"></antcall>
		
				
	</target>
	
	<target name="update:hibernate-cfg-mysql">
		<echo message="Updating hibernate.cfg.xml file for mysql..." />
		<replace dir="classes" propertyfile="DAOInstall.properties">
					<include name="hibernate.cfg.xml"/>
					<replacefilter token="@@dialect@@" value="${mysql.dialect.string}"/>
					<replacefilter token="@@driver@@" value="${mysql.driver.string}"/>
					<replacefilter token="@@url@@" value="jdbc:mysql://${database.host}:${database.port}/${database.name}"/>
					<replacefilter token="@@username@@" value="${database.username}"/>
					<replacefilter token="@@password@@" value="${database.password}"/>
		</replace>
		
	</target>
	
	<target name="update:hibernate-cfg-oracle">
		<echo message="Updating hibernate.cfg.xml file for oracle..." />
						<replace dir="classes" propertyfile="DAOInstall.properties">
							<include name="hibernate.cfg.xml"/>
							<replacefilter token="@@dialect@@" value="${oracle.dialect.string}"/>
							<replacefilter token="@@driver@@" value="${oracle.driver.string}"/>
							<replacefilter token="@@url@@" value="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}"/>
							<replacefilter token="@@username@@" value="${database.username}"/>
							<replacefilter token="@@password@@" value="${database.password}"/>
	 </replace>
			
	</target>
	
	<target name="update:hibernate-cfg">
	
		<if>
				<equals arg1="mysql" arg2="${database.type}" />
						 <then>
							<antcall target="update:hibernate-cfg-mysql" />
						 	<replace file="classes/ApplicationDAOProperties.xml">
						 		<replacefilter token="${oracle.dao.prop.filename}" value="${mysql.dao.prop.filename}" />
						 	</replace>
						</then>
						
						<elseif>
							<equals arg1="oracle" arg2="${database.type}" />
							<then>
								<antcall target="update:hibernate-cfg-oracle" />
								<replace file="classes/ApplicationDAOProperties.xml">
									<replacefilter token="${mysql.dao.prop.filename}" value="${oracle.dao.prop.filename}" />
								</replace>
							</then>
						</elseif>
						<else>
								<echo message="DATABASE INITIALIZATION FAILED PLEASE CHECK DATABASE.TYPE PROPERTY" level="error" />
						</else>
					</if>		
	</target>
	
	<target name="runDAOTestCases" depends="instrument,compileDaoTestCases">
		<echo>Executing DAO test cases : </echo>
		<mkdir dir="${report.dir}/reports/daoTestReports"/>
		<mkdir dir="${report.dir}/reports/daoTestReports/HtmlReports"/>
		
		<junit printsummary="yes" fork="yes">
			<formatter type="xml" />
			 <sysproperty key="net.sourceforge.cobertura.datafile" file="${cobertura.location}/cobertura.ser" />
						
			<!--	Note the classpath order: instrumented classes are before the
				original (uninstrumented) classes.  This is important.
			-->	
			
			<classpath location="${test.instrumented.dir}" />
			<classpath location="${proj.classes}" />
						
			<classpath>
				<fileset dir="${lib.dir}">
					<exclude name="DAO-1.1.5.jar"/>
					<include name="*.jar"/>
				</fileset>
			</classpath>
							
			<classpath>
				<pathelement path="${test.src.dir}" />
				<pathelement path= "${test.classes.dir}" />
				<!--<pathelement path = "C:/Program Files/YourKit Java Profiler 7.0.11/bin/win32" />-->
			</classpath>
						
			<classpath refid="cobertura.classpath" />
			
			
			<batchtest fork="yes" todir="${report.dir}/reports/daoTestReports">
				<fileset dir="${test.src.dir}">
					<include name="**/DAOTestSuite.java" />
				</fileset>	
			</batchtest>	
		</junit>

	</target>
	
		
	 <target name="runJunitTestCases" depends="runDAOTestCases">
	 	<echo>Executing Junit test cases : </echo>
		<junitreport todir="${report.dir}/reports/daoTestReports">
			<fileset dir="${report.dir}/reports/daoTestReports">
				<include name="TEST-*.xml" />
			</fileset>
			<report todir="${report.dir}/reports/daoTestReports/HtmlReports" />
		</junitreport>
	</target>
	
	<target name="init">
		<echo>Initializing all the necessarry parameters : </echo>
		<delete dir="${proj.classes}" />
		<mkdir dir="${proj.classes}" />
		<delete dir="${test.classes.dir}" />
		<mkdir dir="${test.classes.dir}" />
		<delete dir="${test.instrumented.dir}" />
		<mkdir dir="${test.instrumented.dir}" />
				
	</target>
	
	
	
	<target name="compile" depends="init">
		<echo>Compiling DAO source code : </echo>
		<javac destdir="${proj.classes}" includes="**/*.*" debug="on" includeAntRuntime="false" target="1.5">
					<src path="${proj.src}" />
					<classpath>
						<fileset dir="${lib.dir}">
							<include name="*.jar" />
						</fileset>
					</classpath>
			<classpath refid="cobertura.classpath" />
		</javac>
		<copy todir="${proj.classes}">
					<fileset dir="${proj.src}">
						<include name="**/*.properties" />
						<include name="**/*.xml" />
						<include name="**/*.hbm.xml" />
						<include name="**/*.ser" />
					</fileset>
				</copy>
		</target>
	
	
	<target name="instrument" depends="init,compile">
		<echo>Instrumenting the application classes : </echo>
			<!--
				Remove the coverage data file.
			-->
			<delete file="${cobertura.location}/cobertura.ser"/>
			
			<!--
				Instrument the application classes, writing the
				instrumented classes into ${build.instrumented.dir}.
			-->
			
		
			<cobertura-instrument todir="${test.instrumented.dir}">
				
				<classpath>
					<fileset dir="${lib.dir}">
						<include name="**/*.jar"/>
					</fileset>
				</classpath>
				<!--
					The following line causes instrument to ignore any
					source line containing a reference to log4j, for the
					purposes of coverage reporting.
				-->
				<ignore regex="org.apache.log4j.*" />

				<fileset dir="${proj.classes}">
					<!--
						Instrument all the application classes, but
						don't instrument the test classes.
					-->
					<include name="**/*.class" />
										
				</fileset>
			</cobertura-instrument>
	</target>
	
	<target name="coverage-report">
		<echo> Generating coverage reports :</echo>
		<mkdir dir="${coverage.dir}/reports/daoCodeCoverageXml"/>
		<mkdir dir="${coverage.dir}/reports/daoCodeCoverageHtml"/>
		
		<!--
			Generate an XML file containing the coverage data using
			the "srcdir" attribute.
		-->
			
		<cobertura-report srcdir="${proj.src}" destdir="${coverage.dir}/reports/daoCodeCoverageXml" format="xml" />
		
		<!--
				Generate a series of HTML files containing the coverage
				data in a user-readable form using nested source filesets.
		-->
		<cobertura-report destdir="${coverage.dir}/reports/daoCodeCoverageHtml">
			<fileset dir="${proj.src}">
				<include name="**/*.java"/>
			</fileset>
		</cobertura-report>
	</target>
	
	
	<target name="CodeCoverage">
	
		<antcall target="instrument"/>
		<antcall target="runJunitTestCases"/>
		<antcall target="coverage-report"/>
		
	</target>
	
	
	
	<target name="create:db-mysql">
			<echo message="Creating Mysql Database..."/>
			<sql
				driver="${mysql.driver.string}"                 
				url="jdbc:mysql://${database.host}:${database.port}/mysql"
				userid="${database.username}"
				password="${database.password}"
				onerror="continue">
				<classpath>
					<fileset dir="${lib.dir}">
						  <include name="*.jar"/>
					</fileset>
				</classpath> 
				DROP DATABASE ${database.name};
				CREATE DATABASE ${database.name};
			</sql>
	</target>
	
	<target name="deploy:db-mysql">
			<echo message="Initializing MySQL Database for DAO..." />
			<sql driver="${mysql.driver.string}" url="jdbc:mysql://${database.host}:${database.port}/${database.name}" userid="${database.username}" password="${database.password}" onerror="continue" >
				<transaction src="${base.dir}/dbcreation_mysql.sql" />
				
				<transaction>commit;</transaction>
				<classpath>
					<fileset dir="${lib.dir}">
						<include name="*.jar" />
					</fileset>
				</classpath>
			</sql>
		
			
			
	</target>
	
	<target name="create:deploy-db-mysql">
		<antcall target="create:db-mysql"/>
		<antcall target="deploy:db-mysql"/>
	</target>
	
	<target name="create:db-oracle">
		<echo message="Initializing Oracle Database for caTISSUECore Client Application..."/>
			<sql 
					driver="${oracle.driver.string}"
				    url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}"
				  	userid="${database.tempusername}"
					password="${database.temppassword}" 
				   	onerror="continue"
		    		rdbms="oracle">				
					<classpath>
						<fileset dir="${lib.dir}">
							<include name="*.jar"/>
						</fileset>
					</classpath>			
					DROP USER ${database.username} CASCADE;
					CREATE USER ${database.username} IDENTIFIED BY ${database.password} DEFAULT TABLESPACE "${database.tablespace}" TEMPORARY TABLESPACE "${database.temptablespace}" QUOTA UNLIMITED ON "${database.tablespace}";
					GRANT CONNECT, RESOURCE TO ${database.username};
					GRANT DBA TO ${database.username};
					ALTER USER ${database.username} DEFAULT ROLE ALL;
			</sql>                  
	</target>      
	
	<target name="deploy:db-oracle">
				<echo message="Initializing Oracle Database for DAO..." />
				<sql driver="${oracle.driver.string}" 
					url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" 
					userid="${database.username}" password="${database.password}"
					onerror="continue"
					rdbms="oracle">
					<transaction src="${base.dir}/dbcreation_oracle.sql" />					
					<transaction>commit;</transaction>
					<classpath>
						<fileset dir="${lib.dir}">
							<include name="*.jar" />
						</fileset>
					</classpath>
				</sql>
	</target>
	
	<target name="create:deploy-db-oracle">
		<antcall target="create:db-oracle"/>
		<antcall target="deploy:db-oracle"/>
	</target>
	
	<target name="deploy:db">
			<if>
				<equals arg1="mysql" arg2="${database.type}" />
				 <then>
					<antcall target="create:deploy-db-mysql" />
				</then>
				
				<elseif>
					<equals arg1="oracle" arg2="${database.type}" />
					<then>
						<antcall target="create:deploy-db-oracle" />
					</then>
				</elseif>
				<else>
						<echo message="DATABASE INITIALIZATION FAILED PLEASE CHECK DATABASE.TYPE PROPERTY" level="error" />
				</else>
			</if>					
	</target>	
	
	
</project>

