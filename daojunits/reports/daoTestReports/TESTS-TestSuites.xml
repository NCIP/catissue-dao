<?xml version="1.0" encoding="UTF-8" ?>
<testsuites>
  <testsuite errors="0" failures="0" id="0" name="DAOTestSuite" package="edu.wustl.dao.test" tests="44" time="1.265">
      <properties>
          <property name="java.vendor" value="Sun Microsystems Inc." />

          <property name="lib.dir" value="../lib" />

          <property name="ant.file.DAOJunits" value="F:\catissueWorkspace\DAOWithoutAudit\daojunits\daojunit.xml" />

          <property name="database.name" value="daodb" />

          <property name="eclipse.pdebuild.templates" value="/F:/washuEclipse/eclipse/eclipse/plugins/org.eclipse.pde.build_3.4.0.v20080604/templates/" />

          <property name="sun.management.compiler" value="HotSpot Client Compiler" />

          <property name="database.temptablespace" value="TEMP" />

          <property name="os.name" value="Windows XP" />

          <property name="sun.boot.class.path" value="C:\Program Files\Java\jdk1.5.0_08\jre\lib\rt.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\i18n.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\jce.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.5.0_08\jre\classes" />

          <property name="sun.desktop" value="windows" />

          <property name="java.vm.specification.vendor" value="Sun Microsystems Inc." />

          <property name="net.sourceforge.cobertura.datafile" value="F:\catissueWorkspace\DAOWithoutAudit\daojunits\cobertura.ser" />

          <property name="ant.home" value="E:\Ant\apache-ant-1.7.0" />

          <property name="java.runtime.version" value="1.5.0_08-b03" />

          <property name="user.name" value="kalpana_thakur" />

          <property name="database.tablespace" value="CATISSUE_NIGHTLY_BUILD" />

          <property name="test.classes.dir" value="./classes" />

          <property name="database.password" value="root" />

          <property name="user.language" value="en" />

          <property name="base.path" value="F:\catissueWorkspace\DAOWithoutAudit\daojunits" />

          <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk1.5.0_08\jre\bin" />

          <property name="ant.project.name" value="DAOJunits" />

          <property name="java.version" value="1.5.0_08" />

          <property name="user.timezone" value="" />

          <property name="sun.arch.data.model" value="32" />

          <property name="test.src.dir" value="./src" />

          <property name="java.endorsed.dirs" value="C:\Program Files\Java\jdk1.5.0_08\jre\lib\endorsed" />

          <property name="sun.cpu.isalist" value="" />

          <property name="sun.jnu.encoding" value="Cp1252" />

          <property name="file.encoding.pkg" value="sun.io" />

          <property name="file.separator" value="\" />

          <property name="java.specification.name" value="Java Platform API Specification" />

          <property name="java.class.version" value="49.0" />

          <property name="database.host" value="ps4267" />

          <property name="user.country" value="US" />

          <property name="java.home" value="C:\Program Files\Java\jdk1.5.0_08\jre" />

          <property name="java.vm.info" value="mixed mode, sharing" />

          <property name="database.username" value="root" />

          <property name="ant.file" value="F:\catissueWorkspace\DAOWithoutAudit\daojunits\daojunit.xml" />

          <property name="os.version" value="5.1" />

          <property name="path.separator" value=";" />

          <property name="java.vm.version" value="1.5.0_08-b03" />

          <property name="test.instrumented.dir" value="./instrument" />

          <property name="report.dir" value="." />

          <property name="user.variant" value="" />

          <property name="ant.library.dir" value="E:\Ant\apache-ant-1.7.0\lib" />

          <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob" />

          <property name="oracle.driver.string" value="oracle.jdbc.driver.OracleDriver" />

          <property name="sun.io.unicode.encoding" value="UnicodeLittle" />

          <property name="awt.toolkit" value="sun.awt.windows.WToolkit" />

          <property name="eclipse.pdebuild.scripts" value="/F:/washuEclipse/eclipse/eclipse/plugins/org.eclipse.pde.build_3.4.0.v20080604/scripts/" />

          <property name="coverage.dir" value="." />

          <property name="user.home" value="C:\Documents and Settings\kalpana_thakur" />

          <property name="database.temppassword" value="system123" />

          <property name="java.specification.vendor" value="Sun Microsystems Inc." />

          <property name="java.library.path" value="C:\Program Files\Java\jdk1.5.0_08\jre\bin;.;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.5.0_08/bin/../jre/bin/client;C:/Program Files/Java/jdk1.5.0_08/bin/../jre/bin;C:\Tcl\bin;E:\Ant\apache-ant-1.7.0\bin;C:\Program Files\Java\jdk1.6.0\bin;C:\Program Files\DeID\;C:\Program Files\TortoiseCVS;C:\Program Files\Java\jdk1.5.0_08\bin;;F:\oracle\ora92\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\mysql server\bin;C:\Program Files\YourKit Java Profiler 7.0.11\bin\win32;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Windows Imaging\" />

          <property name="java.vendor.url" value="http://java.sun.com/" />

          <property name="java.vm.vendor" value="Sun Microsystems Inc." />

          <property name="java.runtime.name" value="Java(TM) 2 Runtime Environment, Standard Edition" />

          <property name="database.tempusername" value="system" />

          <property name="java.class.path" value="F:\catissueWorkspace\DAOWithoutAudit\daojunits\instrument;F:\catissueWorkspace\DAOWithoutAudit\classes;F:\catissueWorkspace\DAOWithoutAudit\lib\ant-contrib.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\antlr-2.7.5H3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\asm.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\cglib.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\commons-collections-3.2.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\commons-logging.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\dom4j-1.6.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\ehcache-1.2.3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\hibernate3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\j2ee.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\junit-4.5.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\log4j.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\mmtxProject.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\mysql-connector-java-5.0.8-bin.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\ojdbc14.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\washu-commons-1.1.4.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\src;F:\catissueWorkspace\DAOWithoutAudit\daojunits\classes;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\asm-2.2.1.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\asm-tree-2.2.1.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\cobertura.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\jakarta-oro-2.0.8.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\log4j.jar;E:\Ant\apache-ant-1.7.0\lib\junit-4.1.jar;E:\Ant\apache-ant-1.7.0\lib\ant-launcher.jar;E:\Ant\apache-ant-1.7.0\lib\ant.jar;E:\Ant\apache-ant-1.7.0\lib\ant-junit.jar" />

          <property name="ant.version" value="Apache Ant version 1.7.0 compiled on December 13 2006" />

          <property name="cobertura.location" value="." />

          <property name="java.vm.specification.name" value="Java Virtual Machine Specification" />

          <property name="java.vm.specification.version" value="1.0" />

          <property name="base.dir" value="." />

          <property name="sun.cpu.endian" value="little" />

          <property name="sun.os.patch.level" value="Service Pack 2" />

          <property name="mysql.driver.string" value="com.mysql.jdbc.Driver" />

          <property name="eclipse.pdebuild.home" value="/F:/washuEclipse/eclipse/eclipse/plugins/org.eclipse.pde.build_3.4.0.v20080604/./" />

          <property name="java.io.tmpdir" value="C:\DOCUME~1\KALPAN~1\LOCALS~1\Temp\" />

          <property name="database.port" value="3306" />

          <property name="java.vendor.url.bug" value="http://java.sun.com/cgi-bin/bugreport.cgi" />

          <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment" />

          <property name="os.arch" value="x86" />

          <property name="oracle.dialect.string" value="org.hibernate.dialect.Oracle9Dialect" />

          <property name="java.ext.dirs" value="C:\Program Files\Java\jdk1.5.0_08\jre\lib\ext" />

          <property name="user.dir" value="F:\catissueWorkspace\DAOWithoutAudit\daojunits" />

          <property name="proj.src" value="../src" />

          <property name="line.separator" value=" " />

          <property name="java.vm.name" value="Java HotSpot(TM) Client VM" />

          <property name="mysql.dialect.string" value="org.hibernate.dialect.MySQLDialect" />

          <property name="basedir" value="F:\catissueWorkspace\DAOWithoutAudit\daojunits" />

          <property name="ant.java.version" value="1.5" />

          <property name="ant.core.lib" value="E:\Ant\apache-ant-1.7.0\lib\ant.jar" />

          <property name="file.encoding" value="Cp1252" />

          <property name="database.type" value="mysql" />

          <property name="proj.classes" value="../classes" />

          <property name="java.specification.version" value="1.5" />

          <property name="cobertura.lib" value="coberturalib" />

      </properties>

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testDAOInstance" time="0.0" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testInsertPerson" time="0.188" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testCaseDeleteObject" time="0.031" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testCaseInsertObject" time="0.031" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testCaseUpdateObject" time="0.032" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testRetrieveForCatissue" time="0.296" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testCaseRetriveAllObjects" time="0.016" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testCaseRetriveObject" time="0.016" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testCaseRetrieveObjectColumns" time="0.015" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testCaseRetrieveObjectAsPerID" time="0.031" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testRetriveInCondition" time="0.032" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testRetriveIsNotNullCondition" time="0.015" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testRetriveIsNullCondition" time="0.016" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testCaseExecuteQuery" time="0.0" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testRetrieveAttribute" time="0.125" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testRetriveComplexQuery" time="0.031" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testDAOFactoryMembers" time="0.0" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testDifferentMethodsOfHibernateMetaData" time="0.0" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testConstraintViolation" time="0.016" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testCaseExecuteQueryWithFixedResultSize" time="0.015" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testDAOConfigFactory" time="0.0" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testDefaultFactory" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testCaseExecuteQueryWithFixedResultSize" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testJDBCDAOInstance" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testExecuteUpdateJDBC" time="0.063" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testResultSet" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testCaseRetriveAllObjectsJDBC" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testCaseRetriveObjectJDBC" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testCaseRetrieveObjectColumnsJDBC" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testCaseRetrieveOnlyDistinctRowsJDBC" time="0.016" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testRetriveInConditionJDBC" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testRetriveIsNotNullConditionJDBC" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testRetriveIsNullConditionJDBC" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testRetriveNotEqualConditionJDBC" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testRetriveEqualConditionJDBC" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testBatchInsert" time="0.046" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testExecuteUpdate" time="0.032" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testExecuteUpdateforPreparedStatement" time="0.031" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testExecuteUpdateforMaliciousData" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testMultipleTransaction" time="0.14" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testCaseExecuteQueryforMaliciousCode" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testCaseExecuteQueryWithPreparedStmt" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testDAOConfigFactory" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testDefaultFactory" time="0.0" />

      <system-out><![CDATA[Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Hibernate 3.1.3
hibernate.properties not found
using CGLIB reflection optimizer
using JDK 1.4 java.sql.Timestamp handling
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
configuring from XML document
show_sql=false
dialect=org.hibernate.dialect.MySQLDialect
connection.driver_class=com.mysql.jdbc.Driver
connection.url=jdbc:mysql://ps4267:3306/daodb
connection.username=root
connection.password=root
null<-org.dom4j.tree.DefaultAttribute@1d4c61c [Attribute: name resource value "testhbm/User.hbm.xml"]
Reading mappings from resource: testhbm/User.hbm.xml
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
Mapping class: test.User -> test_user
Mapped property: identifier -> IDENTIFIER
Mapped property: emailAddress -> EMAIL_ADDRESS
Mapped property: firstName -> FIRST_NAME
Mapped property: lastName -> LAST_NAME
Mapped property: activityStatus -> ACTIVITY_STATUS
null<-org.dom4j.tree.DefaultAttribute@1893efe [Attribute: name resource value "testhbm/Person.hbm.xml"]
Reading mappings from resource: testhbm/Person.hbm.xml
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
Mapping class: test.Person -> test_person
Mapped property: identifier -> IDENTIFIER
Mapped property: name -> NAME
Mapped property: address -> ADDRESS_ID
Mapped property: orderCollection
null<-org.dom4j.tree.DefaultAttribute@b1b4c3 [Attribute: name resource value "testhbm/Address.hbm.xml"]
Reading mappings from resource: testhbm/Address.hbm.xml
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
Mapping class: test.Address -> test_address
Mapped property: identifier -> IDENTIFIER
Mapped property: street -> STREET
null<-org.dom4j.tree.DefaultAttribute@1efb836 [Attribute: name resource value "testhbm/Order.hbm.xml"]
Reading mappings from resource: testhbm/Order.hbm.xml
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
Mapping class: test.Order -> test_order
Mapped property: identifier -> IDENTIFIER
Mapped property: person -> person_id
Configured SessionFactory: null
properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) 2 Runtime Environment, Standard Edition, sun.boot.library.path=C:\Program Files\Java\jdk1.5.0_08\jre\bin, java.vm.version=1.5.0_08-b03, hibernate.connection.username=root, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=US, sun.os.patch.level=Service Pack 2, java.vm.specification.name=Java Virtual Machine Specification, user.dir=F:\catissueWorkspace\DAOWithoutAudit\daojunits, java.runtime.version=1.5.0_08-b03, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\Program Files\Java\jdk1.5.0_08\jre\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\DOCUME~1\KALPAN~1\LOCALS~1\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows XP, net.sourceforge.cobertura.datafile=F:\catissueWorkspace\DAOWithoutAudit\daojunits\cobertura.ser, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk1.5.0_08\jre\bin;.;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.5.0_08/bin/../jre/bin/client;C:/Program Files/Java/jdk1.5.0_08/bin/../jre/bin;C:\Tcl\bin;E:\Ant\apache-ant-1.7.0\bin;C:\Program Files\Java\jdk1.6.0\bin;C:\Program Files\DeID\;C:\Program Files\TortoiseCVS;C:\Program Files\Java\jdk1.5.0_08\bin;;F:\oracle\ora92\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\mysql server\bin;C:\Program Files\YourKit Java Profiler 7.0.11\bin\win32;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Windows Imaging\, java.specification.name=Java Platform API Specification, java.class.version=49.0, sun.management.compiler=HotSpot Client Compiler, os.version=5.1, connection.password=root, user.home=C:\Documents and Settings\kalpana_thakur, user.timezone=, connection.username=root, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=Cp1252, java.specification.version=1.5, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=false, user.name=kalpana_thakur, java.class.path=F:\catissueWorkspace\DAOWithoutAudit\daojunits\instrument;F:\catissueWorkspace\DAOWithoutAudit\classes;F:\catissueWorkspace\DAOWithoutAudit\lib\ant-contrib.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\antlr-2.7.5H3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\asm.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\cglib.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\commons-collections-3.2.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\commons-logging.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\dom4j-1.6.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\ehcache-1.2.3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\hibernate3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\j2ee.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\junit-4.5.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\log4j.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\mmtxProject.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\mysql-connector-java-5.0.8-bin.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\ojdbc14.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\washu-commons-1.1.4.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\src;F:\catissueWorkspace\DAOWithoutAudit\daojunits\classes;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\asm-2.2.1.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\asm-tree-2.2.1.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\cobertura.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\jakarta-oro-2.0.8.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\log4j.jar;E:\Ant\apache-ant-1.7.0\lib\junit-4.1.jar;E:\Ant\apache-ant-1.7.0\lib\ant-launcher.jar;E:\Ant\apache-ant-1.7.0\lib\ant.jar;E:\Ant\apache-ant-1.7.0\lib\ant-junit.jar, hibernate.show_sql=false, java.vm.specification.version=1.0, java.home=C:\Program Files\Java\jdk1.5.0_08\jre, sun.arch.data.model=32, hibernate.connection.url=jdbc:mysql://ps4267:3306/daodb, hibernate.dialect=org.hibernate.dialect.MySQLDialect, user.language=en, java.specification.vendor=Sun Microsystems Inc., awt.toolkit=sun.awt.windows.WToolkit, hibernate.cglib.use_reflection_optimizer=true, java.vm.info=mixed mode, sharing, java.version=1.5.0_08, java.ext.dirs=C:\Program Files\Java\jdk1.5.0_08\jre\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.5.0_08\jre\lib\rt.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\i18n.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\jce.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.5.0_08\jre\classes, java.vendor=Sun Microsystems Inc., connection.driver_class=com.mysql.jdbc.Driver, file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, connection.url=jdbc:mysql://ps4267:3306/daodb, dialect=org.hibernate.dialect.MySQLDialect, sun.cpu.isalist=}
Preparing to build session factory with filters : {}
processing extends queue
processing collection mappings
Second pass for collection: test.Person.orderCollection
Mapping collection: test.Person.orderCollection -> test_order
Mapped collection key: person_id, one-to-many: test.Order
processing native query and ResultSetMapping mappings
processing association property references
processing foreign key constraints
resolving reference to class: test.Person
resolving reference to class: test.Address
Using Hibernate built-in connection pool (not for production use!)
Hibernate connection pool size: 20
autocommit mode: false
using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://ps4267:3306/daodb
connection properties: {user=root, password=root}
total checked-out connections: 0
opening new JDBC connection
created connection to: jdbc:mysql://ps4267:3306/daodb, Isolation Level: 4
RDBMS: MySQL, version: 5.0.45-community-nt
JDBC driver: MySQL-AB JDBC Driver, version: mysql-connector-java-5.0.8 ( Revision: ${svn.Revision} )
returning connection to pool, pool size: 1
Using dialect: org.hibernate.dialect.MySQLDialect
Using default transaction strategy (direct JDBC transactions)
No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
Connection release mode: auto
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
Using ASTQueryTranslatorFactory
Query language substitutions: {}
Second-level cache: enabled
Query cache: disabled
Cache provider: org.hibernate.cache.EhCacheProvider
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Using dialect defined converter
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
building session factory
Session factory constructed with filter configurations : {}
instantiating session factory with properties: {java.runtime.name=Java(TM) 2 Runtime Environment, Standard Edition, hibernate.connection.password=root, sun.boot.library.path=C:\Program Files\Java\jdk1.5.0_08\jre\bin, java.vm.version=1.5.0_08-b03, hibernate.connection.username=root, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=US, sun.os.patch.level=Service Pack 2, java.vm.specification.name=Java Virtual Machine Specification, user.dir=F:\catissueWorkspace\DAOWithoutAudit\daojunits, java.runtime.version=1.5.0_08-b03, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\Program Files\Java\jdk1.5.0_08\jre\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\DOCUME~1\KALPAN~1\LOCALS~1\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows XP, net.sourceforge.cobertura.datafile=F:\catissueWorkspace\DAOWithoutAudit\daojunits\cobertura.ser, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk1.5.0_08\jre\bin;.;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.5.0_08/bin/../jre/bin/client;C:/Program Files/Java/jdk1.5.0_08/bin/../jre/bin;C:\Tcl\bin;E:\Ant\apache-ant-1.7.0\bin;C:\Program Files\Java\jdk1.6.0\bin;C:\Program Files\DeID\;C:\Program Files\TortoiseCVS;C:\Program Files\Java\jdk1.5.0_08\bin;;F:\oracle\ora92\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\mysql server\bin;C:\Program Files\YourKit Java Profiler 7.0.11\bin\win32;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Windows Imaging\, java.specification.name=Java Platform API Specification, java.class.version=49.0, sun.management.compiler=HotSpot Client Compiler, os.version=5.1, user.home=C:\Documents and Settings\kalpana_thakur, connection.password=root, user.timezone=, java.awt.printerjob=sun.awt.windows.WPrinterJob, connection.username=root, java.specification.version=1.5, file.encoding=Cp1252, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=false, java.class.path=F:\catissueWorkspace\DAOWithoutAudit\daojunits\instrument;F:\catissueWorkspace\DAOWithoutAudit\classes;F:\catissueWorkspace\DAOWithoutAudit\lib\ant-contrib.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\antlr-2.7.5H3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\asm.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\cglib.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\commons-collections-3.2.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\commons-logging.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\dom4j-1.6.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\ehcache-1.2.3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\hibernate3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\j2ee.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\junit-4.5.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\log4j.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\mmtxProject.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\mysql-connector-java-5.0.8-bin.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\ojdbc14.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\washu-commons-1.1.4.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\src;F:\catissueWorkspace\DAOWithoutAudit\daojunits\classes;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\asm-2.2.1.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\asm-tree-2.2.1.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\cobertura.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\jakarta-oro-2.0.8.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\log4j.jar;E:\Ant\apache-ant-1.7.0\lib\junit-4.1.jar;E:\Ant\apache-ant-1.7.0\lib\ant-launcher.jar;E:\Ant\apache-ant-1.7.0\lib\ant.jar;E:\Ant\apache-ant-1.7.0\lib\ant-junit.jar, user.name=kalpana_thakur, hibernate.show_sql=false, java.vm.specification.version=1.0, sun.arch.data.model=32, java.home=C:\Program Files\Java\jdk1.5.0_08\jre, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.connection.url=jdbc:mysql://ps4267:3306/daodb, java.specification.vendor=Sun Microsystems Inc., user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, hibernate.cglib.use_reflection_optimizer=true, java.version=1.5.0_08, java.ext.dirs=C:\Program Files\Java\jdk1.5.0_08\jre\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.5.0_08\jre\lib\rt.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\i18n.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\jce.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.5.0_08\jre\classes, java.vendor=Sun Microsystems Inc., file.separator=\, connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, connection.url=jdbc:mysql://ps4267:3306/daodb, sun.cpu.isalist=, dialect=org.hibernate.dialect.MySQLDialect}
Creating new CacheManager with default config
Configuring ehcache from classpath.
Configuring ehcache from ehcache.xml found in the classpath: file:/F:/catissueWorkspace/DAOWithoutAudit/daojunits/classes/ehcache.xml
Configuring ehcache from URL: file:/F:/catissueWorkspace/DAOWithoutAudit/daojunits/classes/ehcache.xml
Configuring ehcache from InputStream
Disk Store Path: C:\DOCUME~1\KALPAN~1\LOCALS~1\Temp\
No CacheManagerEventListenerFactory class specified. Skipping...
No CachePeerListenerFactoryConfiguration specified. Not configuring a CacheManagerPeerListener.
No CachePeerProviderFactoryConfiguration specified. Not configuring a CacheManagerPeerProvider.
No BootstrapCacheLoaderFactory class specified. Skipping...
No BootstrapCacheLoaderFactory class specified. Skipping...
No BootstrapCacheLoaderFactory class specified. Skipping...
Initialized net.sf.ehcache.store.LruMemoryStore for cacheForCaTissueCore
cacheForCaTissueCore Cache: Using SpoolingLinkedHashMap implementation
Initialised cache: cacheForCaTissueCore
Deleting data file edu.wustl.catissuecore.domain.Participant.data
Initialized net.sf.ehcache.store.LruMemoryStore for edu.wustl.catissuecore.domain.Participant
edu.wustl.catissuecore.domain.Participant Cache: Using SpoolingLinkedHashMap implementation
Initialised cache: edu.wustl.catissuecore.domain.Participant
instantiating cache region: test.Address usage strategy: read-write
Could not find configuration [test.Address]; using defaults.
Deleting data file test.Address.data
Initialized net.sf.ehcache.store.LruMemoryStore for test.Address
test.Address Cache: Using SpoolingLinkedHashMap implementation
Initialised cache: test.Address
started EHCache region: test.Address
Static SQL for entity: test.Address
 Version select: select IDENTIFIER from test_address where IDENTIFIER =?
 Snapshot select: select address_.IDENTIFIER, address_.STREET as STREET2_ from test_address address_ where address_.IDENTIFIER=?
 Insert 0: insert into test_address (STREET, IDENTIFIER) values (?, ?)
 Update 0: update test_address set STREET=? where IDENTIFIER=?
 Delete 0: delete from test_address where IDENTIFIER=?
 Identity insert: insert into test_address (STREET) values (?)
instantiating cache region: test.Order usage strategy: read-write
Could not find configuration [test.Order]; using defaults.
Deleting data file test.Order.data
Initialized net.sf.ehcache.store.LruMemoryStore for test.Order
test.Order Cache: Using SpoolingLinkedHashMap implementation
Initialised cache: test.Order
started EHCache region: test.Order
Static SQL for entity: test.Order
 Version select: select IDENTIFIER from test_order where IDENTIFIER =?
 Snapshot select: select order_.IDENTIFIER, order_.person_id as person2_3_ from test_order order_ where order_.IDENTIFIER=?
 Insert 0: insert into test_order (person_id, IDENTIFIER) values (?, ?)
 Update 0: update test_order set person_id=? where IDENTIFIER=?
 Delete 0: delete from test_order where IDENTIFIER=?
 Identity insert: insert into test_order (person_id) values (?)
instantiating cache region: test.Person usage strategy: read-write
Could not find configuration [test.Person]; using defaults.
Deleting data file test.Person.data
Initialized net.sf.ehcache.store.LruMemoryStore for test.Person
test.Person Cache: Using SpoolingLinkedHashMap implementation
Initialised cache: test.Person
started EHCache region: test.Person
Static SQL for entity: test.Person
 Version select: select IDENTIFIER from test_person where IDENTIFIER =?
 Snapshot select: select person_.IDENTIFIER, person_.NAME as NAME1_, person_.ADDRESS_ID as ADDRESS3_1_ from test_person person_ where person_.IDENTIFIER=?
 Insert 0: insert into test_person (NAME, ADDRESS_ID, IDENTIFIER) values (?, ?, ?)
 Update 0: update test_person set NAME=?, ADDRESS_ID=? where IDENTIFIER=?
 Delete 0: delete from test_person where IDENTIFIER=?
 Identity insert: insert into test_person (NAME, ADDRESS_ID) values (?, ?)
instantiating cache region: test.User usage strategy: read-write
Could not find configuration [test.User]; using defaults.
Deleting data file test.User.data
Initialized net.sf.ehcache.store.LruMemoryStore for test.User
test.User Cache: Using SpoolingLinkedHashMap implementation
Initialised cache: test.User
started EHCache region: test.User
Static SQL for entity: test.User
 Version select: select IDENTIFIER from test_user where IDENTIFIER =?
 Snapshot select: select user_.IDENTIFIER, user_.EMAIL_ADDRESS as EMAIL2_0_, user_.FIRST_NAME as FIRST3_0_, user_.LAST_NAME as LAST4_0_, user_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user_ where user_.IDENTIFIER=?
 Insert 0: insert into test_user (EMAIL_ADDRESS, FIRST_NAME, LAST_NAME, ACTIVITY_STATUS, IDENTIFIER) values (?, ?, ?, ?, ?)
 Update 0: update test_user set EMAIL_ADDRESS=?, FIRST_NAME=?, LAST_NAME=?, ACTIVITY_STATUS=? where IDENTIFIER=?
 Delete 0: delete from test_user where IDENTIFIER=?
 Identity insert: insert into test_user (EMAIL_ADDRESS, FIRST_NAME, LAST_NAME, ACTIVITY_STATUS) values (?, ?, ?, ?)
instantiating cache region: test.Person.orderCollection usage strategy: read-write
Could not find configuration [test.Person.orderCollection]; using defaults.
Deleting data file test.Person.orderCollection.data
Initialized net.sf.ehcache.store.LruMemoryStore for test.Person.orderCollection
test.Person.orderCollection Cache: Using SpoolingLinkedHashMap implementation
Initialised cache: test.Person.orderCollection
started EHCache region: test.Person.orderCollection
Static SQL for collection: test.Person.orderCollection
 Row insert: update test_order set person_id=? where IDENTIFIER=?
 Row delete: update test_order set person_id=null where person_id=? and IDENTIFIER=?
 One-shot delete: update test_order set person_id=null where person_id=?
Static select for entity test.Address: select address0_.IDENTIFIER as IDENTIFIER2_0_, address0_.STREET as STREET2_0_ from test_address address0_ where address0_.IDENTIFIER=?
Static select for entity test.Address: select address0_.IDENTIFIER as IDENTIFIER2_0_, address0_.STREET as STREET2_0_ from test_address address0_ where address0_.IDENTIFIER=?
Static select for entity test.Address: select address0_.IDENTIFIER as IDENTIFIER2_0_, address0_.STREET as STREET2_0_ from test_address address0_ where address0_.IDENTIFIER=? for update
Static select for entity test.Address: select address0_.IDENTIFIER as IDENTIFIER2_0_, address0_.STREET as STREET2_0_ from test_address address0_ where address0_.IDENTIFIER=? for update
Static select for action ACTION_MERGE on entity test.Address: select address0_.IDENTIFIER as IDENTIFIER2_0_, address0_.STREET as STREET2_0_ from test_address address0_ where address0_.IDENTIFIER=?
Static select for action ACTION_REFRESH on entity test.Address: select address0_.IDENTIFIER as IDENTIFIER2_0_, address0_.STREET as STREET2_0_ from test_address address0_ where address0_.IDENTIFIER=?
Static select for entity test.Person: select person0_.IDENTIFIER as IDENTIFIER1_0_, person0_.NAME as NAME1_0_, person0_.ADDRESS_ID as ADDRESS3_1_0_ from test_person person0_ where person0_.IDENTIFIER=?
Static select for entity test.Person: select person0_.IDENTIFIER as IDENTIFIER1_0_, person0_.NAME as NAME1_0_, person0_.ADDRESS_ID as ADDRESS3_1_0_ from test_person person0_ where person0_.IDENTIFIER=?
Static select for entity test.Person: select person0_.IDENTIFIER as IDENTIFIER1_0_, person0_.NAME as NAME1_0_, person0_.ADDRESS_ID as ADDRESS3_1_0_ from test_person person0_ where person0_.IDENTIFIER=? for update
Static select for entity test.Person: select person0_.IDENTIFIER as IDENTIFIER1_0_, person0_.NAME as NAME1_0_, person0_.ADDRESS_ID as ADDRESS3_1_0_ from test_person person0_ where person0_.IDENTIFIER=? for update
Static select for action ACTION_MERGE on entity test.Person: select person0_.IDENTIFIER as IDENTIFIER1_1_, person0_.NAME as NAME1_1_, person0_.ADDRESS_ID as ADDRESS3_1_1_, ordercolle1_.person_id as person2_3_, ordercolle1_.IDENTIFIER as IDENTIFIER3_, ordercolle1_.IDENTIFIER as IDENTIFIER3_0_, ordercolle1_.person_id as person2_3_0_ from test_person person0_ left outer join test_order ordercolle1_ on person0_.IDENTIFIER=ordercolle1_.person_id where person0_.IDENTIFIER=?
Static select for action ACTION_REFRESH on entity test.Person: select person0_.IDENTIFIER as IDENTIFIER1_1_, person0_.NAME as NAME1_1_, person0_.ADDRESS_ID as ADDRESS3_1_1_, ordercolle1_.person_id as person2_3_, ordercolle1_.IDENTIFIER as IDENTIFIER3_, ordercolle1_.IDENTIFIER as IDENTIFIER3_0_, ordercolle1_.person_id as person2_3_0_ from test_person person0_ left outer join test_order ordercolle1_ on person0_.IDENTIFIER=ordercolle1_.person_id where person0_.IDENTIFIER=?
Static select for entity test.Order: select order0_.IDENTIFIER as IDENTIFIER3_0_, order0_.person_id as person2_3_0_ from test_order order0_ where order0_.IDENTIFIER=?
Static select for entity test.Order: select order0_.IDENTIFIER as IDENTIFIER3_0_, order0_.person_id as person2_3_0_ from test_order order0_ where order0_.IDENTIFIER=?
Static select for entity test.Order: select order0_.IDENTIFIER as IDENTIFIER3_0_, order0_.person_id as person2_3_0_ from test_order order0_ where order0_.IDENTIFIER=? for update
Static select for entity test.Order: select order0_.IDENTIFIER as IDENTIFIER3_0_, order0_.person_id as person2_3_0_ from test_order order0_ where order0_.IDENTIFIER=? for update
Static select for action ACTION_MERGE on entity test.Order: select order0_.IDENTIFIER as IDENTIFIER3_0_, order0_.person_id as person2_3_0_ from test_order order0_ where order0_.IDENTIFIER=?
Static select for action ACTION_REFRESH on entity test.Order: select order0_.IDENTIFIER as IDENTIFIER3_0_, order0_.person_id as person2_3_0_ from test_order order0_ where order0_.IDENTIFIER=?
Static select for entity test.User: select user0_.IDENTIFIER as IDENTIFIER0_0_, user0_.EMAIL_ADDRESS as EMAIL2_0_0_, user0_.FIRST_NAME as FIRST3_0_0_, user0_.LAST_NAME as LAST4_0_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_0_ from test_user user0_ where user0_.IDENTIFIER=?
Static select for entity test.User: select user0_.IDENTIFIER as IDENTIFIER0_0_, user0_.EMAIL_ADDRESS as EMAIL2_0_0_, user0_.FIRST_NAME as FIRST3_0_0_, user0_.LAST_NAME as LAST4_0_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_0_ from test_user user0_ where user0_.IDENTIFIER=?
Static select for entity test.User: select user0_.IDENTIFIER as IDENTIFIER0_0_, user0_.EMAIL_ADDRESS as EMAIL2_0_0_, user0_.FIRST_NAME as FIRST3_0_0_, user0_.LAST_NAME as LAST4_0_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_0_ from test_user user0_ where user0_.IDENTIFIER=? for update
Static select for entity test.User: select user0_.IDENTIFIER as IDENTIFIER0_0_, user0_.EMAIL_ADDRESS as EMAIL2_0_0_, user0_.FIRST_NAME as FIRST3_0_0_, user0_.LAST_NAME as LAST4_0_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_0_ from test_user user0_ where user0_.IDENTIFIER=? for update
Static select for action ACTION_MERGE on entity test.User: select user0_.IDENTIFIER as IDENTIFIER0_0_, user0_.EMAIL_ADDRESS as EMAIL2_0_0_, user0_.FIRST_NAME as FIRST3_0_0_, user0_.LAST_NAME as LAST4_0_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_0_ from test_user user0_ where user0_.IDENTIFIER=?
Static select for action ACTION_REFRESH on entity test.User: select user0_.IDENTIFIER as IDENTIFIER0_0_, user0_.EMAIL_ADDRESS as EMAIL2_0_0_, user0_.FIRST_NAME as FIRST3_0_0_, user0_.LAST_NAME as LAST4_0_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_0_ from test_user user0_ where user0_.IDENTIFIER=?
Static select for one-to-many test.Person.orderCollection: select ordercolle0_.person_id as person2_1_, ordercolle0_.IDENTIFIER as IDENTIFIER1_, ordercolle0_.IDENTIFIER as IDENTIFIER3_0_, ordercolle0_.person_id as person2_3_0_ from test_order ordercolle0_ where ordercolle0_.person_id=?
initializing class SessionFactoryObjectFactory
registered: 8ad847f8254dece201254dece5690000 (unnamed)
Not binding factory to JNDI, no JNDI name configured
instantiated session factory
Checking 0 named HQL queries
Checking 0 named SQL queries
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
configuring from XML document
show_sql=false
dialect=org.hibernate.dialect.Oracle9Dialect
connection.driver_class=oracle.jdbc.driver.OracleDriver
connection.url=jdbc:oracle:thin:@ps0741:1521:oranew
connection.username=daodb
connection.password=daodb
null<-org.dom4j.tree.DefaultAttribute@145f0e3 [Attribute: name resource value "testhbm/User.hbm.xml"]
Reading mappings from resource: testhbm/User.hbm.xml
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
Mapping class: test.User -> test_user
Mapped property: identifier -> IDENTIFIER
Mapped property: emailAddress -> EMAIL_ADDRESS
Mapped property: firstName -> FIRST_NAME
Mapped property: lastName -> LAST_NAME
Mapped property: activityStatus -> ACTIVITY_STATUS
null<-org.dom4j.tree.DefaultAttribute@1d0fafc [Attribute: name resource value "testhbm/Person.hbm.xml"]
Reading mappings from resource: testhbm/Person.hbm.xml
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
Mapping class: test.Person -> test_person
Mapped property: identifier -> IDENTIFIER
Mapped property: name -> NAME
Mapped property: address -> ADDRESS_ID
Mapped property: orderCollection
null<-org.dom4j.tree.DefaultAttribute@170bea5 [Attribute: name resource value "testhbm/Address.hbm.xml"]
Reading mappings from resource: testhbm/Address.hbm.xml
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
Mapping class: test.Address -> test_address
Mapped property: identifier -> IDENTIFIER
Mapped property: street -> STREET
null<-org.dom4j.tree.DefaultAttribute@d0af9b [Attribute: name resource value "testhbm/Order.hbm.xml"]
Reading mappings from resource: testhbm/Order.hbm.xml
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
Mapping class: test.Order -> test_order
Mapped property: identifier -> IDENTIFIER
Mapped property: person -> person_id
Configured SessionFactory: null
properties: {hibernate.connection.password=daodb, java.runtime.name=Java(TM) 2 Runtime Environment, Standard Edition, sun.boot.library.path=C:\Program Files\Java\jdk1.5.0_08\jre\bin, java.vm.version=1.5.0_08-b03, hibernate.connection.username=daodb, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=US, sun.os.patch.level=Service Pack 2, java.vm.specification.name=Java Virtual Machine Specification, user.dir=F:\catissueWorkspace\DAOWithoutAudit\daojunits, java.runtime.version=1.5.0_08-b03, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\Program Files\Java\jdk1.5.0_08\jre\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\DOCUME~1\KALPAN~1\LOCALS~1\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows XP, net.sourceforge.cobertura.datafile=F:\catissueWorkspace\DAOWithoutAudit\daojunits\cobertura.ser, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk1.5.0_08\jre\bin;.;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.5.0_08/bin/../jre/bin/client;C:/Program Files/Java/jdk1.5.0_08/bin/../jre/bin;C:\Tcl\bin;E:\Ant\apache-ant-1.7.0\bin;C:\Program Files\Java\jdk1.6.0\bin;C:\Program Files\DeID\;C:\Program Files\TortoiseCVS;C:\Program Files\Java\jdk1.5.0_08\bin;;F:\oracle\ora92\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\mysql server\bin;C:\Program Files\YourKit Java Profiler 7.0.11\bin\win32;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Windows Imaging\, java.specification.name=Java Platform API Specification, java.class.version=49.0, sun.management.compiler=HotSpot Client Compiler, os.version=5.1, connection.password=daodb, user.home=C:\Documents and Settings\kalpana_thakur, user.timezone=, connection.username=daodb, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=Cp1252, java.specification.version=1.5, hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver, show_sql=false, user.name=kalpana_thakur, java.class.path=F:\catissueWorkspace\DAOWithoutAudit\daojunits\instrument;F:\catissueWorkspace\DAOWithoutAudit\classes;F:\catissueWorkspace\DAOWithoutAudit\lib\ant-contrib.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\antlr-2.7.5H3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\asm.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\cglib.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\commons-collections-3.2.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\commons-logging.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\dom4j-1.6.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\ehcache-1.2.3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\hibernate3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\j2ee.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\junit-4.5.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\log4j.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\mmtxProject.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\mysql-connector-java-5.0.8-bin.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\ojdbc14.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\washu-commons-1.1.4.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\src;F:\catissueWorkspace\DAOWithoutAudit\daojunits\classes;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\asm-2.2.1.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\asm-tree-2.2.1.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\cobertura.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\jakarta-oro-2.0.8.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\log4j.jar;E:\Ant\apache-ant-1.7.0\lib\junit-4.1.jar;E:\Ant\apache-ant-1.7.0\lib\ant-launcher.jar;E:\Ant\apache-ant-1.7.0\lib\ant.jar;E:\Ant\apache-ant-1.7.0\lib\ant-junit.jar, hibernate.show_sql=false, java.vm.specification.version=1.0, java.home=C:\Program Files\Java\jdk1.5.0_08\jre, sun.arch.data.model=32, hibernate.connection.url=jdbc:oracle:thin:@ps0741:1521:oranew, hibernate.dialect=org.hibernate.dialect.Oracle9Dialect, user.language=en, java.specification.vendor=Sun Microsystems Inc., awt.toolkit=sun.awt.windows.WToolkit, hibernate.cglib.use_reflection_optimizer=true, java.vm.info=mixed mode, sharing, java.version=1.5.0_08, java.ext.dirs=C:\Program Files\Java\jdk1.5.0_08\jre\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.5.0_08\jre\lib\rt.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\i18n.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\jce.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.5.0_08\jre\classes, java.vendor=Sun Microsystems Inc., connection.driver_class=oracle.jdbc.driver.OracleDriver, file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, connection.url=jdbc:oracle:thin:@ps0741:1521:oranew, dialect=org.hibernate.dialect.Oracle9Dialect, sun.cpu.isalist=}
Preparing to build session factory with filters : {}
processing extends queue
processing collection mappings
Second pass for collection: test.Person.orderCollection
Mapping collection: test.Person.orderCollection -> test_order
Mapped collection key: person_id, one-to-many: test.Order
processing native query and ResultSetMapping mappings
processing association property references
processing foreign key constraints
resolving reference to class: test.Person
resolving reference to class: test.Address
Using Hibernate built-in connection pool (not for production use!)
Hibernate connection pool size: 20
autocommit mode: false
using driver: oracle.jdbc.driver.OracleDriver at URL: jdbc:oracle:thin:@ps0741:1521:oranew
connection properties: {user=daodb, password=daodb}
total checked-out connections: 0
opening new JDBC connection
created connection to: jdbc:oracle:thin:@ps0741:1521:oranew, Isolation Level: 2
could not get database version from JDBC metadata
RDBMS: Oracle, version: Oracle Database 10g Enterprise Edition Release 10.2.0.1.0 - Production
With the Partitioning, OLAP and Data Mining options
JDBC driver: Oracle JDBC driver, version: 9.2.0.5.0
returning connection to pool, pool size: 1
Using dialect: org.hibernate.dialect.Oracle9Dialect
Using default transaction strategy (direct JDBC transactions)
No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): disabled
Connection release mode: auto
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
Using ASTQueryTranslatorFactory
Query language substitutions: {}
Second-level cache: enabled
Query cache: disabled
Cache provider: org.hibernate.cache.EhCacheProvider
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Using dialect defined converter
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
building session factory
Session factory constructed with filter configurations : {}
instantiating session factory with properties: {java.runtime.name=Java(TM) 2 Runtime Environment, Standard Edition, hibernate.connection.password=daodb, sun.boot.library.path=C:\Program Files\Java\jdk1.5.0_08\jre\bin, java.vm.version=1.5.0_08-b03, hibernate.connection.username=daodb, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=US, sun.os.patch.level=Service Pack 2, java.vm.specification.name=Java Virtual Machine Specification, user.dir=F:\catissueWorkspace\DAOWithoutAudit\daojunits, java.runtime.version=1.5.0_08-b03, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\Program Files\Java\jdk1.5.0_08\jre\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\DOCUME~1\KALPAN~1\LOCALS~1\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows XP, net.sourceforge.cobertura.datafile=F:\catissueWorkspace\DAOWithoutAudit\daojunits\cobertura.ser, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk1.5.0_08\jre\bin;.;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.5.0_08/bin/../jre/bin/client;C:/Program Files/Java/jdk1.5.0_08/bin/../jre/bin;C:\Tcl\bin;E:\Ant\apache-ant-1.7.0\bin;C:\Program Files\Java\jdk1.6.0\bin;C:\Program Files\DeID\;C:\Program Files\TortoiseCVS;C:\Program Files\Java\jdk1.5.0_08\bin;;F:\oracle\ora92\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\mysql server\bin;C:\Program Files\YourKit Java Profiler 7.0.11\bin\win32;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Windows Imaging\, java.specification.name=Java Platform API Specification, java.class.version=49.0, sun.management.compiler=HotSpot Client Compiler, os.version=5.1, user.home=C:\Documents and Settings\kalpana_thakur, connection.password=daodb, user.timezone=, java.awt.printerjob=sun.awt.windows.WPrinterJob, connection.username=daodb, java.specification.version=1.5, file.encoding=Cp1252, hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver, show_sql=false, java.class.path=F:\catissueWorkspace\DAOWithoutAudit\daojunits\instrument;F:\catissueWorkspace\DAOWithoutAudit\classes;F:\catissueWorkspace\DAOWithoutAudit\lib\ant-contrib.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\antlr-2.7.5H3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\asm.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\cglib.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\commons-collections-3.2.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\commons-logging.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\dom4j-1.6.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\ehcache-1.2.3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\hibernate3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\j2ee.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\junit-4.5.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\log4j.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\mmtxProject.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\mysql-connector-java-5.0.8-bin.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\ojdbc14.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\washu-commons-1.1.4.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\src;F:\catissueWorkspace\DAOWithoutAudit\daojunits\classes;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\asm-2.2.1.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\asm-tree-2.2.1.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\cobertura.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\jakarta-oro-2.0.8.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\log4j.jar;E:\Ant\apache-ant-1.7.0\lib\junit-4.1.jar;E:\Ant\apache-ant-1.7.0\lib\ant-launcher.jar;E:\Ant\apache-ant-1.7.0\lib\ant.jar;E:\Ant\apache-ant-1.7.0\lib\ant-junit.jar, user.name=kalpana_thakur, hibernate.show_sql=false, java.vm.specification.version=1.0, sun.arch.data.model=32, java.home=C:\Program Files\Java\jdk1.5.0_08\jre, hibernate.dialect=org.hibernate.dialect.Oracle9Dialect, hibernate.connection.url=jdbc:oracle:thin:@ps0741:1521:oranew, java.specification.vendor=Sun Microsystems Inc., user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, hibernate.cglib.use_reflection_optimizer=true, java.version=1.5.0_08, java.ext.dirs=C:\Program Files\Java\jdk1.5.0_08\jre\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.5.0_08\jre\lib\rt.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\i18n.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\jce.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.5.0_08\jre\classes, java.vendor=Sun Microsystems Inc., file.separator=\, connection.driver_class=oracle.jdbc.driver.OracleDriver, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, connection.url=jdbc:oracle:thin:@ps0741:1521:oranew, sun.cpu.isalist=, dialect=org.hibernate.dialect.Oracle9Dialect}
Attempting to create an existing singleton. Existing singleton returned.
instantiating cache region: test.Address usage strategy: read-write
Static SQL for entity: test.Address
 Version select: select IDENTIFIER from test_address where IDENTIFIER =?
 Snapshot select: select address_.IDENTIFIER, address_.STREET as STREET10_ from test_address address_ where address_.IDENTIFIER=?
 Insert 0: insert into test_address (STREET, IDENTIFIER) values (?, ?)
 Update 0: update test_address set STREET=? where IDENTIFIER=?
 Delete 0: delete from test_address where IDENTIFIER=?
instantiating cache region: test.Order usage strategy: read-write
Static SQL for entity: test.Order
 Version select: select IDENTIFIER from test_order where IDENTIFIER =?
 Snapshot select: select order_.IDENTIFIER, order_.person_id as person2_11_ from test_order order_ where order_.IDENTIFIER=?
 Insert 0: insert into test_order (person_id, IDENTIFIER) values (?, ?)
 Update 0: update test_order set person_id=? where IDENTIFIER=?
 Delete 0: delete from test_order where IDENTIFIER=?
instantiating cache region: test.Person usage strategy: read-write
Static SQL for entity: test.Person
 Version select: select IDENTIFIER from test_person where IDENTIFIER =?
 Snapshot select: select person_.IDENTIFIER, person_.NAME as NAME9_, person_.ADDRESS_ID as ADDRESS3_9_ from test_person person_ where person_.IDENTIFIER=?
 Insert 0: insert into test_person (NAME, ADDRESS_ID, IDENTIFIER) values (?, ?, ?)
 Update 0: update test_person set NAME=?, ADDRESS_ID=? where IDENTIFIER=?
 Delete 0: delete from test_person where IDENTIFIER=?
instantiating cache region: test.User usage strategy: read-write
Static SQL for entity: test.User
 Version select: select IDENTIFIER from test_user where IDENTIFIER =?
 Snapshot select: select user_.IDENTIFIER, user_.EMAIL_ADDRESS as EMAIL2_8_, user_.FIRST_NAME as FIRST3_8_, user_.LAST_NAME as LAST4_8_, user_.ACTIVITY_STATUS as ACTIVITY5_8_ from test_user user_ where user_.IDENTIFIER=?
 Insert 0: insert into test_user (EMAIL_ADDRESS, FIRST_NAME, LAST_NAME, ACTIVITY_STATUS, IDENTIFIER) values (?, ?, ?, ?, ?)
 Update 0: update test_user set EMAIL_ADDRESS=?, FIRST_NAME=?, LAST_NAME=?, ACTIVITY_STATUS=? where IDENTIFIER=?
 Delete 0: delete from test_user where IDENTIFIER=?
instantiating cache region: test.Person.orderCollection usage strategy: read-write
Static SQL for collection: test.Person.orderCollection
 Row insert: update test_order set person_id=? where IDENTIFIER=?
 Row delete: update test_order set person_id=null where person_id=? and IDENTIFIER=?
 One-shot delete: update test_order set person_id=null where person_id=?
Static select for entity test.Address: select address0_.IDENTIFIER as IDENTIFIER10_0_, address0_.STREET as STREET10_0_ from test_address address0_ where address0_.IDENTIFIER=?
Static select for entity test.Address: select address0_.IDENTIFIER as IDENTIFIER10_0_, address0_.STREET as STREET10_0_ from test_address address0_ where address0_.IDENTIFIER=?
Static select for entity test.Address: select address0_.IDENTIFIER as IDENTIFIER10_0_, address0_.STREET as STREET10_0_ from test_address address0_ where address0_.IDENTIFIER=? for update
Static select for entity test.Address: select address0_.IDENTIFIER as IDENTIFIER10_0_, address0_.STREET as STREET10_0_ from test_address address0_ where address0_.IDENTIFIER=? for update nowait
Static select for action ACTION_MERGE on entity test.Address: select address0_.IDENTIFIER as IDENTIFIER10_0_, address0_.STREET as STREET10_0_ from test_address address0_ where address0_.IDENTIFIER=?
Static select for action ACTION_REFRESH on entity test.Address: select address0_.IDENTIFIER as IDENTIFIER10_0_, address0_.STREET as STREET10_0_ from test_address address0_ where address0_.IDENTIFIER=?
Static select for entity test.Person: select person0_.IDENTIFIER as IDENTIFIER9_0_, person0_.NAME as NAME9_0_, person0_.ADDRESS_ID as ADDRESS3_9_0_ from test_person person0_ where person0_.IDENTIFIER=?
Static select for entity test.Person: select person0_.IDENTIFIER as IDENTIFIER9_0_, person0_.NAME as NAME9_0_, person0_.ADDRESS_ID as ADDRESS3_9_0_ from test_person person0_ where person0_.IDENTIFIER=?
Static select for entity test.Person: select person0_.IDENTIFIER as IDENTIFIER9_0_, person0_.NAME as NAME9_0_, person0_.ADDRESS_ID as ADDRESS3_9_0_ from test_person person0_ where person0_.IDENTIFIER=? for update
Static select for entity test.Person: select person0_.IDENTIFIER as IDENTIFIER9_0_, person0_.NAME as NAME9_0_, person0_.ADDRESS_ID as ADDRESS3_9_0_ from test_person person0_ where person0_.IDENTIFIER=? for update nowait
Static select for action ACTION_MERGE on entity test.Person: select person0_.IDENTIFIER as IDENTIFIER9_1_, person0_.NAME as NAME9_1_, person0_.ADDRESS_ID as ADDRESS3_9_1_, ordercolle1_.person_id as person2_3_, ordercolle1_.IDENTIFIER as IDENTIFIER3_, ordercolle1_.IDENTIFIER as IDENTIFIER11_0_, ordercolle1_.person_id as person2_11_0_ from test_person person0_ left outer join test_order ordercolle1_ on person0_.IDENTIFIER=ordercolle1_.person_id where person0_.IDENTIFIER=?
Static select for action ACTION_REFRESH on entity test.Person: select person0_.IDENTIFIER as IDENTIFIER9_1_, person0_.NAME as NAME9_1_, person0_.ADDRESS_ID as ADDRESS3_9_1_, ordercolle1_.person_id as person2_3_, ordercolle1_.IDENTIFIER as IDENTIFIER3_, ordercolle1_.IDENTIFIER as IDENTIFIER11_0_, ordercolle1_.person_id as person2_11_0_ from test_person person0_ left outer join test_order ordercolle1_ on person0_.IDENTIFIER=ordercolle1_.person_id where person0_.IDENTIFIER=?
Static select for entity test.Order: select order0_.IDENTIFIER as IDENTIFIER11_0_, order0_.person_id as person2_11_0_ from test_order order0_ where order0_.IDENTIFIER=?
Static select for entity test.Order: select order0_.IDENTIFIER as IDENTIFIER11_0_, order0_.person_id as person2_11_0_ from test_order order0_ where order0_.IDENTIFIER=?
Static select for entity test.Order: select order0_.IDENTIFIER as IDENTIFIER11_0_, order0_.person_id as person2_11_0_ from test_order order0_ where order0_.IDENTIFIER=? for update
Static select for entity test.Order: select order0_.IDENTIFIER as IDENTIFIER11_0_, order0_.person_id as person2_11_0_ from test_order order0_ where order0_.IDENTIFIER=? for update nowait
Static select for action ACTION_MERGE on entity test.Order: select order0_.IDENTIFIER as IDENTIFIER11_0_, order0_.person_id as person2_11_0_ from test_order order0_ where order0_.IDENTIFIER=?
Static select for action ACTION_REFRESH on entity test.Order: select order0_.IDENTIFIER as IDENTIFIER11_0_, order0_.person_id as person2_11_0_ from test_order order0_ where order0_.IDENTIFIER=?
Static select for entity test.User: select user0_.IDENTIFIER as IDENTIFIER8_0_, user0_.EMAIL_ADDRESS as EMAIL2_8_0_, user0_.FIRST_NAME as FIRST3_8_0_, user0_.LAST_NAME as LAST4_8_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_8_0_ from test_user user0_ where user0_.IDENTIFIER=?
Static select for entity test.User: select user0_.IDENTIFIER as IDENTIFIER8_0_, user0_.EMAIL_ADDRESS as EMAIL2_8_0_, user0_.FIRST_NAME as FIRST3_8_0_, user0_.LAST_NAME as LAST4_8_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_8_0_ from test_user user0_ where user0_.IDENTIFIER=?
Static select for entity test.User: select user0_.IDENTIFIER as IDENTIFIER8_0_, user0_.EMAIL_ADDRESS as EMAIL2_8_0_, user0_.FIRST_NAME as FIRST3_8_0_, user0_.LAST_NAME as LAST4_8_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_8_0_ from test_user user0_ where user0_.IDENTIFIER=? for update
Static select for entity test.User: select user0_.IDENTIFIER as IDENTIFIER8_0_, user0_.EMAIL_ADDRESS as EMAIL2_8_0_, user0_.FIRST_NAME as FIRST3_8_0_, user0_.LAST_NAME as LAST4_8_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_8_0_ from test_user user0_ where user0_.IDENTIFIER=? for update nowait
Static select for action ACTION_MERGE on entity test.User: select user0_.IDENTIFIER as IDENTIFIER8_0_, user0_.EMAIL_ADDRESS as EMAIL2_8_0_, user0_.FIRST_NAME as FIRST3_8_0_, user0_.LAST_NAME as LAST4_8_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_8_0_ from test_user user0_ where user0_.IDENTIFIER=?
Static select for action ACTION_REFRESH on entity test.User: select user0_.IDENTIFIER as IDENTIFIER8_0_, user0_.EMAIL_ADDRESS as EMAIL2_8_0_, user0_.FIRST_NAME as FIRST3_8_0_, user0_.LAST_NAME as LAST4_8_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_8_0_ from test_user user0_ where user0_.IDENTIFIER=?
Static select for one-to-many test.Person.orderCollection: select ordercolle0_.person_id as person2_1_, ordercolle0_.IDENTIFIER as IDENTIFIER1_, ordercolle0_.IDENTIFIER as IDENTIFIER11_0_, ordercolle0_.person_id as person2_11_0_ from test_order ordercolle0_ where ordercolle0_.person_id=?
registered: 8ad847f8254dece201254dece8860001 (unnamed)
Not binding factory to JNDI, no JNDI name configured
instantiated session factory
Checking 0 named HQL queries
Checking 0 named SQL queries
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5159865505562624
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
begin
current autocommit status: false
after transaction begin
Insert Object
saving transient instance
saving [test.Address#<null>]
executing insertions
Inserting entity: test.Address (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into test_address (STREET) values (?)
preparing statement
Dehydrating entity: [test.Address#<null>]
binding 'Street unknown' to parameter: 1
Natively generated identity: 115
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
Insert Object
saving transient instance
saving [test.Person#<null>]
executing insertions
processing cascade ACTION_SAVE_UPDATE for: test.Person
done processing cascade ACTION_SAVE_UPDATE for: test.Person
Wrapped collection in role: test.Person.orderCollection
Inserting entity: test.Person (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into test_person (NAME, ADDRESS_ID) values (?, ?)
preparing statement
Dehydrating entity: [test.Person#<null>]
binding 'Kalpana' to parameter: 1
binding '115' to parameter: 2
Natively generated identity: 1
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
processing cascade ACTION_SAVE_UPDATE for: test.Person
cascade ACTION_SAVE_UPDATE for collection: test.Person.orderCollection
cascading to saveOrUpdate: test.Order
transient instance of: test.Order
saving transient instance
saving [test.Order#<null>]
executing insertions
Inserting entity: test.Order (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into test_order (person_id) values (?)
preparing statement
Dehydrating entity: [test.Order#<null>]
binding '1' to parameter: 1
Natively generated identity: 1
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
done cascade ACTION_SAVE_UPDATE for collection: test.Person.orderCollection
deleting orphans for collection: test.Person.orderCollection
done deleting orphans for collection: test.Person.orderCollection
done processing cascade ACTION_SAVE_UPDATE for: test.Person
Session commit
commit
automatically flushing session
flushing session
processing flush-time cascades
processing cascade ACTION_SAVE_UPDATE for: test.Person
cascade ACTION_SAVE_UPDATE for collection: test.Person.orderCollection
cascading to saveOrUpdate: test.Order
persistent instance of: test.Order
ignoring persistent instance
object already associated with session: [test.Order#1]
done cascade ACTION_SAVE_UPDATE for collection: test.Person.orderCollection
deleting orphans for collection: test.Person.orderCollection
done deleting orphans for collection: test.Person.orderCollection
done processing cascade ACTION_SAVE_UPDATE for: test.Person
dirty checking collections
Flushing entities and processing referenced collections
Collection found: [test.Person.orderCollection#1], was: [<unreferenced>] (initialized)
Processing unreferenced collections
Scheduling collection removes/(re)creates/updates
Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
listing entities:
test.Address{street=Street unknown, identifier=115}
test.Order{person=test.Person#1, identifier=1}
test.Person{orderCollection=[test.Order#1], address=test.Address#115, identifier=1, name=Kalpana}
executing flush
registering flush begin
Invalidating: test.Person.orderCollection#1
key: test.Person.orderCollection#1
test.Person.orderCollectionCache: test.Person.orderCollectionMemoryStore miss for test.Person.orderCollection#1
test.Person.orderCollection cache - Miss
Element for test.Person.orderCollection#1 is null
registering flush end
post flush
before transaction completion
before transaction completion
committed JDBC Connection
after transaction completion
aggressively releasing JDBC connection
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
after transaction completion
Releasing: test.Person.orderCollection#1
key: test.Person.orderCollection#1
test.Person.orderCollectionCache: test.Person.orderCollectionMemoryStore hit for test.Person.orderCollection#1
Close the session
closing session
connection already null in cleanup : no action
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5159865506332673
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
begin
current autocommit status: false
after transaction begin
Delete Object
deleting a detached instance
deleting [test.User#2]
setting cache mode to: GET
setting cache mode to: NORMAL
setting cache mode to: GET
setting cache mode to: NORMAL
Session commit
commit
automatically flushing session
flushing session
processing flush-time cascades
dirty checking collections
Flushing entities and processing referenced collections
Processing unreferenced collections
Scheduling collection removes/(re)creates/updates
Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
listing entities:
test.User{emailAddress=null, identifier=2, activityStatus=null, firstName=null, lastName=null}
executing flush
registering flush begin
Invalidating: test.User#2
key: test.User#2
test.UserCache: test.UserMemoryStore miss for test.User#2
test.User cache - Miss
Element for test.User#2 is null
Deleting entity: [test.User#2]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
delete from test_user where IDENTIFIER=?
preparing statement
binding '2' to parameter: 1
Adding to batch
Executing batch size: 1
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
registering flush end
post flush
before transaction completion
before transaction completion
committed JDBC Connection
after transaction completion
aggressively releasing JDBC connection
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
after transaction completion
Releasing: test.User#2
key: test.User#2
test.UserCache: test.UserMemoryStore hit for test.User#2
Deleted object ::::
Close the session
closing session
connection already null in cleanup : no action
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5159865506459649
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
begin
current autocommit status: false
after transaction begin
Insert Object
saving transient instance
saving [test.User#<null>]
executing insertions
Inserting entity: test.User (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into test_user (EMAIL_ADDRESS, FIRST_NAME, LAST_NAME, ACTIVITY_STATUS) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [test.User#<null>]
binding 'abhijit_naik@persistent.co.in' to parameter: 1
binding 'abhijit' to parameter: 2
binding 'naik' to parameter: 3
binding null to parameter: 4
Natively generated identity: 3
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
Insert Object
saving transient instance
saving [test.User#<null>]
executing insertions
Inserting entity: test.User (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into test_user (EMAIL_ADDRESS, FIRST_NAME, LAST_NAME, ACTIVITY_STATUS) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [test.User#<null>]
binding 'sach@lale.co.in' to parameter: 1
binding 'sachin' to parameter: 2
binding 'Lale' to parameter: 3
binding null to parameter: 4
Natively generated identity: 4
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
Session commit
commit
automatically flushing session
flushing session
processing flush-time cascades
dirty checking collections
Flushing entities and processing referenced collections
Processing unreferenced collections
Scheduling collection removes/(re)creates/updates
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
listing entities:
test.User{emailAddress=sach@lale.co.in, identifier=4, activityStatus=null, firstName=sachin, lastName=Lale}
test.User{emailAddress=abhijit_naik@persistent.co.in, identifier=3, activityStatus=null, firstName=abhijit, lastName=naik}
executing flush
registering flush begin
registering flush end
post flush
before transaction completion
before transaction completion
committed JDBC Connection
after transaction completion
aggressively releasing JDBC connection
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
after transaction completion
Close the session
closing session
connection already null in cleanup : no action
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5159865506586624
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
begin
current autocommit status: false
after transaction begin
Update Object
updating detached instance
updating [test.User#1]
updating [test.User#1]
Session commit
commit
automatically flushing session
flushing session
processing flush-time cascades
dirty checking collections
Flushing entities and processing referenced collections
Updating entity: [test.User#1]
Processing unreferenced collections
Scheduling collection removes/(re)creates/updates
Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
listing entities:
test.User{emailAddress=sri.adiga@persistent.co.in, identifier=1, activityStatus=null, firstName=Srikanth, lastName=Adiga}
executing flush
registering flush begin
Invalidating: test.User#1
key: test.User#1
test.UserCache: test.UserMemoryStore miss for test.User#1
test.User cache - Miss
Element for test.User#1 is null
Updating entity: [test.User#1]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
update test_user set EMAIL_ADDRESS=?, FIRST_NAME=?, LAST_NAME=?, ACTIVITY_STATUS=? where IDENTIFIER=?
preparing statement
Dehydrating entity: [test.User#1]
binding 'sri.adiga@persistent.co.in' to parameter: 1
binding 'Srikanth' to parameter: 2
binding 'Adiga' to parameter: 3
binding null to parameter: 4
binding '1' to parameter: 5
Adding to batch
Executing batch size: 1
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
registering flush end
post flush
before transaction completion
before transaction completion
committed JDBC Connection
after transaction completion
aggressively releasing JDBC connection
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
after transaction completion
Updating: test.User#1
key: test.User#1
test.UserCache: test.UserMemoryStore hit for test.User#1
Updated: test.User#1
Close the session
closing session
connection already null in cleanup : no action
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5159865506717697
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
begin
current autocommit status: false
after transaction begin
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Inside retrieve method
Prepare select part of query.
Prepare from part of query
unable to locate HQL query plan in cache; generating (from test.User User WHERE  User.lastName = 'Naik' OR User.identifier in (  1, 2) )
parse() - HQL: from test.User User WHERE  User.lastName = 'Naik' OR User.identifier in (  1, 2) 
--- HQL AST ---
 \-[QUERY] 'query'
    +-[SELECT_FROM] 'SELECT_FROM'
    |  \-[FROM] 'from'
    |     \-[RANGE] 'RANGE'
    |        +-[DOT] '.'
    |        |  +-[IDENT] 'test'
    |        |  \-[IDENT] 'User'
    |        \-[ALIAS] 'User'
    \-[WHERE] 'WHERE'
       \-[OR] 'OR'
          +-[EQ] '='
          |  +-[DOT] '.'
          |  |  +-[IDENT] 'User'
          |  |  \-[IDENT] 'lastName'
          |  \-[QUOTED_STRING] ''Naik''
          \-[IN] 'in'
             +-[DOT] '.'
             |  +-[IDENT] 'User'
             |  \-[IDENT] 'identifier'
             \-[IN_LIST] 'inList'
                +-[NUM_INT] '1'
                \-[NUM_INT] '2'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} :  test.User (User) -> user0_
Resolved :  User -> user0_.IDENTIFIER
getDataType() : lastName -> org.hibernate.type.StringType@18166e5
Resolved :  User.lastName -> user0_.LAST_NAME
Resolved :  User -> user0_.IDENTIFIER
getDataType() : identifier -> org.hibernate.type.LongType@69d02b
Resolved :  User.identifier -> user0_.IDENTIFIER
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( FromClause{level=1} test_user user0_ ) ( WHERE ( OR ( = ( user0_.LAST_NAME user0_.IDENTIFIER lastName ) 'Naik' ) ( in ( user0_.IDENTIFIER user0_.IDENTIFIER identifier ) ( inList 1 2 ) ) ) ) )
Derived SELECT clause created.
Using FROM fragment [test_user user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (test_user)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.IDENTIFIER as IDENTIFIER0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[User], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'test_user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[OR] SqlNode: 'OR'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.LAST_NAME' {propertyName=lastName,dereferenceType=4,propertyPath=lastName,path=User.lastName,tableAlias=user0_,className=test.User,classAlias=User}
          |  |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[QUOTED_STRING] LiteralNode: ''Naik''
          \-[IN] InLogicOperatorNode: 'in'
             +-[DOT] DotNode: 'user0_.IDENTIFIER' {propertyName=identifier,dereferenceType=4,propertyPath=identifier,path=User.identifier,tableAlias=user0_,className=test.User,classAlias=User}
             |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'identifier' {originalText=identifier}
             \-[IN_LIST] SqlNode: 'inList'
                +-[NUM_INT] LiteralNode: '1'
                \-[NUM_INT] LiteralNode: '2'

throwQueryException() : no errors
HQL: from test.User User WHERE  User.lastName = 'Naik' OR User.identifier in (  1, 2) 
SQL: select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_ where user0_.LAST_NAME='Naik' or user0_.IDENTIFIER in (1 , 2)
throwQueryException() : no errors
HQL param location recognition took 0 mills (from test.User User WHERE  User.lastName = 'Naik' OR User.identifier in (  1, 2) )
located HQL query plan in cache (from test.User User WHERE  User.lastName = 'Naik' OR User.identifier in (  1, 2) )
find: from test.User User WHERE  User.lastName = 'Naik' OR User.identifier in (  1, 2) 
named parameters: {}
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_ where user0_.LAST_NAME='Naik' or user0_.IDENTIFIER in (1 , 2)
preparing statement
about to open ResultSet (open ResultSets: 0, globally: 0)
processing result set
result set row: 0
returning '1' as column: IDENTIFIER0_
result row: EntityKey[test.User#1]
Initializing object from ResultSet: [test.User#1]
Hydrating entity: [test.User#1]
returning 'sri.adiga@persistent.co.in' as column: EMAIL2_0_
returning 'Srikanth' as column: FIRST3_0_
returning 'Adiga' as column: LAST4_0_
returning null as column: ACTIVITY5_0_
result set row: 1
returning '3' as column: IDENTIFIER0_
result row: EntityKey[test.User#3]
Initializing object from ResultSet: [test.User#3]
Hydrating entity: [test.User#3]
returning 'abhijit_naik@persistent.co.in' as column: EMAIL2_0_
returning 'abhijit' as column: FIRST3_0_
returning 'naik' as column: LAST4_0_
returning null as column: ACTIVITY5_0_
done processing result set (2 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
total objects hydrated: 2
resolving associations for [test.User#1]
adding entity to second-level cache: [test.User#1]
Caching: test.User#1
key: test.User#1
test.UserCache: test.UserMemoryStore hit for test.User#1
Item was already cached: test.User#1
done materializing entity [test.User#1]
resolving associations for [test.User#3]
adding entity to second-level cache: [test.User#3]
Caching: test.User#3
key: test.User#3
test.UserCache: test.UserMemoryStore miss for test.User#3
test.User cache - Miss
Element for test.User#3 is null
Cached: test.User#3
done materializing entity [test.User#3]
initializing non-lazy collections
Inside retrieve method
Prepare select part of query.
Prepare from part of query
unable to locate HQL query plan in cache; generating (from test.User User WHERE  User.identifier = 1 OR User.lastName is not null )
parse() - HQL: from test.User User WHERE  User.identifier = 1 OR User.lastName is not null 
--- HQL AST ---
 \-[QUERY] 'query'
    +-[SELECT_FROM] 'SELECT_FROM'
    |  \-[FROM] 'from'
    |     \-[RANGE] 'RANGE'
    |        +-[DOT] '.'
    |        |  +-[IDENT] 'test'
    |        |  \-[IDENT] 'User'
    |        \-[ALIAS] 'User'
    \-[WHERE] 'WHERE'
       \-[OR] 'OR'
          +-[EQ] '='
          |  +-[DOT] '.'
          |  |  +-[IDENT] 'User'
          |  |  \-[IDENT] 'identifier'
          |  \-[NUM_INT] '1'
          \-[IS_NOT_NULL] 'is not null'
             \-[DOT] '.'
                +-[IDENT] 'User'
                \-[IDENT] 'lastName'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} :  test.User (User) -> user0_
Resolved :  User -> user0_.IDENTIFIER
getDataType() : identifier -> org.hibernate.type.LongType@69d02b
Resolved :  User.identifier -> user0_.IDENTIFIER
Resolved :  User -> user0_.IDENTIFIER
getDataType() : lastName -> org.hibernate.type.StringType@18166e5
Resolved :  User.lastName -> user0_.LAST_NAME
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( FromClause{level=1} test_user user0_ ) ( WHERE ( OR ( = ( user0_.IDENTIFIER user0_.IDENTIFIER identifier ) 1 ) ( is not null ( user0_.LAST_NAME user0_.IDENTIFIER lastName ) ) ) ) )
Derived SELECT clause created.
Using FROM fragment [test_user user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (test_user)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.IDENTIFIER as IDENTIFIER0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[User], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'test_user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[OR] SqlNode: 'OR'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.IDENTIFIER' {propertyName=identifier,dereferenceType=4,propertyPath=identifier,path=User.identifier,tableAlias=user0_,className=test.User,classAlias=User}
          |  |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
          |  |  \-[IDENT] IdentNode: 'identifier' {originalText=identifier}
          |  \-[NUM_INT] LiteralNode: '1'
          \-[IS_NOT_NULL] UnaryLogicOperatorNode: 'is not null'
             \-[DOT] DotNode: 'user0_.LAST_NAME' {propertyName=lastName,dereferenceType=4,propertyPath=lastName,path=User.lastName,tableAlias=user0_,className=test.User,classAlias=User}
                +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
                \-[IDENT] IdentNode: 'lastName' {originalText=lastName}

throwQueryException() : no errors
HQL: from test.User User WHERE  User.identifier = 1 OR User.lastName is not null 
SQL: select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_ where user0_.IDENTIFIER=1 or user0_.LAST_NAME is not null
throwQueryException() : no errors
HQL param location recognition took 0 mills (from test.User User WHERE  User.identifier = 1 OR User.lastName is not null )
located HQL query plan in cache (from test.User User WHERE  User.identifier = 1 OR User.lastName is not null )
find: from test.User User WHERE  User.identifier = 1 OR User.lastName is not null 
named parameters: {}
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_ where user0_.IDENTIFIER=1 or user0_.LAST_NAME is not null
preparing statement
about to open ResultSet (open ResultSets: 0, globally: 0)
processing result set
result set row: 0
returning '1' as column: IDENTIFIER0_
result row: EntityKey[test.User#1]
result set row: 1
returning '3' as column: IDENTIFIER0_
result row: EntityKey[test.User#3]
result set row: 2
returning '4' as column: IDENTIFIER0_
result row: EntityKey[test.User#4]
Initializing object from ResultSet: [test.User#4]
Hydrating entity: [test.User#4]
returning 'sach@lale.co.in' as column: EMAIL2_0_
returning 'sachin' as column: FIRST3_0_
returning 'Lale' as column: LAST4_0_
returning null as column: ACTIVITY5_0_
done processing result set (3 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
total objects hydrated: 1
resolving associations for [test.User#4]
adding entity to second-level cache: [test.User#4]
Caching: test.User#4
key: test.User#4
test.UserCache: test.UserMemoryStore miss for test.User#4
test.User cache - Miss
Element for test.User#4 is null
Cached: test.User#4
done materializing entity [test.User#4]
initializing non-lazy collections
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5159865507995648
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
begin
current autocommit status: false
after transaction begin
Inside retrieve method
Prepare select part of query.
Prepare from part of query
unable to locate HQL query plan in cache; generating (from test.User User)
parse() - HQL: from test.User User
--- HQL AST ---
 \-[QUERY] 'query'
    \-[SELECT_FROM] 'SELECT_FROM'
       \-[FROM] 'from'
          \-[RANGE] 'RANGE'
             +-[DOT] '.'
             |  +-[IDENT] 'test'
             |  \-[IDENT] 'User'
             \-[ALIAS] 'User'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} :  test.User (User) -> user0_
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( FromClause{level=1} test_user user0_ ) )
Derived SELECT clause created.
Using FROM fragment [test_user user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (test_user)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.IDENTIFIER as IDENTIFIER0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[User], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'test_user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}

throwQueryException() : no errors
HQL: from test.User User
SQL: select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_
throwQueryException() : no errors
HQL param location recognition took 0 mills (from test.User User)
located HQL query plan in cache (from test.User User)
find: from test.User User
named parameters: {}
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_
preparing statement
about to open ResultSet (open ResultSets: 0, globally: 0)
processing result set
result set row: 0
returning '1' as column: IDENTIFIER0_
result row: EntityKey[test.User#1]
Initializing object from ResultSet: [test.User#1]
Hydrating entity: [test.User#1]
returning 'sri.adiga@persistent.co.in' as column: EMAIL2_0_
returning 'Srikanth' as column: FIRST3_0_
returning 'Adiga' as column: LAST4_0_
returning null as column: ACTIVITY5_0_
result set row: 1
returning '3' as column: IDENTIFIER0_
result row: EntityKey[test.User#3]
Initializing object from ResultSet: [test.User#3]
Hydrating entity: [test.User#3]
returning 'abhijit_naik@persistent.co.in' as column: EMAIL2_0_
returning 'abhijit' as column: FIRST3_0_
returning 'naik' as column: LAST4_0_
returning null as column: ACTIVITY5_0_
result set row: 2
returning '4' as column: IDENTIFIER0_
result row: EntityKey[test.User#4]
Initializing object from ResultSet: [test.User#4]
Hydrating entity: [test.User#4]
returning 'sach@lale.co.in' as column: EMAIL2_0_
returning 'sachin' as column: FIRST3_0_
returning 'Lale' as column: LAST4_0_
returning null as column: ACTIVITY5_0_
done processing result set (3 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
total objects hydrated: 3
resolving associations for [test.User#1]
adding entity to second-level cache: [test.User#1]
Caching: test.User#1
key: test.User#1
test.UserCache: test.UserMemoryStore hit for test.User#1
Item was already cached: test.User#1
done materializing entity [test.User#1]
resolving associations for [test.User#3]
adding entity to second-level cache: [test.User#3]
Caching: test.User#3
key: test.User#3
test.UserCache: test.UserMemoryStore hit for test.User#3
Item was already cached: test.User#3
done materializing entity [test.User#3]
resolving associations for [test.User#4]
adding entity to second-level cache: [test.User#4]
Caching: test.User#4
key: test.User#4
test.UserCache: test.UserMemoryStore hit for test.User#4
Item was already cached: test.User#4
done materializing entity [test.User#4]
initializing non-lazy collections
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5159865507995649
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
begin
current autocommit status: false
after transaction begin
Inside retrieve method
Prepare select part of query.
Prepare from part of query
unable to locate HQL query plan in cache; generating (from test.User User WHERE  User.identifier = 1 )
parse() - HQL: from test.User User WHERE  User.identifier = 1 
--- HQL AST ---
 \-[QUERY] 'query'
    +-[SELECT_FROM] 'SELECT_FROM'
    |  \-[FROM] 'from'
    |     \-[RANGE] 'RANGE'
    |        +-[DOT] '.'
    |        |  +-[IDENT] 'test'
    |        |  \-[IDENT] 'User'
    |        \-[ALIAS] 'User'
    \-[WHERE] 'WHERE'
       \-[EQ] '='
          +-[DOT] '.'
          |  +-[IDENT] 'User'
          |  \-[IDENT] 'identifier'
          \-[NUM_INT] '1'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} :  test.User (User) -> user0_
Resolved :  User -> user0_.IDENTIFIER
getDataType() : identifier -> org.hibernate.type.LongType@69d02b
Resolved :  User.identifier -> user0_.IDENTIFIER
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( FromClause{level=1} test_user user0_ ) ( WHERE ( = ( user0_.IDENTIFIER user0_.IDENTIFIER identifier ) 1 ) ) )
Derived SELECT clause created.
Using FROM fragment [test_user user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (test_user)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.IDENTIFIER as IDENTIFIER0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[User], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'test_user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.IDENTIFIER' {propertyName=identifier,dereferenceType=4,propertyPath=identifier,path=User.identifier,tableAlias=user0_,className=test.User,classAlias=User}
          |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'identifier' {originalText=identifier}
          \-[NUM_INT] LiteralNode: '1'

throwQueryException() : no errors
HQL: from test.User User WHERE  User.identifier = 1 
SQL: select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_ where user0_.IDENTIFIER=1
throwQueryException() : no errors
HQL param location recognition took 0 mills (from test.User User WHERE  User.identifier = 1 )
located HQL query plan in cache (from test.User User WHERE  User.identifier = 1 )
find: from test.User User WHERE  User.identifier = 1 
named parameters: {}
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_ where user0_.IDENTIFIER=1
preparing statement
about to open ResultSet (open ResultSets: 0, globally: 0)
processing result set
result set row: 0
returning '1' as column: IDENTIFIER0_
result row: EntityKey[test.User#1]
Initializing object from ResultSet: [test.User#1]
Hydrating entity: [test.User#1]
returning 'sri.adiga@persistent.co.in' as column: EMAIL2_0_
returning 'Srikanth' as column: FIRST3_0_
returning 'Adiga' as column: LAST4_0_
returning null as column: ACTIVITY5_0_
done processing result set (1 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
total objects hydrated: 1
resolving associations for [test.User#1]
adding entity to second-level cache: [test.User#1]
Caching: test.User#1
key: test.User#1
test.UserCache: test.UserMemoryStore hit for test.User#1
Item was already cached: test.User#1
done materializing entity [test.User#1]
initializing non-lazy collections
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5159865508061184
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
begin
current autocommit status: false
after transaction begin
Inside retrieve method
Prepare select part of query.
Prepare from part of query
unable to locate HQL query plan in cache; generating (Select User.identifier, User.firstName, User.lastName, User.emailAddress   from test.User User)
parse() - HQL: Select User.identifier, User.firstName, User.lastName, User.emailAddress   from test.User User
--- HQL AST ---
 \-[QUERY] 'query'
    \-[SELECT_FROM] 'SELECT_FROM'
       +-[FROM] 'from'
       |  \-[RANGE] 'RANGE'
       |     +-[DOT] '.'
       |     |  +-[IDENT] 'test'
       |     |  \-[IDENT] 'User'
       |     \-[ALIAS] 'User'
       \-[SELECT] 'Select'
          +-[DOT] '.'
          |  +-[IDENT] 'User'
          |  \-[IDENT] 'identifier'
          +-[DOT] '.'
          |  +-[IDENT] 'User'
          |  \-[IDENT] 'firstName'
          +-[DOT] '.'
          |  +-[IDENT] 'User'
          |  \-[IDENT] 'lastName'
          \-[DOT] '.'
             +-[IDENT] 'User'
             \-[IDENT] 'emailAddress'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} :  test.User (User) -> user0_
Resolved :  User -> user0_.IDENTIFIER
getDataType() : identifier -> org.hibernate.type.LongType@69d02b
Resolved :  User.identifier -> user0_.IDENTIFIER
Resolved :  User -> user0_.IDENTIFIER
getDataType() : firstName -> org.hibernate.type.StringType@18166e5
Resolved :  User.firstName -> user0_.FIRST_NAME
Resolved :  User -> user0_.IDENTIFIER
getDataType() : lastName -> org.hibernate.type.StringType@18166e5
Resolved :  User.lastName -> user0_.LAST_NAME
Resolved :  User -> user0_.IDENTIFIER
getDataType() : emailAddress -> org.hibernate.type.StringType@18166e5
Resolved :  User.emailAddress -> user0_.EMAIL_ADDRESS
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( user0_.IDENTIFIER user0_.IDENTIFIER identifier ) ( user0_.FIRST_NAME user0_.IDENTIFIER firstName ) ( user0_.LAST_NAME user0_.IDENTIFIER lastName ) ( user0_.EMAIL_ADDRESS user0_.IDENTIFIER emailAddress ) ) ( FromClause{level=1} test_user user0_ ) )
Using FROM fragment [test_user user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (test_user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'user0_.IDENTIFIER' {propertyName=identifier,dereferenceType=4,propertyPath=identifier,path=User.identifier,tableAlias=user0_,className=test.User,classAlias=User}
    |  |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
    |  |  \-[IDENT] IdentNode: 'identifier' {originalText=identifier}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'user0_.FIRST_NAME' {propertyName=firstName,dereferenceType=4,propertyPath=firstName,path=User.firstName,tableAlias=user0_,className=test.User,classAlias=User}
    |  |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
    |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[DOT] DotNode: 'user0_.LAST_NAME' {propertyName=lastName,dereferenceType=4,propertyPath=lastName,path=User.lastName,tableAlias=user0_,className=test.User,classAlias=User}
    |  |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
    |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_2_0_'
    |  +-[DOT] DotNode: 'user0_.EMAIL_ADDRESS' {propertyName=emailAddress,dereferenceType=4,propertyPath=emailAddress,path=User.emailAddress,tableAlias=user0_,className=test.User,classAlias=User}
    |  |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
    |  |  \-[IDENT] IdentNode: 'emailAddress' {originalText=emailAddress}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[User], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'test_user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}

throwQueryException() : no errors
HQL: Select User.identifier, User.firstName, User.lastName, User.emailAddress   from test.User User
SQL: select user0_.IDENTIFIER as col_0_0_, user0_.FIRST_NAME as col_1_0_, user0_.LAST_NAME as col_2_0_, user0_.EMAIL_ADDRESS as col_3_0_ from test_user user0_
throwQueryException() : no errors
HQL param location recognition took 0 mills (Select User.identifier, User.firstName, User.lastName, User.emailAddress   from test.User User)
located HQL query plan in cache (Select User.identifier, User.firstName, User.lastName, User.emailAddress   from test.User User)
find: Select User.identifier, User.firstName, User.lastName, User.emailAddress   from test.User User
named parameters: {}
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select user0_.IDENTIFIER as col_0_0_, user0_.FIRST_NAME as col_1_0_, user0_.LAST_NAME as col_2_0_, user0_.EMAIL_ADDRESS as col_3_0_ from test_user user0_
preparing statement
about to open ResultSet (open ResultSets: 0, globally: 0)
processing result set
result set row: 0
result row: 
returning '1' as column: col_0_0_
returning 'Srikanth' as column: col_1_0_
returning 'Adiga' as column: col_2_0_
returning 'sri.adiga@persistent.co.in' as column: col_3_0_
result set row: 1
result row: 
returning '3' as column: col_0_0_
returning 'abhijit' as column: col_1_0_
returning 'naik' as column: col_2_0_
returning 'abhijit_naik@persistent.co.in' as column: col_3_0_
result set row: 2
result row: 
returning '4' as column: col_0_0_
returning 'sachin' as column: col_1_0_
returning 'Lale' as column: col_2_0_
returning 'sach@lale.co.in' as column: col_3_0_
done processing result set (3 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
initializing non-lazy collections
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5159865508122624
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
begin
current autocommit status: false
after transaction begin
Inside retrieve method
loading entity: [test.User#1]
creating new proxy for entity
initializing proxy: [test.User#1]
attempting to resolve: [test.User#1]
Cache lookup: test.User#1
key: test.User#1
test.UserCache: test.UserMemoryStore hit for test.User#1
Cache hit: test.User#1
assembling entity from second-level cache: [test.User#1]
Cached Version: null
initializing non-lazy collections
resolved object in second-level cache: [test.User#1]
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5159865508315136
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
begin
current autocommit status: false
after transaction begin
Inside retrieve method
Prepare select part of query.
Prepare from part of query
unable to locate HQL query plan in cache; generating (from test.User User WHERE  User.firstName in (  'JOHN', 'abhijit') AND User.lastName in (  'naik') OR User.identifier != 1 )
parse() - HQL: from test.User User WHERE  User.firstName in (  'JOHN', 'abhijit') AND User.lastName in (  'naik') OR User.identifier != 1 
--- HQL AST ---
 \-[QUERY] 'query'
    +-[SELECT_FROM] 'SELECT_FROM'
    |  \-[FROM] 'from'
    |     \-[RANGE] 'RANGE'
    |        +-[DOT] '.'
    |        |  +-[IDENT] 'test'
    |        |  \-[IDENT] 'User'
    |        \-[ALIAS] 'User'
    \-[WHERE] 'WHERE'
       \-[OR] 'OR'
          +-[AND] 'AND'
          |  +-[IN] 'in'
          |  |  +-[DOT] '.'
          |  |  |  +-[IDENT] 'User'
          |  |  |  \-[IDENT] 'firstName'
          |  |  \-[IN_LIST] 'inList'
          |  |     +-[QUOTED_STRING] ''JOHN''
          |  |     \-[QUOTED_STRING] ''abhijit''
          |  \-[IN] 'in'
          |     +-[DOT] '.'
          |     |  +-[IDENT] 'User'
          |     |  \-[IDENT] 'lastName'
          |     \-[IN_LIST] 'inList'
          |        \-[QUOTED_STRING] ''naik''
          \-[NE] '!='
             +-[DOT] '.'
             |  +-[IDENT] 'User'
             |  \-[IDENT] 'identifier'
             \-[NUM_INT] '1'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} :  test.User (User) -> user0_
Resolved :  User -> user0_.IDENTIFIER
getDataType() : firstName -> org.hibernate.type.StringType@18166e5
Resolved :  User.firstName -> user0_.FIRST_NAME
Resolved :  User -> user0_.IDENTIFIER
getDataType() : lastName -> org.hibernate.type.StringType@18166e5
Resolved :  User.lastName -> user0_.LAST_NAME
Resolved :  User -> user0_.IDENTIFIER
getDataType() : identifier -> org.hibernate.type.LongType@69d02b
Resolved :  User.identifier -> user0_.IDENTIFIER
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( FromClause{level=1} test_user user0_ ) ( WHERE ( OR ( AND ( in ( user0_.FIRST_NAME user0_.IDENTIFIER firstName ) ( inList 'JOHN' 'abhijit' ) ) ( in ( user0_.LAST_NAME user0_.IDENTIFIER lastName ) ( inList 'naik' ) ) ) ( != ( user0_.IDENTIFIER user0_.IDENTIFIER identifier ) 1 ) ) ) )
Derived SELECT clause created.
Using FROM fragment [test_user user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (test_user)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.IDENTIFIER as IDENTIFIER0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[User], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'test_user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[OR] SqlNode: 'OR'
          +-[AND] SqlNode: 'AND'
          |  +-[IN] InLogicOperatorNode: 'in'
          |  |  +-[DOT] DotNode: 'user0_.FIRST_NAME' {propertyName=firstName,dereferenceType=4,propertyPath=firstName,path=User.firstName,tableAlias=user0_,className=test.User,classAlias=User}
          |  |  |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
          |  |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |  \-[IN_LIST] SqlNode: 'inList'
          |  |     +-[QUOTED_STRING] LiteralNode: ''JOHN''
          |  |     \-[QUOTED_STRING] LiteralNode: ''abhijit''
          |  \-[IN] InLogicOperatorNode: 'in'
          |     +-[DOT] DotNode: 'user0_.LAST_NAME' {propertyName=lastName,dereferenceType=4,propertyPath=lastName,path=User.lastName,tableAlias=user0_,className=test.User,classAlias=User}
          |     |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
          |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |     \-[IN_LIST] SqlNode: 'inList'
          |        \-[QUOTED_STRING] LiteralNode: ''naik''
          \-[NE] BinaryLogicOperatorNode: '!='
             +-[DOT] DotNode: 'user0_.IDENTIFIER' {propertyName=identifier,dereferenceType=4,propertyPath=identifier,path=User.identifier,tableAlias=user0_,className=test.User,classAlias=User}
             |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'identifier' {originalText=identifier}
             \-[NUM_INT] LiteralNode: '1'

throwQueryException() : no errors
HQL: from test.User User WHERE  User.firstName in (  'JOHN', 'abhijit') AND User.lastName in (  'naik') OR User.identifier != 1 
SQL: select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_ where (user0_.FIRST_NAME in ('JOHN' , 'abhijit')) and (user0_.LAST_NAME in ('naik')) or user0_.IDENTIFIER<>1
throwQueryException() : no errors
HQL param location recognition took 0 mills (from test.User User WHERE  User.firstName in (  'JOHN', 'abhijit') AND User.lastName in (  'naik') OR User.identifier != 1 )
located HQL query plan in cache (from test.User User WHERE  User.firstName in (  'JOHN', 'abhijit') AND User.lastName in (  'naik') OR User.identifier != 1 )
find: from test.User User WHERE  User.firstName in (  'JOHN', 'abhijit') AND User.lastName in (  'naik') OR User.identifier != 1 
named parameters: {}
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_ where (user0_.FIRST_NAME in ('JOHN' , 'abhijit')) and (user0_.LAST_NAME in ('naik')) or user0_.IDENTIFIER<>1
preparing statement
about to open ResultSet (open ResultSets: 0, globally: 0)
processing result set
result set row: 0
returning '3' as column: IDENTIFIER0_
result row: EntityKey[test.User#3]
Initializing object from ResultSet: [test.User#3]
Hydrating entity: [test.User#3]
returning 'abhijit_naik@persistent.co.in' as column: EMAIL2_0_
returning 'abhijit' as column: FIRST3_0_
returning 'naik' as column: LAST4_0_
returning null as column: ACTIVITY5_0_
result set row: 1
returning '4' as column: IDENTIFIER0_
result row: EntityKey[test.User#4]
Initializing object from ResultSet: [test.User#4]
Hydrating entity: [test.User#4]
returning 'sach@lale.co.in' as column: EMAIL2_0_
returning 'sachin' as column: FIRST3_0_
returning 'Lale' as column: LAST4_0_
returning null as column: ACTIVITY5_0_
done processing result set (2 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
total objects hydrated: 2
resolving associations for [test.User#3]
adding entity to second-level cache: [test.User#3]
Caching: test.User#3
key: test.User#3
test.UserCache: test.UserMemoryStore hit for test.User#3
Item was already cached: test.User#3
done materializing entity [test.User#3]
resolving associations for [test.User#4]
adding entity to second-level cache: [test.User#4]
Caching: test.User#4
key: test.User#4
test.UserCache: test.UserMemoryStore hit for test.User#4
Item was already cached: test.User#4
done materializing entity [test.User#4]
initializing non-lazy collections
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5159865508380672
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
begin
current autocommit status: false
after transaction begin
Inside retrieve method
Prepare select part of query.
Prepare from part of query
unable to locate HQL query plan in cache; generating (from test.User User WHERE  User.identifier is not null OR User.lastName is not null )
parse() - HQL: from test.User User WHERE  User.identifier is not null OR User.lastName is not null 
--- HQL AST ---
 \-[QUERY] 'query'
    +-[SELECT_FROM] 'SELECT_FROM'
    |  \-[FROM] 'from'
    |     \-[RANGE] 'RANGE'
    |        +-[DOT] '.'
    |        |  +-[IDENT] 'test'
    |        |  \-[IDENT] 'User'
    |        \-[ALIAS] 'User'
    \-[WHERE] 'WHERE'
       \-[OR] 'OR'
          +-[IS_NOT_NULL] 'is not null'
          |  \-[DOT] '.'
          |     +-[IDENT] 'User'
          |     \-[IDENT] 'identifier'
          \-[IS_NOT_NULL] 'is not null'
             \-[DOT] '.'
                +-[IDENT] 'User'
                \-[IDENT] 'lastName'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} :  test.User (User) -> user0_
Resolved :  User -> user0_.IDENTIFIER
getDataType() : identifier -> org.hibernate.type.LongType@69d02b
Resolved :  User.identifier -> user0_.IDENTIFIER
Resolved :  User -> user0_.IDENTIFIER
getDataType() : lastName -> org.hibernate.type.StringType@18166e5
Resolved :  User.lastName -> user0_.LAST_NAME
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( FromClause{level=1} test_user user0_ ) ( WHERE ( OR ( is not null ( user0_.IDENTIFIER user0_.IDENTIFIER identifier ) ) ( is not null ( user0_.LAST_NAME user0_.IDENTIFIER lastName ) ) ) ) )
Derived SELECT clause created.
Using FROM fragment [test_user user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (test_user)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.IDENTIFIER as IDENTIFIER0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[User], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'test_user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[OR] SqlNode: 'OR'
          +-[IS_NOT_NULL] UnaryLogicOperatorNode: 'is not null'
          |  \-[DOT] DotNode: 'user0_.IDENTIFIER' {propertyName=identifier,dereferenceType=4,propertyPath=identifier,path=User.identifier,tableAlias=user0_,className=test.User,classAlias=User}
          |     +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
          |     \-[IDENT] IdentNode: 'identifier' {originalText=identifier}
          \-[IS_NOT_NULL] UnaryLogicOperatorNode: 'is not null'
             \-[DOT] DotNode: 'user0_.LAST_NAME' {propertyName=lastName,dereferenceType=4,propertyPath=lastName,path=User.lastName,tableAlias=user0_,className=test.User,classAlias=User}
                +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
                \-[IDENT] IdentNode: 'lastName' {originalText=lastName}

throwQueryException() : no errors
HQL: from test.User User WHERE  User.identifier is not null OR User.lastName is not null 
SQL: select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_ where user0_.IDENTIFIER is not null or user0_.LAST_NAME is not null
throwQueryException() : no errors
HQL param location recognition took 0 mills (from test.User User WHERE  User.identifier is not null OR User.lastName is not null )
located HQL query plan in cache (from test.User User WHERE  User.identifier is not null OR User.lastName is not null )
find: from test.User User WHERE  User.identifier is not null OR User.lastName is not null 
named parameters: {}
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_ where user0_.IDENTIFIER is not null or user0_.LAST_NAME is not null
preparing statement
about to open ResultSet (open ResultSets: 0, globally: 0)
processing result set
result set row: 0
returning '1' as column: IDENTIFIER0_
result row: EntityKey[test.User#1]
Initializing object from ResultSet: [test.User#1]
Hydrating entity: [test.User#1]
returning 'sri.adiga@persistent.co.in' as column: EMAIL2_0_
returning 'Srikanth' as column: FIRST3_0_
returning 'Adiga' as column: LAST4_0_
returning null as column: ACTIVITY5_0_
result set row: 1
returning '3' as column: IDENTIFIER0_
result row: EntityKey[test.User#3]
Initializing object from ResultSet: [test.User#3]
Hydrating entity: [test.User#3]
returning 'abhijit_naik@persistent.co.in' as column: EMAIL2_0_
returning 'abhijit' as column: FIRST3_0_
returning 'naik' as column: LAST4_0_
returning null as column: ACTIVITY5_0_
result set row: 2
returning '4' as column: IDENTIFIER0_
result row: EntityKey[test.User#4]
Initializing object from ResultSet: [test.User#4]
Hydrating entity: [test.User#4]
returning 'sach@lale.co.in' as column: EMAIL2_0_
returning 'sachin' as column: FIRST3_0_
returning 'Lale' as column: LAST4_0_
returning null as column: ACTIVITY5_0_
done processing result set (3 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
total objects hydrated: 3
resolving associations for [test.User#1]
adding entity to second-level cache: [test.User#1]
Caching: test.User#1
key: test.User#1
test.UserCache: test.UserMemoryStore hit for test.User#1
Item was already cached: test.User#1
done materializing entity [test.User#1]
resolving associations for [test.User#3]
adding entity to second-level cache: [test.User#3]
Caching: test.User#3
key: test.User#3
test.UserCache: test.UserMemoryStore hit for test.User#3
Item was already cached: test.User#3
done materializing entity [test.User#3]
resolving associations for [test.User#4]
adding entity to second-level cache: [test.User#4]
Caching: test.User#4
key: test.User#4
test.UserCache: test.UserMemoryStore hit for test.User#4
Item was already cached: test.User#4
done materializing entity [test.User#4]
initializing non-lazy collections
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5159865508442112
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
begin
current autocommit status: false
after transaction begin
Inside retrieve method
Prepare select part of query.
Prepare from part of query
unable to locate HQL query plan in cache; generating (from test.User User WHERE  User.lastName is null )
parse() - HQL: from test.User User WHERE  User.lastName is null 
--- HQL AST ---
 \-[QUERY] 'query'
    +-[SELECT_FROM] 'SELECT_FROM'
    |  \-[FROM] 'from'
    |     \-[RANGE] 'RANGE'
    |        +-[DOT] '.'
    |        |  +-[IDENT] 'test'
    |        |  \-[IDENT] 'User'
    |        \-[ALIAS] 'User'
    \-[WHERE] 'WHERE'
       \-[IS_NULL] 'is null'
          \-[DOT] '.'
             +-[IDENT] 'User'
             \-[IDENT] 'lastName'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} :  test.User (User) -> user0_
Resolved :  User -> user0_.IDENTIFIER
getDataType() : lastName -> org.hibernate.type.StringType@18166e5
Resolved :  User.lastName -> user0_.LAST_NAME
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( FromClause{level=1} test_user user0_ ) ( WHERE ( is null ( user0_.LAST_NAME user0_.IDENTIFIER lastName ) ) ) )
Derived SELECT clause created.
Using FROM fragment [test_user user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (test_user)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.IDENTIFIER as IDENTIFIER0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[User], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'test_user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[IS_NULL] UnaryLogicOperatorNode: 'is null'
          \-[DOT] DotNode: 'user0_.LAST_NAME' {propertyName=lastName,dereferenceType=4,propertyPath=lastName,path=User.lastName,tableAlias=user0_,className=test.User,classAlias=User}
             +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
             \-[IDENT] IdentNode: 'lastName' {originalText=lastName}

throwQueryException() : no errors
HQL: from test.User User WHERE  User.lastName is null 
SQL: select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_ where user0_.LAST_NAME is null
throwQueryException() : no errors
HQL param location recognition took 0 mills (from test.User User WHERE  User.lastName is null )
located HQL query plan in cache (from test.User User WHERE  User.lastName is null )
find: from test.User User WHERE  User.lastName is null 
named parameters: {}
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_ where user0_.LAST_NAME is null
preparing statement
about to open ResultSet (open ResultSets: 0, globally: 0)
processing result set
done processing result set (0 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
total objects hydrated: 0
initializing non-lazy collections
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5159865508507648
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
begin
current autocommit status: false
after transaction begin
Execute query
unable to locate HQL query plan in cache; generating (select count(*) from test.User)
parse() - HQL: select count(*) from test.User
--- HQL AST ---
 \-[QUERY] 'query'
    \-[SELECT_FROM] 'SELECT_FROM'
       +-[FROM] 'from'
       |  \-[RANGE] 'RANGE'
       |     \-[DOT] '.'
       |        +-[IDENT] 'test'
       |        \-[IDENT] 'User'
       \-[SELECT] 'select'
          \-[COUNT] 'count'
             \-[ROW_STAR] '*'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} :  test.User (no alias) -> user0_
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( count * ) ) ( FromClause{level=1} test_user user0_ ) )
Using FROM fragment [test_user user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (test_user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ROW_STAR] SqlNode: '*'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'test_user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}

throwQueryException() : no errors
HQL: select count(*) from test.User
SQL: select count(*) as col_0_0_ from test_user user0_
throwQueryException() : no errors
HQL param location recognition took 0 mills (select count(*) from test.User)
located HQL query plan in cache (select count(*) from test.User)
find: select count(*) from test.User
named parameters: {}
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select count(*) as col_0_0_ from test_user user0_
preparing statement
about to open ResultSet (open ResultSets: 0, globally: 0)
processing result set
result set row: 0
result row: 
returning '3' as column: col_0_0_
done processing result set (1 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
initializing non-lazy collections
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5159865508507649
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
begin
current autocommit status: false
after transaction begin
Retrieve attributes
Inside retrieve method
Prepare select part of query.
Prepare from part of query
unable to locate HQL query plan in cache; generating (Select User.emailAddress   from test.User User WHERE  User.identifier = 1 )
parse() - HQL: Select User.emailAddress   from test.User User WHERE  User.identifier = 1 
--- HQL AST ---
 \-[QUERY] 'query'
    +-[SELECT_FROM] 'SELECT_FROM'
    |  +-[FROM] 'from'
    |  |  \-[RANGE] 'RANGE'
    |  |     +-[DOT] '.'
    |  |     |  +-[IDENT] 'test'
    |  |     |  \-[IDENT] 'User'
    |  |     \-[ALIAS] 'User'
    |  \-[SELECT] 'Select'
    |     \-[DOT] '.'
    |        +-[IDENT] 'User'
    |        \-[IDENT] 'emailAddress'
    \-[WHERE] 'WHERE'
       \-[EQ] '='
          +-[DOT] '.'
          |  +-[IDENT] 'User'
          |  \-[IDENT] 'identifier'
          \-[NUM_INT] '1'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} :  test.User (User) -> user0_
Resolved :  User -> user0_.IDENTIFIER
getDataType() : emailAddress -> org.hibernate.type.StringType@18166e5
Resolved :  User.emailAddress -> user0_.EMAIL_ADDRESS
Resolved :  User -> user0_.IDENTIFIER
getDataType() : identifier -> org.hibernate.type.LongType@69d02b
Resolved :  User.identifier -> user0_.IDENTIFIER
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( user0_.EMAIL_ADDRESS user0_.IDENTIFIER emailAddress ) ) ( FromClause{level=1} test_user user0_ ) ( WHERE ( = ( user0_.IDENTIFIER user0_.IDENTIFIER identifier ) 1 ) ) )
Using FROM fragment [test_user user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (test_user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'user0_.EMAIL_ADDRESS' {propertyName=emailAddress,dereferenceType=4,propertyPath=emailAddress,path=User.emailAddress,tableAlias=user0_,className=test.User,classAlias=User}
    |  |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
    |  |  \-[IDENT] IdentNode: 'emailAddress' {originalText=emailAddress}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[User], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'test_user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.IDENTIFIER' {propertyName=identifier,dereferenceType=4,propertyPath=identifier,path=User.identifier,tableAlias=user0_,className=test.User,classAlias=User}
          |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'identifier' {originalText=identifier}
          \-[NUM_INT] LiteralNode: '1'

throwQueryException() : no errors
HQL: Select User.emailAddress   from test.User User WHERE  User.identifier = 1 
SQL: select user0_.EMAIL_ADDRESS as col_0_0_ from test_user user0_ where user0_.IDENTIFIER=1
throwQueryException() : no errors
HQL param location recognition took 0 mills (Select User.emailAddress   from test.User User WHERE  User.identifier = 1 )
located HQL query plan in cache (Select User.emailAddress   from test.User User WHERE  User.identifier = 1 )
find: Select User.emailAddress   from test.User User WHERE  User.identifier = 1 
named parameters: {}
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select user0_.EMAIL_ADDRESS as col_0_0_ from test_user user0_ where user0_.IDENTIFIER=1
preparing statement
about to open ResultSet (open ResultSets: 0, globally: 0)
processing result set
result set row: 0
result row: 
returning 'sri.adiga@persistent.co.in' as column: col_0_0_
done processing result set (1 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
initializing non-lazy collections
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5159865509085184
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
begin
current autocommit status: false
after transaction begin
Inside retrieve method
Prepare select part of query.
Prepare from part of query
unable to locate HQL query plan in cache; generating (from test.User User WHERE  User.identifier in (  1, 2) OR User.firstName is not null OR User.firstName = 'Washu' OR User.identifier < 100 OR User.identifier < 100 OR User.identifier > 100 OR User.identifier > 1 )
parse() - HQL: from test.User User WHERE  User.identifier in (  1, 2) OR User.firstName is not null OR User.firstName = 'Washu' OR User.identifier < 100 OR User.identifier < 100 OR User.identifier > 100 OR User.identifier > 1 
--- HQL AST ---
 \-[QUERY] 'query'
    +-[SELECT_FROM] 'SELECT_FROM'
    |  \-[FROM] 'from'
    |     \-[RANGE] 'RANGE'
    |        +-[DOT] '.'
    |        |  +-[IDENT] 'test'
    |        |  \-[IDENT] 'User'
    |        \-[ALIAS] 'User'
    \-[WHERE] 'WHERE'
       \-[OR] 'OR'
          +-[OR] 'OR'
          |  +-[OR] 'OR'
          |  |  +-[OR] 'OR'
          |  |  |  +-[OR] 'OR'
          |  |  |  |  +-[OR] 'OR'
          |  |  |  |  |  +-[IN] 'in'
          |  |  |  |  |  |  +-[DOT] '.'
          |  |  |  |  |  |  |  +-[IDENT] 'User'
          |  |  |  |  |  |  |  \-[IDENT] 'identifier'
          |  |  |  |  |  |  \-[IN_LIST] 'inList'
          |  |  |  |  |  |     +-[NUM_INT] '1'
          |  |  |  |  |  |     \-[NUM_INT] '2'
          |  |  |  |  |  \-[IS_NOT_NULL] 'is not null'
          |  |  |  |  |     \-[DOT] '.'
          |  |  |  |  |        +-[IDENT] 'User'
          |  |  |  |  |        \-[IDENT] 'firstName'
          |  |  |  |  \-[EQ] '='
          |  |  |  |     +-[DOT] '.'
          |  |  |  |     |  +-[IDENT] 'User'
          |  |  |  |     |  \-[IDENT] 'firstName'
          |  |  |  |     \-[QUOTED_STRING] ''Washu''
          |  |  |  \-[LT] '<'
          |  |  |     +-[DOT] '.'
          |  |  |     |  +-[IDENT] 'User'
          |  |  |     |  \-[IDENT] 'identifier'
          |  |  |     \-[NUM_INT] '100'
          |  |  \-[LT] '<'
          |  |     +-[DOT] '.'
          |  |     |  +-[IDENT] 'User'
          |  |     |  \-[IDENT] 'identifier'
          |  |     \-[NUM_INT] '100'
          |  \-[GT] '>'
          |     +-[DOT] '.'
          |     |  +-[IDENT] 'User'
          |     |  \-[IDENT] 'identifier'
          |     \-[NUM_INT] '100'
          \-[GT] '>'
             +-[DOT] '.'
             |  +-[IDENT] 'User'
             |  \-[IDENT] 'identifier'
             \-[NUM_INT] '1'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} :  test.User (User) -> user0_
Resolved :  User -> user0_.IDENTIFIER
getDataType() : identifier -> org.hibernate.type.LongType@69d02b
Resolved :  User.identifier -> user0_.IDENTIFIER
Resolved :  User -> user0_.IDENTIFIER
getDataType() : firstName -> org.hibernate.type.StringType@18166e5
Resolved :  User.firstName -> user0_.FIRST_NAME
Resolved :  User -> user0_.IDENTIFIER
getDataType() : firstName -> org.hibernate.type.StringType@18166e5
Resolved :  User.firstName -> user0_.FIRST_NAME
Resolved :  User -> user0_.IDENTIFIER
getDataType() : identifier -> org.hibernate.type.LongType@69d02b
Resolved :  User.identifier -> user0_.IDENTIFIER
Resolved :  User -> user0_.IDENTIFIER
getDataType() : identifier -> org.hibernate.type.LongType@69d02b
Resolved :  User.identifier -> user0_.IDENTIFIER
Resolved :  User -> user0_.IDENTIFIER
getDataType() : identifier -> org.hibernate.type.LongType@69d02b
Resolved :  User.identifier -> user0_.IDENTIFIER
Resolved :  User -> user0_.IDENTIFIER
getDataType() : identifier -> org.hibernate.type.LongType@69d02b
Resolved :  User.identifier -> user0_.IDENTIFIER
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( FromClause{level=1} test_user user0_ ) ( WHERE ( OR ( OR ( OR ( OR ( OR ( OR ( in ( user0_.IDENTIFIER user0_.IDENTIFIER identifier ) ( inList 1 2 ) ) ( is not null ( user0_.FIRST_NAME user0_.IDENTIFIER firstName ) ) ) ( = ( user0_.FIRST_NAME user0_.IDENTIFIER firstName ) 'Washu' ) ) ( < ( user0_.IDENTIFIER user0_.IDENTIFIER identifier ) 100 ) ) ( < ( user0_.IDENTIFIER user0_.IDENTIFIER identifier ) 100 ) ) ( > ( user0_.IDENTIFIER user0_.IDENTIFIER identifier ) 100 ) ) ( > ( user0_.IDENTIFIER user0_.IDENTIFIER identifier ) 1 ) ) ) )
Derived SELECT clause created.
Using FROM fragment [test_user user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (test_user)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.IDENTIFIER as IDENTIFIER0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[User], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'test_user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[OR] SqlNode: 'OR'
          +-[OR] SqlNode: 'OR'
          |  +-[OR] SqlNode: 'OR'
          |  |  +-[OR] SqlNode: 'OR'
          |  |  |  +-[OR] SqlNode: 'OR'
          |  |  |  |  +-[OR] SqlNode: 'OR'
          |  |  |  |  |  +-[IN] InLogicOperatorNode: 'in'
          |  |  |  |  |  |  +-[DOT] DotNode: 'user0_.IDENTIFIER' {propertyName=identifier,dereferenceType=4,propertyPath=identifier,path=User.identifier,tableAlias=user0_,className=test.User,classAlias=User}
          |  |  |  |  |  |  |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
          |  |  |  |  |  |  |  \-[IDENT] IdentNode: 'identifier' {originalText=identifier}
          |  |  |  |  |  |  \-[IN_LIST] SqlNode: 'inList'
          |  |  |  |  |  |     +-[NUM_INT] LiteralNode: '1'
          |  |  |  |  |  |     \-[NUM_INT] LiteralNode: '2'
          |  |  |  |  |  \-[IS_NOT_NULL] UnaryLogicOperatorNode: 'is not null'
          |  |  |  |  |     \-[DOT] DotNode: 'user0_.FIRST_NAME' {propertyName=firstName,dereferenceType=4,propertyPath=firstName,path=User.firstName,tableAlias=user0_,className=test.User,classAlias=User}
          |  |  |  |  |        +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
          |  |  |  |  |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |  |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  |     +-[DOT] DotNode: 'user0_.FIRST_NAME' {propertyName=firstName,dereferenceType=4,propertyPath=firstName,path=User.firstName,tableAlias=user0_,className=test.User,classAlias=User}
          |  |  |  |     |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
          |  |  |  |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |  |  |     \-[QUOTED_STRING] LiteralNode: ''Washu''
          |  |  |  \-[LT] BinaryLogicOperatorNode: '<'
          |  |  |     +-[DOT] DotNode: 'user0_.IDENTIFIER' {propertyName=identifier,dereferenceType=4,propertyPath=identifier,path=User.identifier,tableAlias=user0_,className=test.User,classAlias=User}
          |  |  |     |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
          |  |  |     |  \-[IDENT] IdentNode: 'identifier' {originalText=identifier}
          |  |  |     \-[NUM_INT] LiteralNode: '100'
          |  |  \-[LT] BinaryLogicOperatorNode: '<'
          |  |     +-[DOT] DotNode: 'user0_.IDENTIFIER' {propertyName=identifier,dereferenceType=4,propertyPath=identifier,path=User.identifier,tableAlias=user0_,className=test.User,classAlias=User}
          |  |     |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
          |  |     |  \-[IDENT] IdentNode: 'identifier' {originalText=identifier}
          |  |     \-[NUM_INT] LiteralNode: '100'
          |  \-[GT] BinaryLogicOperatorNode: '>'
          |     +-[DOT] DotNode: 'user0_.IDENTIFIER' {propertyName=identifier,dereferenceType=4,propertyPath=identifier,path=User.identifier,tableAlias=user0_,className=test.User,classAlias=User}
          |     |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
          |     |  \-[IDENT] IdentNode: 'identifier' {originalText=identifier}
          |     \-[NUM_INT] LiteralNode: '100'
          \-[GT] BinaryLogicOperatorNode: '>'
             +-[DOT] DotNode: 'user0_.IDENTIFIER' {propertyName=identifier,dereferenceType=4,propertyPath=identifier,path=User.identifier,tableAlias=user0_,className=test.User,classAlias=User}
             |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'identifier' {originalText=identifier}
             \-[NUM_INT] LiteralNode: '1'

throwQueryException() : no errors
HQL: from test.User User WHERE  User.identifier in (  1, 2) OR User.firstName is not null OR User.firstName = 'Washu' OR User.identifier < 100 OR User.identifier < 100 OR User.identifier > 100 OR User.identifier > 1 
SQL: select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_ where user0_.IDENTIFIER in (1 , 2) or user0_.FIRST_NAME is not null or user0_.FIRST_NAME='Washu' or user0_.IDENTIFIER<100 or user0_.IDENTIFIER<100 or user0_.IDENTIFIER>100 or user0_.IDENTIFIER>1
throwQueryException() : no errors
HQL param location recognition took 0 mills (from test.User User WHERE  User.identifier in (  1, 2) OR User.firstName is not null OR User.firstName = 'Washu' OR User.identifier < 100 OR User.identifier < 100 OR User.identifier > 100 OR User.identifier > 1 )
located HQL query plan in cache (from test.User User WHERE  User.identifier in (  1, 2) OR User.firstName is not null OR User.firstName = 'Washu' OR User.identifier < 100 OR User.identifier < 100 OR User.identifier > 100 OR User.identifier > 1 )
find: from test.User User WHERE  User.identifier in (  1, 2) OR User.firstName is not null OR User.firstName = 'Washu' OR User.identifier < 100 OR User.identifier < 100 OR User.identifier > 100 OR User.identifier > 1 
named parameters: {}
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_ where user0_.IDENTIFIER in (1 , 2) or user0_.FIRST_NAME is not null or user0_.FIRST_NAME='Washu' or user0_.IDENTIFIER<100 or user0_.IDENTIFIER<100 or user0_.IDENTIFIER>100 or user0_.IDENTIFIER>1
preparing statement
about to open ResultSet (open ResultSets: 0, globally: 0)
processing result set
result set row: 0
returning '1' as column: IDENTIFIER0_
result row: EntityKey[test.User#1]
Initializing object from ResultSet: [test.User#1]
Hydrating entity: [test.User#1]
returning 'sri.adiga@persistent.co.in' as column: EMAIL2_0_
returning 'Srikanth' as column: FIRST3_0_
returning 'Adiga' as column: LAST4_0_
returning null as column: ACTIVITY5_0_
result set row: 1
returning '3' as column: IDENTIFIER0_
result row: EntityKey[test.User#3]
Initializing object from ResultSet: [test.User#3]
Hydrating entity: [test.User#3]
returning 'abhijit_naik@persistent.co.in' as column: EMAIL2_0_
returning 'abhijit' as column: FIRST3_0_
returning 'naik' as column: LAST4_0_
returning null as column: ACTIVITY5_0_
result set row: 2
returning '4' as column: IDENTIFIER0_
result row: EntityKey[test.User#4]
Initializing object from ResultSet: [test.User#4]
Hydrating entity: [test.User#4]
returning 'sach@lale.co.in' as column: EMAIL2_0_
returning 'sachin' as column: FIRST3_0_
returning 'Lale' as column: LAST4_0_
returning null as column: ACTIVITY5_0_
done processing result set (3 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
total objects hydrated: 3
resolving associations for [test.User#1]
adding entity to second-level cache: [test.User#1]
Caching: test.User#1
key: test.User#1
test.UserCache: test.UserMemoryStore hit for test.User#1
Item was already cached: test.User#1
done materializing entity [test.User#1]
resolving associations for [test.User#3]
adding entity to second-level cache: [test.User#3]
Caching: test.User#3
key: test.User#3
test.UserCache: test.UserMemoryStore hit for test.User#3
Item was already cached: test.User#3
done materializing entity [test.User#3]
resolving associations for [test.User#4]
adding entity to second-level cache: [test.User#4]
Caching: test.User#4
key: test.User#4
test.UserCache: test.UserMemoryStore hit for test.User#4
Item was already cached: test.User#4
done materializing entity [test.User#4]
initializing non-lazy collections
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5159865509146624
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
begin
current autocommit status: false
after transaction begin
Inside retrieve method
loading entity: [test.User#1]
creating new proxy for entity
initializing proxy: [test.User#1]
attempting to resolve: [test.User#1]
Cache lookup: test.User#1
key: test.User#1
test.UserCache: test.UserMemoryStore hit for test.User#1
Cache hit: test.User#1
assembling entity from second-level cache: [test.User#1]
Cached Version: null
initializing non-lazy collections
resolved object in second-level cache: [test.User#1]
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5159865509146625
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
begin
current autocommit status: false
after transaction begin
Insert Object
saving transient instance
saving [test.Address#<null>]
executing insertions
Inserting entity: test.Address (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into test_address (STREET) values (?)
preparing statement
Dehydrating entity: [test.Address#<null>]
binding 'Street unknown' to parameter: 1
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
could not insert: [test.Address] [insert into test_address (STREET) values (?)]
com.mysql.jdbc.exceptions.MySQLIntegrityConstraintViolationException: Duplicate entry 'Street unknown' for key 2
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:931)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:2985)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1631)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1723)
	at com.mysql.jdbc.Connection.execSQL(Connection.java:3283)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1332)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1604)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1519)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1504)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:1968)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2405)
	at org.hibernate.action.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:37)
	at org.hibernate.engine.ActionQueue.execute(ActionQueue.java:248)
	at org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:269)
	at org.hibernate.event.def.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)
	at org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:101)
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:186)
	at org.hibernate.event.def.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:33)
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:175)
	at org.hibernate.event.def.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:27)
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:70)
	at org.hibernate.impl.SessionImpl.fireSave(SessionImpl.java:530)
	at org.hibernate.impl.SessionImpl.save(SessionImpl.java:518)
	at org.hibernate.impl.SessionImpl.save(SessionImpl.java:514)
	at edu.wustl.dao.HibernateDAOImpl.insert(HibernateDAOImpl.java:114)
	at edu.wustl.dao.test.HibernateTestCaseForCatissue.testConstraintViolation(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at junit.framework.TestCase.runTest(TestCase.java:168)
	at junit.framework.TestCase.runBare(TestCase.java:134)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
SQL Error: 1062, SQLState: 23000
Duplicate entry 'Street unknown' for key 2
could not insert: [test.Address]
org.hibernate.exception.ConstraintViolationException: could not insert: [test.Address]
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:71)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:1986)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2405)
	at org.hibernate.action.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:37)
	at org.hibernate.engine.ActionQueue.execute(ActionQueue.java:248)
	at org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:269)
	at org.hibernate.event.def.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)
	at org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:101)
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:186)
	at org.hibernate.event.def.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:33)
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:175)
	at org.hibernate.event.def.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:27)
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:70)
	at org.hibernate.impl.SessionImpl.fireSave(SessionImpl.java:530)
	at org.hibernate.impl.SessionImpl.save(SessionImpl.java:518)
	at org.hibernate.impl.SessionImpl.save(SessionImpl.java:514)
	at edu.wustl.dao.HibernateDAOImpl.insert(HibernateDAOImpl.java:114)
	at edu.wustl.dao.test.HibernateTestCaseForCatissue.testConstraintViolation(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at junit.framework.TestCase.runTest(TestCase.java:168)
	at junit.framework.TestCase.runBare(TestCase.java:134)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Caused by: com.mysql.jdbc.exceptions.MySQLIntegrityConstraintViolationException: Duplicate entry 'Street unknown' for key 2
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:931)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:2985)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1631)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1723)
	at com.mysql.jdbc.Connection.execSQL(Connection.java:3283)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1332)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1604)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1519)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1504)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:1968)
	... 33 more
could not insert: [test.Address]
org.hibernate.exception.ConstraintViolationException: could not insert: [test.Address]
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:71)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:1986)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2405)
	at org.hibernate.action.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:37)
	at org.hibernate.engine.ActionQueue.execute(ActionQueue.java:248)
	at org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:269)
	at org.hibernate.event.def.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)
	at org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:101)
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:186)
	at org.hibernate.event.def.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:33)
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:175)
	at org.hibernate.event.def.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:27)
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:70)
	at org.hibernate.impl.SessionImpl.fireSave(SessionImpl.java:530)
	at org.hibernate.impl.SessionImpl.save(SessionImpl.java:518)
	at org.hibernate.impl.SessionImpl.save(SessionImpl.java:514)
	at edu.wustl.dao.HibernateDAOImpl.insert(HibernateDAOImpl.java:114)
	at edu.wustl.dao.test.HibernateTestCaseForCatissue.testConstraintViolation(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at junit.framework.TestCase.runTest(TestCase.java:168)
	at junit.framework.TestCase.runBare(TestCase.java:134)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Caused by: com.mysql.jdbc.exceptions.MySQLIntegrityConstraintViolationException: Duplicate entry 'Street unknown' for key 2
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:931)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:2985)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1631)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1723)
	at com.mysql.jdbc.Connection.execSQL(Connection.java:3283)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1332)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1604)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1519)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1504)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:1968)
	... 33 more
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Error key name ::db.insert.data.error
------------------------------------------------------------------------
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5159865509212160
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
begin
current autocommit status: false
after transaction begin
Execute query
unable to locate HQL query plan in cache; generating (select identifier from test.User)
parse() - HQL: select identifier from test.User
--- HQL AST ---
 \-[QUERY] 'query'
    \-[SELECT_FROM] 'SELECT_FROM'
       +-[FROM] 'from'
       |  \-[RANGE] 'RANGE'
       |     \-[DOT] '.'
       |        +-[IDENT] 'test'
       |        \-[IDENT] 'User'
       \-[SELECT] 'select'
          \-[IDENT] 'identifier'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} :  test.User (no alias) -> user0_
attempting to resolve property [identifier] as a non-qualified ref
Resolved :  {synthetic-alias} -> {synthetic-alias}
getDataType() : identifier -> org.hibernate.type.LongType@69d02b
Resolved :  {synthetic-alias}.identifier -> user0_.IDENTIFIER
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( user0_.IDENTIFIER {synthetic-alias} identifier ) ) ( FromClause{level=1} test_user user0_ ) )
Using FROM fragment [test_user user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (test_user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'user0_.IDENTIFIER' {propertyName=identifier,dereferenceType=4,propertyPath=identifier,path={synthetic-alias}.identifier,tableAlias=user0_,className=test.User,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'identifier' {originalText=identifier}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'test_user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}

throwQueryException() : no errors
HQL: select identifier from test.User
SQL: select user0_.IDENTIFIER as col_0_0_ from test_user user0_
throwQueryException() : no errors
HQL param location recognition took 0 mills (select identifier from test.User)
located HQL query plan in cache (select identifier from test.User)
find: select identifier from test.User
named parameters: {}
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select user0_.IDENTIFIER as col_0_0_ from test_user user0_ limit ?
preparing statement
about to open ResultSet (open ResultSets: 0, globally: 0)
processing result set
result set row: 0
result row: 
returning '1' as column: col_0_0_
done processing result set (1 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
initializing non-lazy collections
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5159865509273600
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
Get Query RS [select IDENTIFIER from test_user] MAX RECORDS =[2]
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5159865509273601
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
Execute query.
connection commit
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5159865509531648
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
Get Query RS
Identifier :1
Get Query RS
 Name:::Srikanth
Identifier :3
Get Query RS
 Name:::abhijit
Identifier :4
Get Query RS
 Name:::sachin
connection commit
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5159865509531649
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
Inside retrieve method
Prepare select part of query
Prepare from part of the query
JDBC Query SELECT * FROM test_user
get list from RS
Get Query RS
RScom.mysql.jdbc.ResultSet@787c16
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5159865509531650
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
Inside retrieve method
Prepare select part of query
Prepare from part of the query
JDBC Query SELECT * FROM test_user WHERE  test_user.IDENTIFIER = 1 
get list from RS
Get Query RS
RScom.mysql.jdbc.ResultSet@1ce669e
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5159865509531651
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
Inside retrieve method
Prepare select part of query
Prepare from part of the query
JDBC Query SELECT IDENTIFIER  ,FIRST_NAME  ,LAST_NAME  ,EMAIL_ADDRESS  FROM test_user
get list from RS
Get Query RS
RScom.mysql.jdbc.ResultSet@12c3327
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5159865509531652
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
Inside retrieve method
Prepare select part of query
Prepare from part of the query
JDBC Query SELECT  DISTINCT IDENTIFIER  ,FIRST_NAME  ,LAST_NAME  ,EMAIL_ADDRESS  FROM test_user
get list from RS
Get Query RS
RScom.mysql.jdbc.ResultSet@b05acd
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5159865509597184
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
Inside retrieve method
Prepare select part of query
Prepare from part of the query
JDBC Query SELECT * FROM test_user WHERE  test_user.IDENTIFIER in (  1, 2) OR test_user.FIRST_NAME in (  'JOHN', 'abhijit') 
get list from RS
Get Query RS
RScom.mysql.jdbc.ResultSet@c3c315
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5159865509597185
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
Inside retrieve method
Prepare select part of query
Prepare from part of the query
JDBC Query SELECT * FROM test_user WHERE  test_user.IDENTIFIER is not null OR test_user.LAST_NAME is not null 
get list from RS
Get Query RS
RScom.mysql.jdbc.ResultSet@1a4ded3
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5159865509597186
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
Inside retrieve method
Prepare select part of query
Prepare from part of the query
JDBC Query SELECT * FROM test_user WHERE  test_user.LAST_NAME is null OR test_user.IDENTIFIER != 1 
get list from RS
Get Query RS
RScom.mysql.jdbc.ResultSet@179953c
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5159865509597187
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
Inside retrieve method
Prepare select part of query
Prepare from part of the query
JDBC Query SELECT * FROM test_user WHERE  test_user.IDENTIFIER != 1 AND test_user.LAST_NAME != 'NAIK' 
get list from RS
Get Query RS
RScom.mysql.jdbc.ResultSet@f01771
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5159865509597188
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
Inside retrieve method
Prepare select part of query
Prepare from part of the query
JDBC Query SELECT * FROM test_user WHERE  test_user.LAST_NAME = 'NAIK' 
get list from RS
Get Query RS
RScom.mysql.jdbc.ResultSet@1722456
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5159865509597189
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
Initialize batch
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Generate String
Sql String: insert into person (account_id,address_id,age,birth_date,first_name,identifier,isAvailable,second_name ) values (?,?,?,?,?,?,?,? )
insert batch
insert batch
insert batch
insert batch
insert batch
insert batch
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5159865509785600
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
connection commit
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5159865509916672
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
connection commit
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5159865510043648
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
SQl : insert into person (identifier,first_name,second_name,age,address_id,account_id,birth_date,isAvailable ) values (?,?,?,?,?,?,?,? )  Invalid data : kalpana'delete1 Encountered invalid character:delete
Error key name ::db.malicious.data.encountered
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5159865510043649
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
connection commit
Execute query.
connection commit
connection commit
Execute query.
connection commit
connection commit
Execute query.
connection commit
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5159865510617088
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
Get Query RS [select FIRST_NAME, IDENTIFIER from test_user where IDENTIFIER = ? ] MAX RECORDS =[null]
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5159865510617089
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
Get Query RS [select FIRST_NAME, IDENTIFIER from test_user where FIRST_NAME = ? ] MAX RECORDS =[null]
SQl : select FIRST_NAME, IDENTIFIER from test_user where FIRST_NAME = ?   Invalid data : sri-- Encountered invalid character:--
Error key name ::db.malicious.data.encountered
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
]]></system-out>

      <system-err><![CDATA[edu.wustl.dao.exception.DAOException: 
	at edu.wustl.dao.util.DAOUtility.getDAOException(DAOUtility.java:345)
	at edu.wustl.dao.HibernateDAOImpl.insert(HibernateDAOImpl.java:119)
	at edu.wustl.dao.test.HibernateTestCaseForCatissue.testConstraintViolation(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at junit.framework.TestCase.runTest(TestCase.java:168)
	at junit.framework.TestCase.runBare(TestCase.java:134)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Caused by: org.hibernate.exception.ConstraintViolationException: could not insert: [test.Address]
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:71)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:1986)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2405)
	at org.hibernate.action.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:37)
	at org.hibernate.engine.ActionQueue.execute(ActionQueue.java:248)
	at org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:269)
	at org.hibernate.event.def.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)
	at org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:101)
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:186)
	at org.hibernate.event.def.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:33)
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:175)
	at org.hibernate.event.def.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:27)
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:70)
	at org.hibernate.impl.SessionImpl.fireSave(SessionImpl.java:530)
	at org.hibernate.impl.SessionImpl.save(SessionImpl.java:518)
	at org.hibernate.impl.SessionImpl.save(SessionImpl.java:514)
	at edu.wustl.dao.HibernateDAOImpl.insert(HibernateDAOImpl.java:114)
	... 18 more
Caused by: com.mysql.jdbc.exceptions.MySQLIntegrityConstraintViolationException: Duplicate entry 'Street unknown' for key 2
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:931)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:2985)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1631)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1723)
	at com.mysql.jdbc.Connection.execSQL(Connection.java:3283)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1332)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1604)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1519)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1504)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:1968)
	... 33 more
edu.wustl.dao.exception.DAOException: 
	at edu.wustl.dao.util.DAOUtility.getDAOException(DAOUtility.java:345)
	at edu.wustl.dao.AbstractJDBCDAOImpl.checkforInvalidData(AbstractJDBCDAOImpl.java:898)
	at edu.wustl.dao.AbstractJDBCDAOImpl.validateSql(AbstractJDBCDAOImpl.java:869)
	at edu.wustl.dao.AbstractJDBCDAOImpl.executeUpdate(AbstractJDBCDAOImpl.java:717)
	at edu.wustl.dao.test.JDBCTestCasesForCatissue.testExecuteUpdateforMaliciousData(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at junit.framework.TestCase.runTest(TestCase.java:168)
	at junit.framework.TestCase.runBare(TestCase.java:134)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
edu.wustl.dao.exception.DAOException: 
	at edu.wustl.dao.util.DAOUtility.getDAOException(DAOUtility.java:345)
	at edu.wustl.dao.AbstractJDBCDAOImpl.checkforInvalidData(AbstractJDBCDAOImpl.java:898)
	at edu.wustl.dao.AbstractJDBCDAOImpl.getResultSet(AbstractJDBCDAOImpl.java:1405)
	at edu.wustl.dao.AbstractJDBCDAOImpl.executeQuery(AbstractJDBCDAOImpl.java:1341)
	at edu.wustl.dao.test.JDBCTestCasesForCatissue.testCaseExecuteQueryWithPreparedStmt(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at junit.framework.TestCase.runTest(TestCase.java:168)
	at junit.framework.TestCase.runBare(TestCase.java:134)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
]]></system-err>

  </testsuite>
</testsuites>
