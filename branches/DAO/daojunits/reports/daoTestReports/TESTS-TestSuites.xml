<?xml version="1.0" encoding="UTF-8" ?>
<testsuites>
  <testsuite errors="0" failures="0" id="0" name="DAOTestSuite" package="edu.wustl.dao.test" tests="48" time="2.14">
      <properties>
          <property name="java.vendor" value="Sun Microsystems Inc." />

          <property name="lib.dir" value="../lib" />

          <property name="ant.file.DAOJunits" value="F:\catissueWorkspace\DAOWithoutAudit\daojunits\daojunit.xml" />

          <property name="database.name" value="daodb" />

          <property name="eclipse.pdebuild.templates" value="/F:/washuEclipse/eclipse/eclipse/plugins/org.eclipse.pde.build_3.4.0.v20080604/templates/" />

          <property name="sun.management.compiler" value="HotSpot Client Compiler" />

          <property name="database.temptablespace" value="TEMP" />

          <property name="os.name" value="Windows XP" />

          <property name="sun.boot.class.path" value="C:\Program Files\Java\jdk1.5.0_08\jre\lib\rt.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\i18n.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\jce.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.5.0_08\jre\classes" />

          <property name="sun.desktop" value="windows" />

          <property name="java.vm.specification.vendor" value="Sun Microsystems Inc." />

          <property name="net.sourceforge.cobertura.datafile" value="F:\catissueWorkspace\DAOWithoutAudit\daojunits\cobertura.ser" />

          <property name="ant.home" value="E:\Ant\apache-ant-1.7.0" />

          <property name="java.runtime.version" value="1.5.0_08-b03" />

          <property name="user.name" value="kalpana_thakur" />

          <property name="database.tablespace" value="CATISSUE_NIGHTLY_BUILD" />

          <property name="test.classes.dir" value="./classes" />

          <property name="mysql.dao.prop.filename" value="MySQLDAOProperties.xml" />

          <property name="oracle.dao.prop.filename" value="OracleDAOProperties.xml" />

          <property name="database.password" value="root" />

          <property name="user.language" value="en" />

          <property name="base.path" value="F:\catissueWorkspace\DAOWithoutAudit\daojunits" />

          <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk1.5.0_08\jre\bin" />

          <property name="ant.project.name" value="DAOJunits" />

          <property name="java.version" value="1.5.0_08" />

          <property name="user.timezone" value="" />

          <property name="sun.arch.data.model" value="32" />

          <property name="test.src.dir" value="./src" />

          <property name="java.endorsed.dirs" value="C:\Program Files\Java\jdk1.5.0_08\jre\lib\endorsed" />

          <property name="sun.cpu.isalist" value="" />

          <property name="sun.jnu.encoding" value="Cp1252" />

          <property name="file.encoding.pkg" value="sun.io" />

          <property name="file.separator" value="\" />

          <property name="java.specification.name" value="Java Platform API Specification" />

          <property name="java.class.version" value="49.0" />

          <property name="database.host" value="ps4267" />

          <property name="user.country" value="US" />

          <property name="java.home" value="C:\Program Files\Java\jdk1.5.0_08\jre" />

          <property name="java.vm.info" value="mixed mode, sharing" />

          <property name="database.username" value="root" />

          <property name="ant.file" value="F:\catissueWorkspace\DAOWithoutAudit\daojunits\daojunit.xml" />

          <property name="os.version" value="5.1" />

          <property name="path.separator" value=";" />

          <property name="java.vm.version" value="1.5.0_08-b03" />

          <property name="test.instrumented.dir" value="./instrument" />

          <property name="report.dir" value="." />

          <property name="user.variant" value="" />

          <property name="ant.library.dir" value="E:\Ant\apache-ant-1.7.0\lib" />

          <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob" />

          <property name="oracle.driver.string" value="oracle.jdbc.driver.OracleDriver" />

          <property name="sun.io.unicode.encoding" value="UnicodeLittle" />

          <property name="awt.toolkit" value="sun.awt.windows.WToolkit" />

          <property name="eclipse.pdebuild.scripts" value="/F:/washuEclipse/eclipse/eclipse/plugins/org.eclipse.pde.build_3.4.0.v20080604/scripts/" />

          <property name="coverage.dir" value="." />

          <property name="user.home" value="C:\Documents and Settings\kalpana_thakur" />

          <property name="database.temppassword" value="system123" />

          <property name="java.specification.vendor" value="Sun Microsystems Inc." />

          <property name="java.library.path" value="C:\Program Files\Java\jdk1.5.0_08\jre\bin;.;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.5.0_08/bin/../jre/bin/client;C:/Program Files/Java/jdk1.5.0_08/bin/../jre/bin;C:\Tcl\bin;E:\Ant\apache-ant-1.7.0\bin;C:\Program Files\Java\jdk1.6.0\bin;C:\Program Files\DeID\;C:\Program Files\TortoiseCVS;C:\Program Files\Java\jdk1.5.0_08\bin;;F:\oracle\ora92\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\mysql server\bin;C:\Program Files\YourKit Java Profiler 7.0.11\bin\win32;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Windows Imaging\" />

          <property name="java.vendor.url" value="http://java.sun.com/" />

          <property name="java.vm.vendor" value="Sun Microsystems Inc." />

          <property name="java.runtime.name" value="Java(TM) 2 Runtime Environment, Standard Edition" />

          <property name="database.tempusername" value="system" />

          <property name="java.class.path" value="F:\catissueWorkspace\DAOWithoutAudit\daojunits\instrument;F:\catissueWorkspace\DAOWithoutAudit\classes;F:\catissueWorkspace\DAOWithoutAudit\lib\ant-contrib.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\antlr-2.7.5H3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\asm.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\castor-1.3-core.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\castor-1.3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\cglib.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\commons-collections-3.2.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\commons-logging.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\dom4j-1.6.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\ehcache-1.2.3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\hibernate3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\j2ee.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\junit-4.5.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\log4j.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\mmtxProject.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\mysql-connector-java-5.0.8-bin.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\ojdbc14.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\washu-commons-1.1.4.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\src;F:\catissueWorkspace\DAOWithoutAudit\daojunits\classes;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\asm-2.2.1.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\asm-tree-2.2.1.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\cobertura.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\jakarta-oro-2.0.8.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\log4j.jar;E:\Ant\apache-ant-1.7.0\lib\junit-4.1.jar;E:\Ant\apache-ant-1.7.0\lib\ant-launcher.jar;E:\Ant\apache-ant-1.7.0\lib\ant.jar;E:\Ant\apache-ant-1.7.0\lib\ant-junit.jar" />

          <property name="ant.version" value="Apache Ant version 1.7.0 compiled on December 13 2006" />

          <property name="cobertura.location" value="." />

          <property name="java.vm.specification.name" value="Java Virtual Machine Specification" />

          <property name="java.vm.specification.version" value="1.0" />

          <property name="base.dir" value="." />

          <property name="sun.cpu.endian" value="little" />

          <property name="sun.os.patch.level" value="Service Pack 2" />

          <property name="mysql.driver.string" value="com.mysql.jdbc.Driver" />

          <property name="java.io.tmpdir" value="C:\DOCUME~1\KALPAN~1\LOCALS~1\Temp\" />

          <property name="eclipse.pdebuild.home" value="/F:/washuEclipse/eclipse/eclipse/plugins/org.eclipse.pde.build_3.4.0.v20080604/./" />

          <property name="database.port" value="3306" />

          <property name="java.vendor.url.bug" value="http://java.sun.com/cgi-bin/bugreport.cgi" />

          <property name="os.arch" value="x86" />

          <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment" />

          <property name="oracle.dialect.string" value="org.hibernate.dialect.Oracle9Dialect" />

          <property name="java.ext.dirs" value="C:\Program Files\Java\jdk1.5.0_08\jre\lib\ext" />

          <property name="user.dir" value="F:\catissueWorkspace\DAOWithoutAudit\daojunits" />

          <property name="proj.src" value="../src" />

          <property name="line.separator" value=" " />

          <property name="java.vm.name" value="Java HotSpot(TM) Client VM" />

          <property name="mysql.dialect.string" value="org.hibernate.dialect.MySQLDialect" />

          <property name="basedir" value="F:\catissueWorkspace\DAOWithoutAudit\daojunits" />

          <property name="ant.java.version" value="1.5" />

          <property name="ant.core.lib" value="E:\Ant\apache-ant-1.7.0\lib\ant.jar" />

          <property name="file.encoding" value="Cp1252" />

          <property name="database.type" value="mysql" />

          <property name="proj.classes" value="../classes" />

          <property name="java.specification.version" value="1.5" />

          <property name="cobertura.lib" value="coberturalib" />

      </properties>

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testDAOInstance" time="0.0" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testInsertPerson" time="0.828" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testInsertUser" time="0.078" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testUpdateUser" time="0.157" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testUpdatePerson" time="0.078" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testUpdateAuditablePerson" time="0.015" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testCaseInsertObject" time="0.047" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testRetrieveForCatissue" time="0.25" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testCaseRetriveAllObjects" time="0.0" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testCaseRetriveObject" time="0.016" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testCaseRetrieveObjectColumns" time="0.016" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testCaseRetrieveObjectAsPerID" time="0.0" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testRetriveInCondition" time="0.015" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testRetriveIsNotNullCondition" time="0.016" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testRetriveIsNullCondition" time="0.094" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testCaseExecuteQuery" time="0.015" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testRetrieveAttribute" time="0.016" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testRetriveComplexQuery" time="0.015" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testDAOFactoryMembers" time="0.0" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testDifferentMethodsOfHibernateMetaData" time="0.0" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testConstraintViolation" time="0.016" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testCaseExecuteQueryWithFixedResultSize" time="0.0" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testCaseDeleteObject" time="0.188" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testDAOConfigFactory" time="0.0" />

      <testcase classname="edu.wustl.dao.test.HibernateTestCaseForCatissue" name="testDefaultFactory" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testCaseExecuteQueryWithFixedResultSize" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testJDBCDAOInstance" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testExecuteUpdateJDBC" time="0.015" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testResultSet" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testCaseRetriveAllObjectsJDBC" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testCaseRetriveObjectJDBC" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testCaseRetrieveObjectColumnsJDBC" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testCaseRetrieveOnlyDistinctRowsJDBC" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testRetriveInConditionJDBC" time="0.016" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testRetriveIsNotNullConditionJDBC" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testRetriveIsNullConditionJDBC" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testRetriveNotEqualConditionJDBC" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testRetriveEqualConditionJDBC" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testBatchInsert" time="0.062" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testExecuteUpdate" time="0.016" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testExecuteUpdateforPreparedStatement" time="0.031" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testExecuteUpdateforMaliciousData" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testMultipleTransaction" time="0.11" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testCaseExecuteQueryforMaliciousCode" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testCaseExecuteQueryWithPreparedStmt" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testCaseDeleteTable" time="0.015" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testDAOConfigFactory" time="0.0" />

      <testcase classname="edu.wustl.dao.test.JDBCTestCasesForCatissue" name="testDefaultFactory" time="0.0" />

      <system-out><![CDATA[Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Hibernate 3.1.3
hibernate.properties not found
using CGLIB reflection optimizer
using JDK 1.4 java.sql.Timestamp handling
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
configuring from XML document
show_sql=false
dialect=org.hibernate.dialect.MySQLDialect
connection.driver_class=com.mysql.jdbc.Driver
connection.url=jdbc:mysql://ps4267:3306/daodb
connection.username=root
connection.password=root
null<-org.dom4j.tree.DefaultAttribute@1a626f [Attribute: name resource value "testhbm/User.hbm.xml"]
Reading mappings from resource: testhbm/User.hbm.xml
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
Mapping class: test.User -> test_user
Mapped property: id -> IDENTIFIER
Mapped property: emailAddress -> EMAIL_ADDRESS
Mapped property: firstName -> FIRST_NAME
Mapped property: lastName -> LAST_NAME
Mapped property: activityStatus -> ACTIVITY_STATUS
Mapped property: orderCollection
null<-org.dom4j.tree.DefaultAttribute@1bca5f1 [Attribute: name resource value "testhbm/Person.hbm.xml"]
Reading mappings from resource: testhbm/Person.hbm.xml
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
Mapping class: test.Person -> test_person
Mapped property: id -> IDENTIFIER
Mapped property: name -> NAME
Mapped property: address -> ADDRESS_ID
Mapped property: orderCollection
null<-org.dom4j.tree.DefaultAttribute@d2906a [Attribute: name resource value "testhbm/Address.hbm.xml"]
Reading mappings from resource: testhbm/Address.hbm.xml
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
Mapping class: test.Address -> test_address
Mapped property: id -> IDENTIFIER
Mapped property: street -> STREET
null<-org.dom4j.tree.DefaultAttribute@126e85f [Attribute: name resource value "testhbm/Order.hbm.xml"]
Reading mappings from resource: testhbm/Order.hbm.xml
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
Mapping class: test.Order -> test_order
Mapped property: id -> IDENTIFIER
Mapped property: person -> person_id
Mapped property: user -> user_id
null<-org.dom4j.tree.DefaultAttribute@2ce908 [Attribute: name resource value "edu/wustl/common/hbm/AuditEvent.hbm.xml"]
Reading mappings from resource: edu/wustl/common/hbm/AuditEvent.hbm.xml
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
Mapping class: edu.wustl.common.domain.AuditEvent -> CATISSUE_AUDIT_EVENT
Mapped property: id -> IDENTIFIER
Mapped property: timestamp -> EVENT_TIMESTAMP
Mapped property: userId -> USER_ID
Mapped property: eventType -> EVENT_TYPE
Mapped property: comments -> COMMENTS
Mapped property: ipAddress -> IP_ADDRESS
Mapped property: auditEventLogCollection
null<-org.dom4j.tree.DefaultAttribute@27391d [Attribute: name resource value "edu/wustl/common/hbm/AuditEventDetails.hbm.xml"]
Reading mappings from resource: edu/wustl/common/hbm/AuditEventDetails.hbm.xml
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
Mapping class: edu.wustl.common.domain.AuditEventDetails -> CATISSUE_AUDIT_EVENT_DETAILS
Mapped property: id -> IDENTIFIER
Mapped property: elementName -> ELEMENT_NAME
Mapped property: previousValue -> PREVIOUS_VALUE
Mapped property: currentValue -> CURRENT_VALUE
Mapped property: auditEventLog -> AUDIT_EVENT_LOG_ID
null<-org.dom4j.tree.DefaultAttribute@148aa23 [Attribute: name resource value "edu/wustl/common/hbm/AuditEventLog.hbm.xml"]
Reading mappings from resource: edu/wustl/common/hbm/AuditEventLog.hbm.xml
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
Mapping class: edu.wustl.common.domain.AuditEventLog -> CATISSUE_AUDIT_EVENT_LOG
Mapped property: id -> IDENTIFIER
Mapped property: objectIdentifier -> OBJECT_IDENTIFIER
Mapped property: objectName -> OBJECT_NAME
Mapped property: eventType -> EVENT_TYPE
Mapped property: auditEvent -> AUDIT_EVENT_ID
Mapped property: auditEventDetailsCollection
null<-org.dom4j.tree.DefaultAttribute@1b1aa65 [Attribute: name resource value "edu/wustl/common/hbm/AbstractAuditEventLog.hbm.xml"]
Reading mappings from resource: edu/wustl/common/hbm/AbstractAuditEventLog.hbm.xml
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
Mapping class: edu.wustl.common.domain.AbstractAuditEventLog -> CATISSUE_AUDIT_EVENT_LOG
Mapped property: id -> IDENTIFIER
Mapped property: auditEvent -> AUDIT_EVENT_ID
Mapping joined-subclass: edu.wustl.common.domain.AuditDataEventLog -> CATISSUE_DATA_AUDIT_EVENT_LOG
Mapped property: objectIdentifier -> OBJECT_IDENTIFIER
Mapped property: objectName -> OBJECT_NAME
Mapped property: auditDataEventLogs
Mapped property: auditEventDetailsCollection
null<-org.dom4j.tree.DefaultAttribute@c8f6f8 [Attribute: name resource value "edu/wustl/common/hbm/LoginEvent.hbm.xml"]
Reading mappings from resource: edu/wustl/common/hbm/LoginEvent.hbm.xml
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
Mapping class: edu.wustl.common.domain.LoginEvent -> CATISSUE_LOGIN_AUDIT_EVENT_LOG
Mapped property: id -> IDENTIFIER
Mapped property: timestamp -> LOGIN_TIMESTAMP
Mapped property: sourceId -> LOGIN_SOURCE_ID
Mapped property: userLoginId -> USER_LOGIN_ID
Mapped property: ipAddress -> LOGIN_IP_ADDRESS
Mapped property: isLoginSuccessful -> IS_LOGIN_SUCCESSFUL
Configured SessionFactory: null
properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) 2 Runtime Environment, Standard Edition, sun.boot.library.path=C:\Program Files\Java\jdk1.5.0_08\jre\bin, java.vm.version=1.5.0_08-b03, hibernate.connection.username=root, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=US, sun.os.patch.level=Service Pack 2, java.vm.specification.name=Java Virtual Machine Specification, user.dir=F:\catissueWorkspace\DAOWithoutAudit\daojunits, java.runtime.version=1.5.0_08-b03, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\Program Files\Java\jdk1.5.0_08\jre\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\DOCUME~1\KALPAN~1\LOCALS~1\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows XP, net.sourceforge.cobertura.datafile=F:\catissueWorkspace\DAOWithoutAudit\daojunits\cobertura.ser, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk1.5.0_08\jre\bin;.;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.5.0_08/bin/../jre/bin/client;C:/Program Files/Java/jdk1.5.0_08/bin/../jre/bin;C:\Tcl\bin;E:\Ant\apache-ant-1.7.0\bin;C:\Program Files\Java\jdk1.6.0\bin;C:\Program Files\DeID\;C:\Program Files\TortoiseCVS;C:\Program Files\Java\jdk1.5.0_08\bin;;F:\oracle\ora92\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\mysql server\bin;C:\Program Files\YourKit Java Profiler 7.0.11\bin\win32;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Windows Imaging\, java.specification.name=Java Platform API Specification, java.class.version=49.0, sun.management.compiler=HotSpot Client Compiler, os.version=5.1, connection.password=root, user.home=C:\Documents and Settings\kalpana_thakur, user.timezone=, connection.username=root, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=Cp1252, java.specification.version=1.5, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=false, user.name=kalpana_thakur, java.class.path=F:\catissueWorkspace\DAOWithoutAudit\daojunits\instrument;F:\catissueWorkspace\DAOWithoutAudit\classes;F:\catissueWorkspace\DAOWithoutAudit\lib\ant-contrib.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\antlr-2.7.5H3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\asm.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\castor-1.3-core.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\castor-1.3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\cglib.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\commons-collections-3.2.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\commons-logging.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\dom4j-1.6.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\ehcache-1.2.3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\hibernate3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\j2ee.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\junit-4.5.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\log4j.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\mmtxProject.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\mysql-connector-java-5.0.8-bin.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\ojdbc14.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\washu-commons-1.1.4.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\src;F:\catissueWorkspace\DAOWithoutAudit\daojunits\classes;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\asm-2.2.1.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\asm-tree-2.2.1.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\cobertura.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\jakarta-oro-2.0.8.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\log4j.jar;E:\Ant\apache-ant-1.7.0\lib\junit-4.1.jar;E:\Ant\apache-ant-1.7.0\lib\ant-launcher.jar;E:\Ant\apache-ant-1.7.0\lib\ant.jar;E:\Ant\apache-ant-1.7.0\lib\ant-junit.jar, hibernate.show_sql=false, java.vm.specification.version=1.0, java.home=C:\Program Files\Java\jdk1.5.0_08\jre, sun.arch.data.model=32, hibernate.connection.url=jdbc:mysql://ps4267:3306/daodb, hibernate.dialect=org.hibernate.dialect.MySQLDialect, user.language=en, java.specification.vendor=Sun Microsystems Inc., awt.toolkit=sun.awt.windows.WToolkit, hibernate.cglib.use_reflection_optimizer=true, java.vm.info=mixed mode, sharing, java.version=1.5.0_08, java.ext.dirs=C:\Program Files\Java\jdk1.5.0_08\jre\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.5.0_08\jre\lib\rt.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\i18n.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\jce.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.5.0_08\jre\classes, java.vendor=Sun Microsystems Inc., connection.driver_class=com.mysql.jdbc.Driver, file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, connection.url=jdbc:mysql://ps4267:3306/daodb, dialect=org.hibernate.dialect.MySQLDialect, sun.cpu.isalist=}
Preparing to build session factory with filters : {}
processing extends queue
processing collection mappings
Second pass for collection: test.User.orderCollection
Mapping collection: test.User.orderCollection -> test_order
Mapped collection key: user_id, one-to-many: test.Order
Second pass for collection: test.Person.orderCollection
Mapping collection: test.Person.orderCollection -> test_order
Mapped collection key: person_id, one-to-many: test.Order
Second pass for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
Mapping collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection -> CATISSUE_AUDIT_EVENT_LOG
Mapped collection key: AUDIT_EVENT_ID, one-to-many: edu.wustl.common.domain.AbstractAuditEventLog
Second pass for collection: edu.wustl.common.domain.AuditEventLog.auditEventDetailsCollection
Mapping collection: edu.wustl.common.domain.AuditEventLog.auditEventDetailsCollection -> CATISSUE_AUDIT_EVENT_DETAILS
Mapped collection key: AUDIT_EVENT_LOG_ID, one-to-many: edu.wustl.common.domain.AuditEventDetails
Second pass for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
Mapping collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs -> CATISSUE_DATA_AUDIT_EVENT_LOG
Mapped collection key: PARENT_LOG_ID, one-to-many: edu.wustl.common.domain.AuditDataEventLog
Second pass for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
Mapping collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection -> CATISSUE_AUDIT_EVENT_DETAILS
Mapped collection key: AUDIT_EVENT_LOG_ID, one-to-many: edu.wustl.common.domain.AuditEventDetails
processing native query and ResultSetMapping mappings
processing association property references
processing foreign key constraints
resolving reference to class: edu.wustl.common.domain.AuditEventLog
resolving reference to class: edu.wustl.common.domain.AuditDataEventLog
resolving reference to class: edu.wustl.common.domain.AuditEvent
resolving reference to class: edu.wustl.common.domain.AuditDataEventLog
resolving reference to class: edu.wustl.common.domain.AbstractAuditEventLog
resolving reference to class: test.User
resolving reference to class: test.Person
resolving reference to class: test.Address
Using Hibernate built-in connection pool (not for production use!)
Hibernate connection pool size: 20
autocommit mode: false
using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://ps4267:3306/daodb
connection properties: {user=root, password=root}
total checked-out connections: 0
opening new JDBC connection
created connection to: jdbc:mysql://ps4267:3306/daodb, Isolation Level: 4
RDBMS: MySQL, version: 5.0.45-community-nt
JDBC driver: MySQL-AB JDBC Driver, version: mysql-connector-java-5.0.8 ( Revision: ${svn.Revision} )
returning connection to pool, pool size: 1
Using dialect: org.hibernate.dialect.MySQLDialect
Using default transaction strategy (direct JDBC transactions)
No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
Connection release mode: auto
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
Using ASTQueryTranslatorFactory
Query language substitutions: {}
Second-level cache: enabled
Query cache: disabled
Cache provider: org.hibernate.cache.EhCacheProvider
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Using dialect defined converter
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
building session factory
Session factory constructed with filter configurations : {}
instantiating session factory with properties: {java.runtime.name=Java(TM) 2 Runtime Environment, Standard Edition, hibernate.connection.password=root, sun.boot.library.path=C:\Program Files\Java\jdk1.5.0_08\jre\bin, java.vm.version=1.5.0_08-b03, hibernate.connection.username=root, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=US, sun.os.patch.level=Service Pack 2, java.vm.specification.name=Java Virtual Machine Specification, user.dir=F:\catissueWorkspace\DAOWithoutAudit\daojunits, java.runtime.version=1.5.0_08-b03, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\Program Files\Java\jdk1.5.0_08\jre\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\DOCUME~1\KALPAN~1\LOCALS~1\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows XP, net.sourceforge.cobertura.datafile=F:\catissueWorkspace\DAOWithoutAudit\daojunits\cobertura.ser, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk1.5.0_08\jre\bin;.;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.5.0_08/bin/../jre/bin/client;C:/Program Files/Java/jdk1.5.0_08/bin/../jre/bin;C:\Tcl\bin;E:\Ant\apache-ant-1.7.0\bin;C:\Program Files\Java\jdk1.6.0\bin;C:\Program Files\DeID\;C:\Program Files\TortoiseCVS;C:\Program Files\Java\jdk1.5.0_08\bin;;F:\oracle\ora92\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\mysql server\bin;C:\Program Files\YourKit Java Profiler 7.0.11\bin\win32;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Windows Imaging\, java.specification.name=Java Platform API Specification, java.class.version=49.0, sun.management.compiler=HotSpot Client Compiler, os.version=5.1, user.home=C:\Documents and Settings\kalpana_thakur, connection.password=root, user.timezone=, java.awt.printerjob=sun.awt.windows.WPrinterJob, connection.username=root, java.specification.version=1.5, file.encoding=Cp1252, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=false, java.class.path=F:\catissueWorkspace\DAOWithoutAudit\daojunits\instrument;F:\catissueWorkspace\DAOWithoutAudit\classes;F:\catissueWorkspace\DAOWithoutAudit\lib\ant-contrib.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\antlr-2.7.5H3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\asm.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\castor-1.3-core.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\castor-1.3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\cglib.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\commons-collections-3.2.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\commons-logging.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\dom4j-1.6.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\ehcache-1.2.3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\hibernate3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\j2ee.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\junit-4.5.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\log4j.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\mmtxProject.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\mysql-connector-java-5.0.8-bin.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\ojdbc14.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\washu-commons-1.1.4.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\src;F:\catissueWorkspace\DAOWithoutAudit\daojunits\classes;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\asm-2.2.1.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\asm-tree-2.2.1.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\cobertura.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\jakarta-oro-2.0.8.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\log4j.jar;E:\Ant\apache-ant-1.7.0\lib\junit-4.1.jar;E:\Ant\apache-ant-1.7.0\lib\ant-launcher.jar;E:\Ant\apache-ant-1.7.0\lib\ant.jar;E:\Ant\apache-ant-1.7.0\lib\ant-junit.jar, user.name=kalpana_thakur, hibernate.show_sql=false, java.vm.specification.version=1.0, sun.arch.data.model=32, java.home=C:\Program Files\Java\jdk1.5.0_08\jre, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.connection.url=jdbc:mysql://ps4267:3306/daodb, java.specification.vendor=Sun Microsystems Inc., user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, hibernate.cglib.use_reflection_optimizer=true, java.version=1.5.0_08, java.ext.dirs=C:\Program Files\Java\jdk1.5.0_08\jre\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.5.0_08\jre\lib\rt.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\i18n.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\jce.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.5.0_08\jre\classes, java.vendor=Sun Microsystems Inc., file.separator=\, connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, connection.url=jdbc:mysql://ps4267:3306/daodb, sun.cpu.isalist=, dialect=org.hibernate.dialect.MySQLDialect}
Creating new CacheManager with default config
Configuring ehcache from classpath.
Configuring ehcache from ehcache.xml found in the classpath: file:/F:/catissueWorkspace/DAOWithoutAudit/daojunits/classes/ehcache.xml
Configuring ehcache from URL: file:/F:/catissueWorkspace/DAOWithoutAudit/daojunits/classes/ehcache.xml
Configuring ehcache from InputStream
Disk Store Path: C:\DOCUME~1\KALPAN~1\LOCALS~1\Temp\
No CacheManagerEventListenerFactory class specified. Skipping...
No CachePeerListenerFactoryConfiguration specified. Not configuring a CacheManagerPeerListener.
No CachePeerProviderFactoryConfiguration specified. Not configuring a CacheManagerPeerProvider.
No BootstrapCacheLoaderFactory class specified. Skipping...
No BootstrapCacheLoaderFactory class specified. Skipping...
No BootstrapCacheLoaderFactory class specified. Skipping...
Initialized net.sf.ehcache.store.LruMemoryStore for cacheForCaTissueCore
cacheForCaTissueCore Cache: Using SpoolingLinkedHashMap implementation
Initialised cache: cacheForCaTissueCore
Deleting data file edu.wustl.catissuecore.domain.Participant.data
Initialized net.sf.ehcache.store.LruMemoryStore for edu.wustl.catissuecore.domain.Participant
edu.wustl.catissuecore.domain.Participant Cache: Using SpoolingLinkedHashMap implementation
Initialised cache: edu.wustl.catissuecore.domain.Participant
Static SQL for entity: edu.wustl.common.domain.AbstractAuditEventLog
 Version select: select IDENTIFIER from CATISSUE_AUDIT_EVENT_LOG where IDENTIFIER =?
 Snapshot select: select abstractau_.IDENTIFIER, abstractau_.AUDIT_EVENT_ID as AUDIT5_6_ from CATISSUE_AUDIT_EVENT_LOG abstractau_ where abstractau_.IDENTIFIER=?
 Insert 0: insert into CATISSUE_AUDIT_EVENT_LOG (AUDIT_EVENT_ID, IDENTIFIER) values (?, ?)
 Update 0: update CATISSUE_AUDIT_EVENT_LOG set AUDIT_EVENT_ID=? where IDENTIFIER=?
 Delete 0: delete from CATISSUE_AUDIT_EVENT_LOG where IDENTIFIER=?
 Identity insert: insert into CATISSUE_AUDIT_EVENT_LOG (AUDIT_EVENT_ID) values (?)
Static SQL for entity: edu.wustl.common.domain.AuditEventDetails
 Version select: select IDENTIFIER from CATISSUE_AUDIT_EVENT_DETAILS where IDENTIFIER =?
 Snapshot select: select auditevent_.IDENTIFIER, auditevent_.ELEMENT_NAME as ELEMENT2_5_, auditevent_.PREVIOUS_VALUE as PREVIOUS3_5_, auditevent_.CURRENT_VALUE as CURRENT4_5_, auditevent_.AUDIT_EVENT_LOG_ID as AUDIT5_5_ from CATISSUE_AUDIT_EVENT_DETAILS auditevent_ where auditevent_.IDENTIFIER=?
 Insert 0: insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID, IDENTIFIER) values (?, ?, ?, ?, ?)
 Update 0: update CATISSUE_AUDIT_EVENT_DETAILS set ELEMENT_NAME=?, PREVIOUS_VALUE=?, CURRENT_VALUE=?, AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
 Delete 0: delete from CATISSUE_AUDIT_EVENT_DETAILS where IDENTIFIER=?
 Identity insert: insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
Static SQL for entity: edu.wustl.common.domain.AuditEvent
 Version select: select IDENTIFIER from CATISSUE_AUDIT_EVENT where IDENTIFIER =?
 Snapshot select: select auditevent_.IDENTIFIER, auditevent_.EVENT_TIMESTAMP as EVENT2_4_, auditevent_.USER_ID as USER3_4_, auditevent_.EVENT_TYPE as EVENT4_4_, auditevent_.COMMENTS as COMMENTS4_, auditevent_.IP_ADDRESS as IP6_4_ from CATISSUE_AUDIT_EVENT auditevent_ where auditevent_.IDENTIFIER=?
 Insert 0: insert into CATISSUE_AUDIT_EVENT (EVENT_TIMESTAMP, USER_ID, EVENT_TYPE, COMMENTS, IP_ADDRESS, IDENTIFIER) values (?, ?, ?, ?, ?, ?)
 Update 0: update CATISSUE_AUDIT_EVENT set EVENT_TIMESTAMP=?, USER_ID=?, EVENT_TYPE=?, COMMENTS=?, IP_ADDRESS=? where IDENTIFIER=?
 Delete 0: delete from CATISSUE_AUDIT_EVENT where IDENTIFIER=?
 Identity insert: insert into CATISSUE_AUDIT_EVENT (EVENT_TIMESTAMP, USER_ID, EVENT_TYPE, COMMENTS, IP_ADDRESS) values (?, ?, ?, ?, ?)
Static SQL for entity: edu.wustl.common.domain.AuditEventLog
 Version select: select IDENTIFIER from CATISSUE_AUDIT_EVENT_LOG where IDENTIFIER =?
 Snapshot select: select auditevent_.IDENTIFIER, auditevent_.OBJECT_IDENTIFIER as OBJECT2_6_, auditevent_.OBJECT_NAME as OBJECT3_6_, auditevent_.EVENT_TYPE as EVENT4_6_, auditevent_.AUDIT_EVENT_ID as AUDIT5_6_ from CATISSUE_AUDIT_EVENT_LOG auditevent_ where auditevent_.IDENTIFIER=?
 Insert 0: insert into CATISSUE_AUDIT_EVENT_LOG (OBJECT_IDENTIFIER, OBJECT_NAME, EVENT_TYPE, AUDIT_EVENT_ID, IDENTIFIER) values (?, ?, ?, ?, ?)
 Update 0: update CATISSUE_AUDIT_EVENT_LOG set OBJECT_IDENTIFIER=?, OBJECT_NAME=?, EVENT_TYPE=?, AUDIT_EVENT_ID=? where IDENTIFIER=?
 Delete 0: delete from CATISSUE_AUDIT_EVENT_LOG where IDENTIFIER=?
 Identity insert: insert into CATISSUE_AUDIT_EVENT_LOG (OBJECT_IDENTIFIER, OBJECT_NAME, EVENT_TYPE, AUDIT_EVENT_ID) values (?, ?, ?, ?)
instantiating cache region: test.Address usage strategy: read-write
Could not find configuration [test.Address]; using defaults.
Deleting data file test.Address.data
Initialized net.sf.ehcache.store.LruMemoryStore for test.Address
test.Address Cache: Using SpoolingLinkedHashMap implementation
Initialised cache: test.Address
started EHCache region: test.Address
Static SQL for entity: test.Address
 Version select: select IDENTIFIER from test_address where IDENTIFIER =?
 Snapshot select: select address_.IDENTIFIER, address_.STREET as STREET2_ from test_address address_ where address_.IDENTIFIER=?
 Insert 0: insert into test_address (STREET, IDENTIFIER) values (?, ?)
 Update 0: update test_address set STREET=? where IDENTIFIER=?
 Delete 0: delete from test_address where IDENTIFIER=?
 Identity insert: insert into test_address (STREET) values (?)
instantiating cache region: test.Order usage strategy: read-write
Could not find configuration [test.Order]; using defaults.
Deleting data file test.Order.data
Initialized net.sf.ehcache.store.LruMemoryStore for test.Order
test.Order Cache: Using SpoolingLinkedHashMap implementation
Initialised cache: test.Order
started EHCache region: test.Order
Static SQL for entity: test.Order
 Version select: select IDENTIFIER from test_order where IDENTIFIER =?
 Snapshot select: select order_.IDENTIFIER, order_.person_id as person2_3_, order_.user_id as user3_3_ from test_order order_ where order_.IDENTIFIER=?
 Insert 0: insert into test_order (person_id, user_id, IDENTIFIER) values (?, ?, ?)
 Update 0: update test_order set person_id=?, user_id=? where IDENTIFIER=?
 Delete 0: delete from test_order where IDENTIFIER=?
 Identity insert: insert into test_order (person_id, user_id) values (?, ?)
instantiating cache region: test.Person usage strategy: read-write
Could not find configuration [test.Person]; using defaults.
Deleting data file test.Person.data
Initialized net.sf.ehcache.store.LruMemoryStore for test.Person
test.Person Cache: Using SpoolingLinkedHashMap implementation
Initialised cache: test.Person
started EHCache region: test.Person
Static SQL for entity: test.Person
 Version select: select IDENTIFIER from test_person where IDENTIFIER =?
 Snapshot select: select person_.IDENTIFIER, person_.NAME as NAME1_, person_.ADDRESS_ID as ADDRESS3_1_ from test_person person_ where person_.IDENTIFIER=?
 Insert 0: insert into test_person (NAME, ADDRESS_ID, IDENTIFIER) values (?, ?, ?)
 Update 0: update test_person set NAME=?, ADDRESS_ID=? where IDENTIFIER=?
 Delete 0: delete from test_person where IDENTIFIER=?
 Identity insert: insert into test_person (NAME, ADDRESS_ID) values (?, ?)
Static SQL for entity: edu.wustl.common.domain.LoginEvent
 Version select: select IDENTIFIER from CATISSUE_LOGIN_AUDIT_EVENT_LOG where IDENTIFIER =?
 Snapshot select: select loginevent_.IDENTIFIER, loginevent_.LOGIN_TIMESTAMP as LOGIN2_8_, loginevent_.LOGIN_SOURCE_ID as LOGIN3_8_, loginevent_.USER_LOGIN_ID as USER4_8_, loginevent_.LOGIN_IP_ADDRESS as LOGIN5_8_, loginevent_.IS_LOGIN_SUCCESSFUL as IS6_8_ from CATISSUE_LOGIN_AUDIT_EVENT_LOG loginevent_ where loginevent_.IDENTIFIER=?
 Insert 0: insert into CATISSUE_LOGIN_AUDIT_EVENT_LOG (LOGIN_TIMESTAMP, LOGIN_SOURCE_ID, USER_LOGIN_ID, LOGIN_IP_ADDRESS, IS_LOGIN_SUCCESSFUL, IDENTIFIER) values (?, ?, ?, ?, ?, ?)
 Update 0: update CATISSUE_LOGIN_AUDIT_EVENT_LOG set LOGIN_TIMESTAMP=?, LOGIN_SOURCE_ID=?, USER_LOGIN_ID=?, LOGIN_IP_ADDRESS=?, IS_LOGIN_SUCCESSFUL=? where IDENTIFIER=?
 Delete 0: delete from CATISSUE_LOGIN_AUDIT_EVENT_LOG where IDENTIFIER=?
 Identity insert: insert into CATISSUE_LOGIN_AUDIT_EVENT_LOG (LOGIN_TIMESTAMP, LOGIN_SOURCE_ID, USER_LOGIN_ID, LOGIN_IP_ADDRESS, IS_LOGIN_SUCCESSFUL) values (?, ?, ?, ?, ?)
Static SQL for entity: edu.wustl.common.domain.AuditDataEventLog
 Version select: select IDENTIFIER from CATISSUE_AUDIT_EVENT_LOG where IDENTIFIER =?
 Snapshot select: select auditdatae_.IDENTIFIER, auditdatae_1_.AUDIT_EVENT_ID as AUDIT5_6_, auditdatae_.OBJECT_IDENTIFIER as OBJECT2_7_, auditdatae_.OBJECT_NAME as OBJECT3_7_ from CATISSUE_DATA_AUDIT_EVENT_LOG auditdatae_ inner join CATISSUE_AUDIT_EVENT_LOG auditdatae_1_ on auditdatae_.IDENTIFIER=auditdatae_1_.IDENTIFIER where auditdatae_.IDENTIFIER=?
 Insert 0: insert into CATISSUE_AUDIT_EVENT_LOG (AUDIT_EVENT_ID, IDENTIFIER) values (?, ?)
 Update 0: update CATISSUE_AUDIT_EVENT_LOG set AUDIT_EVENT_ID=? where IDENTIFIER=?
 Delete 0: delete from CATISSUE_AUDIT_EVENT_LOG where IDENTIFIER=?
 Insert 1: insert into CATISSUE_DATA_AUDIT_EVENT_LOG (OBJECT_IDENTIFIER, OBJECT_NAME, IDENTIFIER) values (?, ?, ?)
 Update 1: update CATISSUE_DATA_AUDIT_EVENT_LOG set OBJECT_IDENTIFIER=?, OBJECT_NAME=? where IDENTIFIER=?
 Delete 1: delete from CATISSUE_DATA_AUDIT_EVENT_LOG where IDENTIFIER=?
 Identity insert: insert into CATISSUE_AUDIT_EVENT_LOG (AUDIT_EVENT_ID) values (?)
instantiating cache region: test.User usage strategy: read-write
Could not find configuration [test.User]; using defaults.
Deleting data file test.User.data
Initialized net.sf.ehcache.store.LruMemoryStore for test.User
test.User Cache: Using SpoolingLinkedHashMap implementation
Initialised cache: test.User
started EHCache region: test.User
Static SQL for entity: test.User
 Version select: select IDENTIFIER from test_user where IDENTIFIER =?
 Snapshot select: select user_.IDENTIFIER, user_.EMAIL_ADDRESS as EMAIL2_0_, user_.FIRST_NAME as FIRST3_0_, user_.LAST_NAME as LAST4_0_, user_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user_ where user_.IDENTIFIER=?
 Insert 0: insert into test_user (EMAIL_ADDRESS, FIRST_NAME, LAST_NAME, ACTIVITY_STATUS, IDENTIFIER) values (?, ?, ?, ?, ?)
 Update 0: update test_user set EMAIL_ADDRESS=?, FIRST_NAME=?, LAST_NAME=?, ACTIVITY_STATUS=? where IDENTIFIER=?
 Delete 0: delete from test_user where IDENTIFIER=?
 Identity insert: insert into test_user (EMAIL_ADDRESS, FIRST_NAME, LAST_NAME, ACTIVITY_STATUS) values (?, ?, ?, ?)
Static SQL for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
 Row insert: update CATISSUE_AUDIT_EVENT_LOG set AUDIT_EVENT_ID=? where IDENTIFIER=?
 Row delete: update CATISSUE_AUDIT_EVENT_LOG set AUDIT_EVENT_ID=null where AUDIT_EVENT_ID=? and IDENTIFIER=?
 One-shot delete: update CATISSUE_AUDIT_EVENT_LOG set AUDIT_EVENT_ID=null where AUDIT_EVENT_ID=?
instantiating cache region: test.User.orderCollection usage strategy: read-write
Could not find configuration [test.User.orderCollection]; using defaults.
Deleting data file test.User.orderCollection.data
Initialized net.sf.ehcache.store.LruMemoryStore for test.User.orderCollection
test.User.orderCollection Cache: Using SpoolingLinkedHashMap implementation
Initialised cache: test.User.orderCollection
started EHCache region: test.User.orderCollection
Static SQL for collection: test.User.orderCollection
 Row insert: update test_order set user_id=? where IDENTIFIER=?
 Row delete: update test_order set user_id=null where user_id=? and IDENTIFIER=?
 One-shot delete: update test_order set user_id=null where user_id=?
Static SQL for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
 Row insert: update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
 Row delete: update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=null where AUDIT_EVENT_LOG_ID=? and IDENTIFIER=?
 One-shot delete: update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=null where AUDIT_EVENT_LOG_ID=?
Static SQL for collection: edu.wustl.common.domain.AuditEventLog.auditEventDetailsCollection
 Row insert: update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
 Row delete: update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=null where AUDIT_EVENT_LOG_ID=? and IDENTIFIER=?
 One-shot delete: update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=null where AUDIT_EVENT_LOG_ID=?
Static SQL for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
 Row insert: update CATISSUE_DATA_AUDIT_EVENT_LOG set PARENT_LOG_ID=? where IDENTIFIER=?
 Row delete: update CATISSUE_DATA_AUDIT_EVENT_LOG set PARENT_LOG_ID=null where PARENT_LOG_ID=? and IDENTIFIER=?
 One-shot delete: update CATISSUE_DATA_AUDIT_EVENT_LOG set PARENT_LOG_ID=null where PARENT_LOG_ID=?
instantiating cache region: test.Person.orderCollection usage strategy: read-write
Could not find configuration [test.Person.orderCollection]; using defaults.
Deleting data file test.Person.orderCollection.data
Initialized net.sf.ehcache.store.LruMemoryStore for test.Person.orderCollection
test.Person.orderCollection Cache: Using SpoolingLinkedHashMap implementation
Initialised cache: test.Person.orderCollection
started EHCache region: test.Person.orderCollection
Static SQL for collection: test.Person.orderCollection
 Row insert: update test_order set person_id=? where IDENTIFIER=?
 Row delete: update test_order set person_id=null where person_id=? and IDENTIFIER=?
 One-shot delete: update test_order set person_id=null where person_id=?
Static select for entity edu.wustl.common.domain.AuditEventDetails: select auditevent0_.IDENTIFIER as IDENTIFIER5_2_, auditevent0_.ELEMENT_NAME as ELEMENT2_5_2_, auditevent0_.PREVIOUS_VALUE as PREVIOUS3_5_2_, auditevent0_.CURRENT_VALUE as CURRENT4_5_2_, auditevent0_.AUDIT_EVENT_LOG_ID as AUDIT5_5_2_, auditdatae1_.IDENTIFIER as IDENTIFIER6_0_, auditdatae1_1_.AUDIT_EVENT_ID as AUDIT5_6_0_, auditdatae1_.OBJECT_IDENTIFIER as OBJECT2_7_0_, auditdatae1_.OBJECT_NAME as OBJECT3_7_0_, auditevent2_.IDENTIFIER as IDENTIFIER4_1_, auditevent2_.EVENT_TIMESTAMP as EVENT2_4_1_, auditevent2_.USER_ID as USER3_4_1_, auditevent2_.EVENT_TYPE as EVENT4_4_1_, auditevent2_.COMMENTS as COMMENTS4_1_, auditevent2_.IP_ADDRESS as IP6_4_1_ from CATISSUE_AUDIT_EVENT_DETAILS auditevent0_ left outer join CATISSUE_DATA_AUDIT_EVENT_LOG auditdatae1_ on auditevent0_.AUDIT_EVENT_LOG_ID=auditdatae1_.IDENTIFIER left outer join CATISSUE_AUDIT_EVENT_LOG auditdatae1_1_ on auditdatae1_.IDENTIFIER=auditdatae1_1_.IDENTIFIER left outer join CATISSUE_AUDIT_EVENT auditevent2_ on auditdatae1_1_.AUDIT_EVENT_ID=auditevent2_.IDENTIFIER where auditevent0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.AuditEventDetails: select auditevent0_.IDENTIFIER as IDENTIFIER5_2_, auditevent0_.ELEMENT_NAME as ELEMENT2_5_2_, auditevent0_.PREVIOUS_VALUE as PREVIOUS3_5_2_, auditevent0_.CURRENT_VALUE as CURRENT4_5_2_, auditevent0_.AUDIT_EVENT_LOG_ID as AUDIT5_5_2_, auditdatae1_.IDENTIFIER as IDENTIFIER6_0_, auditdatae1_1_.AUDIT_EVENT_ID as AUDIT5_6_0_, auditdatae1_.OBJECT_IDENTIFIER as OBJECT2_7_0_, auditdatae1_.OBJECT_NAME as OBJECT3_7_0_, auditevent2_.IDENTIFIER as IDENTIFIER4_1_, auditevent2_.EVENT_TIMESTAMP as EVENT2_4_1_, auditevent2_.USER_ID as USER3_4_1_, auditevent2_.EVENT_TYPE as EVENT4_4_1_, auditevent2_.COMMENTS as COMMENTS4_1_, auditevent2_.IP_ADDRESS as IP6_4_1_ from CATISSUE_AUDIT_EVENT_DETAILS auditevent0_ left outer join CATISSUE_DATA_AUDIT_EVENT_LOG auditdatae1_ on auditevent0_.AUDIT_EVENT_LOG_ID=auditdatae1_.IDENTIFIER left outer join CATISSUE_AUDIT_EVENT_LOG auditdatae1_1_ on auditdatae1_.IDENTIFIER=auditdatae1_1_.IDENTIFIER left outer join CATISSUE_AUDIT_EVENT auditevent2_ on auditdatae1_1_.AUDIT_EVENT_ID=auditevent2_.IDENTIFIER where auditevent0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.AuditEventDetails: select auditevent0_.IDENTIFIER as IDENTIFIER5_0_, auditevent0_.ELEMENT_NAME as ELEMENT2_5_0_, auditevent0_.PREVIOUS_VALUE as PREVIOUS3_5_0_, auditevent0_.CURRENT_VALUE as CURRENT4_5_0_, auditevent0_.AUDIT_EVENT_LOG_ID as AUDIT5_5_0_ from CATISSUE_AUDIT_EVENT_DETAILS auditevent0_ where auditevent0_.IDENTIFIER=? for update
Static select for entity edu.wustl.common.domain.AuditEventDetails: select auditevent0_.IDENTIFIER as IDENTIFIER5_0_, auditevent0_.ELEMENT_NAME as ELEMENT2_5_0_, auditevent0_.PREVIOUS_VALUE as PREVIOUS3_5_0_, auditevent0_.CURRENT_VALUE as CURRENT4_5_0_, auditevent0_.AUDIT_EVENT_LOG_ID as AUDIT5_5_0_ from CATISSUE_AUDIT_EVENT_DETAILS auditevent0_ where auditevent0_.IDENTIFIER=? for update
Static select for action ACTION_MERGE on entity edu.wustl.common.domain.AuditEventDetails: select auditevent0_.IDENTIFIER as IDENTIFIER5_0_, auditevent0_.ELEMENT_NAME as ELEMENT2_5_0_, auditevent0_.PREVIOUS_VALUE as PREVIOUS3_5_0_, auditevent0_.CURRENT_VALUE as CURRENT4_5_0_, auditevent0_.AUDIT_EVENT_LOG_ID as AUDIT5_5_0_ from CATISSUE_AUDIT_EVENT_DETAILS auditevent0_ where auditevent0_.IDENTIFIER=?
Static select for action ACTION_REFRESH on entity edu.wustl.common.domain.AuditEventDetails: select auditevent0_.IDENTIFIER as IDENTIFIER5_0_, auditevent0_.ELEMENT_NAME as ELEMENT2_5_0_, auditevent0_.PREVIOUS_VALUE as PREVIOUS3_5_0_, auditevent0_.CURRENT_VALUE as CURRENT4_5_0_, auditevent0_.AUDIT_EVENT_LOG_ID as AUDIT5_5_0_ from CATISSUE_AUDIT_EVENT_DETAILS auditevent0_ where auditevent0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.AbstractAuditEventLog: select abstractau0_.IDENTIFIER as IDENTIFIER6_1_, abstractau0_.AUDIT_EVENT_ID as AUDIT5_6_1_, abstractau0_1_.OBJECT_IDENTIFIER as OBJECT2_7_1_, abstractau0_1_.OBJECT_NAME as OBJECT3_7_1_, case when abstractau0_1_.IDENTIFIER is not null then 1 when abstractau0_.IDENTIFIER is not null then 0 end as clazz_1_, auditevent1_.IDENTIFIER as IDENTIFIER4_0_, auditevent1_.EVENT_TIMESTAMP as EVENT2_4_0_, auditevent1_.USER_ID as USER3_4_0_, auditevent1_.EVENT_TYPE as EVENT4_4_0_, auditevent1_.COMMENTS as COMMENTS4_0_, auditevent1_.IP_ADDRESS as IP6_4_0_ from CATISSUE_AUDIT_EVENT_LOG abstractau0_ left outer join CATISSUE_DATA_AUDIT_EVENT_LOG abstractau0_1_ on abstractau0_.IDENTIFIER=abstractau0_1_.IDENTIFIER left outer join CATISSUE_AUDIT_EVENT auditevent1_ on abstractau0_.AUDIT_EVENT_ID=auditevent1_.IDENTIFIER where abstractau0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.AbstractAuditEventLog: select abstractau0_.IDENTIFIER as IDENTIFIER6_1_, abstractau0_.AUDIT_EVENT_ID as AUDIT5_6_1_, abstractau0_1_.OBJECT_IDENTIFIER as OBJECT2_7_1_, abstractau0_1_.OBJECT_NAME as OBJECT3_7_1_, case when abstractau0_1_.IDENTIFIER is not null then 1 when abstractau0_.IDENTIFIER is not null then 0 end as clazz_1_, auditevent1_.IDENTIFIER as IDENTIFIER4_0_, auditevent1_.EVENT_TIMESTAMP as EVENT2_4_0_, auditevent1_.USER_ID as USER3_4_0_, auditevent1_.EVENT_TYPE as EVENT4_4_0_, auditevent1_.COMMENTS as COMMENTS4_0_, auditevent1_.IP_ADDRESS as IP6_4_0_ from CATISSUE_AUDIT_EVENT_LOG abstractau0_ left outer join CATISSUE_DATA_AUDIT_EVENT_LOG abstractau0_1_ on abstractau0_.IDENTIFIER=abstractau0_1_.IDENTIFIER left outer join CATISSUE_AUDIT_EVENT auditevent1_ on abstractau0_.AUDIT_EVENT_ID=auditevent1_.IDENTIFIER where abstractau0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.AbstractAuditEventLog: select abstractau0_.IDENTIFIER as IDENTIFIER6_0_, abstractau0_.AUDIT_EVENT_ID as AUDIT5_6_0_, abstractau0_1_.OBJECT_IDENTIFIER as OBJECT2_7_0_, abstractau0_1_.OBJECT_NAME as OBJECT3_7_0_, case when abstractau0_1_.IDENTIFIER is not null then 1 when abstractau0_.IDENTIFIER is not null then 0 end as clazz_0_ from CATISSUE_AUDIT_EVENT_LOG abstractau0_ left outer join CATISSUE_DATA_AUDIT_EVENT_LOG abstractau0_1_ on abstractau0_.IDENTIFIER=abstractau0_1_.IDENTIFIER where abstractau0_.IDENTIFIER=? for update
Static select for entity edu.wustl.common.domain.AbstractAuditEventLog: select abstractau0_.IDENTIFIER as IDENTIFIER6_0_, abstractau0_.AUDIT_EVENT_ID as AUDIT5_6_0_, abstractau0_1_.OBJECT_IDENTIFIER as OBJECT2_7_0_, abstractau0_1_.OBJECT_NAME as OBJECT3_7_0_, case when abstractau0_1_.IDENTIFIER is not null then 1 when abstractau0_.IDENTIFIER is not null then 0 end as clazz_0_ from CATISSUE_AUDIT_EVENT_LOG abstractau0_ left outer join CATISSUE_DATA_AUDIT_EVENT_LOG abstractau0_1_ on abstractau0_.IDENTIFIER=abstractau0_1_.IDENTIFIER where abstractau0_.IDENTIFIER=? for update
Static select for action ACTION_MERGE on entity edu.wustl.common.domain.AbstractAuditEventLog: select abstractau0_.IDENTIFIER as IDENTIFIER6_2_, abstractau0_.AUDIT_EVENT_ID as AUDIT5_6_2_, abstractau0_1_.OBJECT_IDENTIFIER as OBJECT2_7_2_, abstractau0_1_.OBJECT_NAME as OBJECT3_7_2_, case when abstractau0_1_.IDENTIFIER is not null then 1 when abstractau0_.IDENTIFIER is not null then 0 end as clazz_2_, auditdatae1_.PARENT_LOG_ID as PARENT4_4_, auditdatae1_.IDENTIFIER as IDENTIFIER4_, auditdatae1_.IDENTIFIER as IDENTIFIER6_0_, auditdatae1_1_.AUDIT_EVENT_ID as AUDIT5_6_0_, auditdatae1_.OBJECT_IDENTIFIER as OBJECT2_7_0_, auditdatae1_.OBJECT_NAME as OBJECT3_7_0_, auditevent2_.AUDIT_EVENT_LOG_ID as AUDIT5_5_, auditevent2_.IDENTIFIER as IDENTIFIER5_, auditevent2_.IDENTIFIER as IDENTIFIER5_1_, auditevent2_.ELEMENT_NAME as ELEMENT2_5_1_, auditevent2_.PREVIOUS_VALUE as PREVIOUS3_5_1_, auditevent2_.CURRENT_VALUE as CURRENT4_5_1_, auditevent2_.AUDIT_EVENT_LOG_ID as AUDIT5_5_1_ from CATISSUE_AUDIT_EVENT_LOG abstractau0_ left outer join CATISSUE_DATA_AUDIT_EVENT_LOG abstractau0_1_ on abstractau0_.IDENTIFIER=abstractau0_1_.IDENTIFIER left outer join CATISSUE_DATA_AUDIT_EVENT_LOG auditdatae1_ on abstractau0_.IDENTIFIER=auditdatae1_.PARENT_LOG_ID left outer join CATISSUE_AUDIT_EVENT_LOG auditdatae1_1_ on auditdatae1_.IDENTIFIER=auditdatae1_1_.IDENTIFIER left outer join CATISSUE_AUDIT_EVENT_DETAILS auditevent2_ on auditdatae1_.IDENTIFIER=auditevent2_.AUDIT_EVENT_LOG_ID where abstractau0_.IDENTIFIER=?
Static select for action ACTION_REFRESH on entity edu.wustl.common.domain.AbstractAuditEventLog: select abstractau0_.IDENTIFIER as IDENTIFIER6_2_, abstractau0_.AUDIT_EVENT_ID as AUDIT5_6_2_, abstractau0_1_.OBJECT_IDENTIFIER as OBJECT2_7_2_, abstractau0_1_.OBJECT_NAME as OBJECT3_7_2_, case when abstractau0_1_.IDENTIFIER is not null then 1 when abstractau0_.IDENTIFIER is not null then 0 end as clazz_2_, auditdatae1_.PARENT_LOG_ID as PARENT4_4_, auditdatae1_.IDENTIFIER as IDENTIFIER4_, auditdatae1_.IDENTIFIER as IDENTIFIER6_0_, auditdatae1_1_.AUDIT_EVENT_ID as AUDIT5_6_0_, auditdatae1_.OBJECT_IDENTIFIER as OBJECT2_7_0_, auditdatae1_.OBJECT_NAME as OBJECT3_7_0_, auditevent2_.AUDIT_EVENT_LOG_ID as AUDIT5_5_, auditevent2_.IDENTIFIER as IDENTIFIER5_, auditevent2_.IDENTIFIER as IDENTIFIER5_1_, auditevent2_.ELEMENT_NAME as ELEMENT2_5_1_, auditevent2_.PREVIOUS_VALUE as PREVIOUS3_5_1_, auditevent2_.CURRENT_VALUE as CURRENT4_5_1_, auditevent2_.AUDIT_EVENT_LOG_ID as AUDIT5_5_1_ from CATISSUE_AUDIT_EVENT_LOG abstractau0_ left outer join CATISSUE_DATA_AUDIT_EVENT_LOG abstractau0_1_ on abstractau0_.IDENTIFIER=abstractau0_1_.IDENTIFIER left outer join CATISSUE_DATA_AUDIT_EVENT_LOG auditdatae1_ on abstractau0_.IDENTIFIER=auditdatae1_.PARENT_LOG_ID left outer join CATISSUE_AUDIT_EVENT_LOG auditdatae1_1_ on auditdatae1_.IDENTIFIER=auditdatae1_1_.IDENTIFIER left outer join CATISSUE_AUDIT_EVENT_DETAILS auditevent2_ on auditdatae1_.IDENTIFIER=auditevent2_.AUDIT_EVENT_LOG_ID where abstractau0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.AuditEvent: select auditevent0_.IDENTIFIER as IDENTIFIER4_0_, auditevent0_.EVENT_TIMESTAMP as EVENT2_4_0_, auditevent0_.USER_ID as USER3_4_0_, auditevent0_.EVENT_TYPE as EVENT4_4_0_, auditevent0_.COMMENTS as COMMENTS4_0_, auditevent0_.IP_ADDRESS as IP6_4_0_ from CATISSUE_AUDIT_EVENT auditevent0_ where auditevent0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.AuditEvent: select auditevent0_.IDENTIFIER as IDENTIFIER4_0_, auditevent0_.EVENT_TIMESTAMP as EVENT2_4_0_, auditevent0_.USER_ID as USER3_4_0_, auditevent0_.EVENT_TYPE as EVENT4_4_0_, auditevent0_.COMMENTS as COMMENTS4_0_, auditevent0_.IP_ADDRESS as IP6_4_0_ from CATISSUE_AUDIT_EVENT auditevent0_ where auditevent0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.AuditEvent: select auditevent0_.IDENTIFIER as IDENTIFIER4_0_, auditevent0_.EVENT_TIMESTAMP as EVENT2_4_0_, auditevent0_.USER_ID as USER3_4_0_, auditevent0_.EVENT_TYPE as EVENT4_4_0_, auditevent0_.COMMENTS as COMMENTS4_0_, auditevent0_.IP_ADDRESS as IP6_4_0_ from CATISSUE_AUDIT_EVENT auditevent0_ where auditevent0_.IDENTIFIER=? for update
Static select for entity edu.wustl.common.domain.AuditEvent: select auditevent0_.IDENTIFIER as IDENTIFIER4_0_, auditevent0_.EVENT_TIMESTAMP as EVENT2_4_0_, auditevent0_.USER_ID as USER3_4_0_, auditevent0_.EVENT_TYPE as EVENT4_4_0_, auditevent0_.COMMENTS as COMMENTS4_0_, auditevent0_.IP_ADDRESS as IP6_4_0_ from CATISSUE_AUDIT_EVENT auditevent0_ where auditevent0_.IDENTIFIER=? for update
Static select for action ACTION_MERGE on entity edu.wustl.common.domain.AuditEvent: select auditevent0_.IDENTIFIER as IDENTIFIER4_0_, auditevent0_.EVENT_TIMESTAMP as EVENT2_4_0_, auditevent0_.USER_ID as USER3_4_0_, auditevent0_.EVENT_TYPE as EVENT4_4_0_, auditevent0_.COMMENTS as COMMENTS4_0_, auditevent0_.IP_ADDRESS as IP6_4_0_ from CATISSUE_AUDIT_EVENT auditevent0_ where auditevent0_.IDENTIFIER=?
Static select for action ACTION_REFRESH on entity edu.wustl.common.domain.AuditEvent: select auditevent0_.IDENTIFIER as IDENTIFIER4_0_, auditevent0_.EVENT_TIMESTAMP as EVENT2_4_0_, auditevent0_.USER_ID as USER3_4_0_, auditevent0_.EVENT_TYPE as EVENT4_4_0_, auditevent0_.COMMENTS as COMMENTS4_0_, auditevent0_.IP_ADDRESS as IP6_4_0_ from CATISSUE_AUDIT_EVENT auditevent0_ where auditevent0_.IDENTIFIER=?
Static select for entity test.Address: select address0_.IDENTIFIER as IDENTIFIER2_0_, address0_.STREET as STREET2_0_ from test_address address0_ where address0_.IDENTIFIER=?
Static select for entity test.Address: select address0_.IDENTIFIER as IDENTIFIER2_0_, address0_.STREET as STREET2_0_ from test_address address0_ where address0_.IDENTIFIER=?
Static select for entity test.Address: select address0_.IDENTIFIER as IDENTIFIER2_0_, address0_.STREET as STREET2_0_ from test_address address0_ where address0_.IDENTIFIER=? for update
Static select for entity test.Address: select address0_.IDENTIFIER as IDENTIFIER2_0_, address0_.STREET as STREET2_0_ from test_address address0_ where address0_.IDENTIFIER=? for update
Static select for action ACTION_MERGE on entity test.Address: select address0_.IDENTIFIER as IDENTIFIER2_0_, address0_.STREET as STREET2_0_ from test_address address0_ where address0_.IDENTIFIER=?
Static select for action ACTION_REFRESH on entity test.Address: select address0_.IDENTIFIER as IDENTIFIER2_0_, address0_.STREET as STREET2_0_ from test_address address0_ where address0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.AuditEventLog: select auditevent0_.IDENTIFIER as IDENTIFIER6_1_, auditevent0_.OBJECT_IDENTIFIER as OBJECT2_6_1_, auditevent0_.OBJECT_NAME as OBJECT3_6_1_, auditevent0_.EVENT_TYPE as EVENT4_6_1_, auditevent0_.AUDIT_EVENT_ID as AUDIT5_6_1_, auditevent1_.IDENTIFIER as IDENTIFIER4_0_, auditevent1_.EVENT_TIMESTAMP as EVENT2_4_0_, auditevent1_.USER_ID as USER3_4_0_, auditevent1_.EVENT_TYPE as EVENT4_4_0_, auditevent1_.COMMENTS as COMMENTS4_0_, auditevent1_.IP_ADDRESS as IP6_4_0_ from CATISSUE_AUDIT_EVENT_LOG auditevent0_ left outer join CATISSUE_AUDIT_EVENT auditevent1_ on auditevent0_.AUDIT_EVENT_ID=auditevent1_.IDENTIFIER where auditevent0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.AuditEventLog: select auditevent0_.IDENTIFIER as IDENTIFIER6_1_, auditevent0_.OBJECT_IDENTIFIER as OBJECT2_6_1_, auditevent0_.OBJECT_NAME as OBJECT3_6_1_, auditevent0_.EVENT_TYPE as EVENT4_6_1_, auditevent0_.AUDIT_EVENT_ID as AUDIT5_6_1_, auditevent1_.IDENTIFIER as IDENTIFIER4_0_, auditevent1_.EVENT_TIMESTAMP as EVENT2_4_0_, auditevent1_.USER_ID as USER3_4_0_, auditevent1_.EVENT_TYPE as EVENT4_4_0_, auditevent1_.COMMENTS as COMMENTS4_0_, auditevent1_.IP_ADDRESS as IP6_4_0_ from CATISSUE_AUDIT_EVENT_LOG auditevent0_ left outer join CATISSUE_AUDIT_EVENT auditevent1_ on auditevent0_.AUDIT_EVENT_ID=auditevent1_.IDENTIFIER where auditevent0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.AuditEventLog: select auditevent0_.IDENTIFIER as IDENTIFIER6_0_, auditevent0_.OBJECT_IDENTIFIER as OBJECT2_6_0_, auditevent0_.OBJECT_NAME as OBJECT3_6_0_, auditevent0_.EVENT_TYPE as EVENT4_6_0_, auditevent0_.AUDIT_EVENT_ID as AUDIT5_6_0_ from CATISSUE_AUDIT_EVENT_LOG auditevent0_ where auditevent0_.IDENTIFIER=? for update
Static select for entity edu.wustl.common.domain.AuditEventLog: select auditevent0_.IDENTIFIER as IDENTIFIER6_0_, auditevent0_.OBJECT_IDENTIFIER as OBJECT2_6_0_, auditevent0_.OBJECT_NAME as OBJECT3_6_0_, auditevent0_.EVENT_TYPE as EVENT4_6_0_, auditevent0_.AUDIT_EVENT_ID as AUDIT5_6_0_ from CATISSUE_AUDIT_EVENT_LOG auditevent0_ where auditevent0_.IDENTIFIER=? for update
Static select for action ACTION_MERGE on entity edu.wustl.common.domain.AuditEventLog: select auditevent0_.IDENTIFIER as IDENTIFIER6_0_, auditevent0_.OBJECT_IDENTIFIER as OBJECT2_6_0_, auditevent0_.OBJECT_NAME as OBJECT3_6_0_, auditevent0_.EVENT_TYPE as EVENT4_6_0_, auditevent0_.AUDIT_EVENT_ID as AUDIT5_6_0_ from CATISSUE_AUDIT_EVENT_LOG auditevent0_ where auditevent0_.IDENTIFIER=?
Static select for action ACTION_REFRESH on entity edu.wustl.common.domain.AuditEventLog: select auditevent0_.IDENTIFIER as IDENTIFIER6_0_, auditevent0_.OBJECT_IDENTIFIER as OBJECT2_6_0_, auditevent0_.OBJECT_NAME as OBJECT3_6_0_, auditevent0_.EVENT_TYPE as EVENT4_6_0_, auditevent0_.AUDIT_EVENT_ID as AUDIT5_6_0_ from CATISSUE_AUDIT_EVENT_LOG auditevent0_ where auditevent0_.IDENTIFIER=?
Static select for entity test.Person: select person0_.IDENTIFIER as IDENTIFIER1_0_, person0_.NAME as NAME1_0_, person0_.ADDRESS_ID as ADDRESS3_1_0_ from test_person person0_ where person0_.IDENTIFIER=?
Static select for entity test.Person: select person0_.IDENTIFIER as IDENTIFIER1_0_, person0_.NAME as NAME1_0_, person0_.ADDRESS_ID as ADDRESS3_1_0_ from test_person person0_ where person0_.IDENTIFIER=?
Static select for entity test.Person: select person0_.IDENTIFIER as IDENTIFIER1_0_, person0_.NAME as NAME1_0_, person0_.ADDRESS_ID as ADDRESS3_1_0_ from test_person person0_ where person0_.IDENTIFIER=? for update
Static select for entity test.Person: select person0_.IDENTIFIER as IDENTIFIER1_0_, person0_.NAME as NAME1_0_, person0_.ADDRESS_ID as ADDRESS3_1_0_ from test_person person0_ where person0_.IDENTIFIER=? for update
Static select for action ACTION_MERGE on entity test.Person: select person0_.IDENTIFIER as IDENTIFIER1_1_, person0_.NAME as NAME1_1_, person0_.ADDRESS_ID as ADDRESS3_1_1_, ordercolle1_.person_id as person2_3_, ordercolle1_.IDENTIFIER as IDENTIFIER3_, ordercolle1_.IDENTIFIER as IDENTIFIER3_0_, ordercolle1_.person_id as person2_3_0_, ordercolle1_.user_id as user3_3_0_ from test_person person0_ left outer join test_order ordercolle1_ on person0_.IDENTIFIER=ordercolle1_.person_id where person0_.IDENTIFIER=?
Static select for action ACTION_REFRESH on entity test.Person: select person0_.IDENTIFIER as IDENTIFIER1_1_, person0_.NAME as NAME1_1_, person0_.ADDRESS_ID as ADDRESS3_1_1_, ordercolle1_.person_id as person2_3_, ordercolle1_.IDENTIFIER as IDENTIFIER3_, ordercolle1_.IDENTIFIER as IDENTIFIER3_0_, ordercolle1_.person_id as person2_3_0_, ordercolle1_.user_id as user3_3_0_ from test_person person0_ left outer join test_order ordercolle1_ on person0_.IDENTIFIER=ordercolle1_.person_id where person0_.IDENTIFIER=?
Static select for entity test.Order: select order0_.IDENTIFIER as IDENTIFIER3_1_, order0_.person_id as person2_3_1_, order0_.user_id as user3_3_1_, person1_.IDENTIFIER as IDENTIFIER1_0_, person1_.NAME as NAME1_0_, person1_.ADDRESS_ID as ADDRESS3_1_0_ from test_order order0_ left outer join test_person person1_ on order0_.person_id=person1_.IDENTIFIER where order0_.IDENTIFIER=?
Static select for entity test.Order: select order0_.IDENTIFIER as IDENTIFIER3_1_, order0_.person_id as person2_3_1_, order0_.user_id as user3_3_1_, person1_.IDENTIFIER as IDENTIFIER1_0_, person1_.NAME as NAME1_0_, person1_.ADDRESS_ID as ADDRESS3_1_0_ from test_order order0_ left outer join test_person person1_ on order0_.person_id=person1_.IDENTIFIER where order0_.IDENTIFIER=?
Static select for entity test.Order: select order0_.IDENTIFIER as IDENTIFIER3_0_, order0_.person_id as person2_3_0_, order0_.user_id as user3_3_0_ from test_order order0_ where order0_.IDENTIFIER=? for update
Static select for entity test.Order: select order0_.IDENTIFIER as IDENTIFIER3_0_, order0_.person_id as person2_3_0_, order0_.user_id as user3_3_0_ from test_order order0_ where order0_.IDENTIFIER=? for update
Static select for action ACTION_MERGE on entity test.Order: select order0_.IDENTIFIER as IDENTIFIER3_0_, order0_.person_id as person2_3_0_, order0_.user_id as user3_3_0_ from test_order order0_ where order0_.IDENTIFIER=?
Static select for action ACTION_REFRESH on entity test.Order: select order0_.IDENTIFIER as IDENTIFIER3_0_, order0_.person_id as person2_3_0_, order0_.user_id as user3_3_0_ from test_order order0_ where order0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.LoginEvent: select loginevent0_.IDENTIFIER as IDENTIFIER8_0_, loginevent0_.LOGIN_TIMESTAMP as LOGIN2_8_0_, loginevent0_.LOGIN_SOURCE_ID as LOGIN3_8_0_, loginevent0_.USER_LOGIN_ID as USER4_8_0_, loginevent0_.LOGIN_IP_ADDRESS as LOGIN5_8_0_, loginevent0_.IS_LOGIN_SUCCESSFUL as IS6_8_0_ from CATISSUE_LOGIN_AUDIT_EVENT_LOG loginevent0_ where loginevent0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.LoginEvent: select loginevent0_.IDENTIFIER as IDENTIFIER8_0_, loginevent0_.LOGIN_TIMESTAMP as LOGIN2_8_0_, loginevent0_.LOGIN_SOURCE_ID as LOGIN3_8_0_, loginevent0_.USER_LOGIN_ID as USER4_8_0_, loginevent0_.LOGIN_IP_ADDRESS as LOGIN5_8_0_, loginevent0_.IS_LOGIN_SUCCESSFUL as IS6_8_0_ from CATISSUE_LOGIN_AUDIT_EVENT_LOG loginevent0_ where loginevent0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.LoginEvent: select loginevent0_.IDENTIFIER as IDENTIFIER8_0_, loginevent0_.LOGIN_TIMESTAMP as LOGIN2_8_0_, loginevent0_.LOGIN_SOURCE_ID as LOGIN3_8_0_, loginevent0_.USER_LOGIN_ID as USER4_8_0_, loginevent0_.LOGIN_IP_ADDRESS as LOGIN5_8_0_, loginevent0_.IS_LOGIN_SUCCESSFUL as IS6_8_0_ from CATISSUE_LOGIN_AUDIT_EVENT_LOG loginevent0_ where loginevent0_.IDENTIFIER=? for update
Static select for entity edu.wustl.common.domain.LoginEvent: select loginevent0_.IDENTIFIER as IDENTIFIER8_0_, loginevent0_.LOGIN_TIMESTAMP as LOGIN2_8_0_, loginevent0_.LOGIN_SOURCE_ID as LOGIN3_8_0_, loginevent0_.USER_LOGIN_ID as USER4_8_0_, loginevent0_.LOGIN_IP_ADDRESS as LOGIN5_8_0_, loginevent0_.IS_LOGIN_SUCCESSFUL as IS6_8_0_ from CATISSUE_LOGIN_AUDIT_EVENT_LOG loginevent0_ where loginevent0_.IDENTIFIER=? for update
Static select for action ACTION_MERGE on entity edu.wustl.common.domain.LoginEvent: select loginevent0_.IDENTIFIER as IDENTIFIER8_0_, loginevent0_.LOGIN_TIMESTAMP as LOGIN2_8_0_, loginevent0_.LOGIN_SOURCE_ID as LOGIN3_8_0_, loginevent0_.USER_LOGIN_ID as USER4_8_0_, loginevent0_.LOGIN_IP_ADDRESS as LOGIN5_8_0_, loginevent0_.IS_LOGIN_SUCCESSFUL as IS6_8_0_ from CATISSUE_LOGIN_AUDIT_EVENT_LOG loginevent0_ where loginevent0_.IDENTIFIER=?
Static select for action ACTION_REFRESH on entity edu.wustl.common.domain.LoginEvent: select loginevent0_.IDENTIFIER as IDENTIFIER8_0_, loginevent0_.LOGIN_TIMESTAMP as LOGIN2_8_0_, loginevent0_.LOGIN_SOURCE_ID as LOGIN3_8_0_, loginevent0_.USER_LOGIN_ID as USER4_8_0_, loginevent0_.LOGIN_IP_ADDRESS as LOGIN5_8_0_, loginevent0_.IS_LOGIN_SUCCESSFUL as IS6_8_0_ from CATISSUE_LOGIN_AUDIT_EVENT_LOG loginevent0_ where loginevent0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.AuditDataEventLog: select auditdatae0_.IDENTIFIER as IDENTIFIER6_1_, auditdatae0_1_.AUDIT_EVENT_ID as AUDIT5_6_1_, auditdatae0_.OBJECT_IDENTIFIER as OBJECT2_7_1_, auditdatae0_.OBJECT_NAME as OBJECT3_7_1_, auditevent1_.IDENTIFIER as IDENTIFIER4_0_, auditevent1_.EVENT_TIMESTAMP as EVENT2_4_0_, auditevent1_.USER_ID as USER3_4_0_, auditevent1_.EVENT_TYPE as EVENT4_4_0_, auditevent1_.COMMENTS as COMMENTS4_0_, auditevent1_.IP_ADDRESS as IP6_4_0_ from CATISSUE_DATA_AUDIT_EVENT_LOG auditdatae0_ inner join CATISSUE_AUDIT_EVENT_LOG auditdatae0_1_ on auditdatae0_.IDENTIFIER=auditdatae0_1_.IDENTIFIER left outer join CATISSUE_AUDIT_EVENT auditevent1_ on auditdatae0_1_.AUDIT_EVENT_ID=auditevent1_.IDENTIFIER where auditdatae0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.AuditDataEventLog: select auditdatae0_.IDENTIFIER as IDENTIFIER6_1_, auditdatae0_1_.AUDIT_EVENT_ID as AUDIT5_6_1_, auditdatae0_.OBJECT_IDENTIFIER as OBJECT2_7_1_, auditdatae0_.OBJECT_NAME as OBJECT3_7_1_, auditevent1_.IDENTIFIER as IDENTIFIER4_0_, auditevent1_.EVENT_TIMESTAMP as EVENT2_4_0_, auditevent1_.USER_ID as USER3_4_0_, auditevent1_.EVENT_TYPE as EVENT4_4_0_, auditevent1_.COMMENTS as COMMENTS4_0_, auditevent1_.IP_ADDRESS as IP6_4_0_ from CATISSUE_DATA_AUDIT_EVENT_LOG auditdatae0_ inner join CATISSUE_AUDIT_EVENT_LOG auditdatae0_1_ on auditdatae0_.IDENTIFIER=auditdatae0_1_.IDENTIFIER left outer join CATISSUE_AUDIT_EVENT auditevent1_ on auditdatae0_1_.AUDIT_EVENT_ID=auditevent1_.IDENTIFIER where auditdatae0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.AuditDataEventLog: select auditdatae0_.IDENTIFIER as IDENTIFIER6_0_, auditdatae0_1_.AUDIT_EVENT_ID as AUDIT5_6_0_, auditdatae0_.OBJECT_IDENTIFIER as OBJECT2_7_0_, auditdatae0_.OBJECT_NAME as OBJECT3_7_0_ from CATISSUE_DATA_AUDIT_EVENT_LOG auditdatae0_ inner join CATISSUE_AUDIT_EVENT_LOG auditdatae0_1_ on auditdatae0_.IDENTIFIER=auditdatae0_1_.IDENTIFIER where auditdatae0_.IDENTIFIER=? for update
Static select for entity edu.wustl.common.domain.AuditDataEventLog: select auditdatae0_.IDENTIFIER as IDENTIFIER6_0_, auditdatae0_1_.AUDIT_EVENT_ID as AUDIT5_6_0_, auditdatae0_.OBJECT_IDENTIFIER as OBJECT2_7_0_, auditdatae0_.OBJECT_NAME as OBJECT3_7_0_ from CATISSUE_DATA_AUDIT_EVENT_LOG auditdatae0_ inner join CATISSUE_AUDIT_EVENT_LOG auditdatae0_1_ on auditdatae0_.IDENTIFIER=auditdatae0_1_.IDENTIFIER where auditdatae0_.IDENTIFIER=? for update
Static select for action ACTION_MERGE on entity edu.wustl.common.domain.AuditDataEventLog: select auditdatae0_.IDENTIFIER as IDENTIFIER6_2_, auditdatae0_1_.AUDIT_EVENT_ID as AUDIT5_6_2_, auditdatae0_.OBJECT_IDENTIFIER as OBJECT2_7_2_, auditdatae0_.OBJECT_NAME as OBJECT3_7_2_, auditdatae1_.PARENT_LOG_ID as PARENT4_4_, auditdatae1_.IDENTIFIER as IDENTIFIER4_, auditdatae1_.IDENTIFIER as IDENTIFIER6_0_, auditdatae1_1_.AUDIT_EVENT_ID as AUDIT5_6_0_, auditdatae1_.OBJECT_IDENTIFIER as OBJECT2_7_0_, auditdatae1_.OBJECT_NAME as OBJECT3_7_0_, auditevent2_.AUDIT_EVENT_LOG_ID as AUDIT5_5_, auditevent2_.IDENTIFIER as IDENTIFIER5_, auditevent2_.IDENTIFIER as IDENTIFIER5_1_, auditevent2_.ELEMENT_NAME as ELEMENT2_5_1_, auditevent2_.PREVIOUS_VALUE as PREVIOUS3_5_1_, auditevent2_.CURRENT_VALUE as CURRENT4_5_1_, auditevent2_.AUDIT_EVENT_LOG_ID as AUDIT5_5_1_ from CATISSUE_DATA_AUDIT_EVENT_LOG auditdatae0_ inner join CATISSUE_AUDIT_EVENT_LOG auditdatae0_1_ on auditdatae0_.IDENTIFIER=auditdatae0_1_.IDENTIFIER left outer join CATISSUE_DATA_AUDIT_EVENT_LOG auditdatae1_ on auditdatae0_.IDENTIFIER=auditdatae1_.PARENT_LOG_ID left outer join CATISSUE_AUDIT_EVENT_LOG auditdatae1_1_ on auditdatae1_.IDENTIFIER=auditdatae1_1_.IDENTIFIER left outer join CATISSUE_AUDIT_EVENT_DETAILS auditevent2_ on auditdatae1_.IDENTIFIER=auditevent2_.AUDIT_EVENT_LOG_ID where auditdatae0_.IDENTIFIER=?
Static select for action ACTION_REFRESH on entity edu.wustl.common.domain.AuditDataEventLog: select auditdatae0_.IDENTIFIER as IDENTIFIER6_2_, auditdatae0_1_.AUDIT_EVENT_ID as AUDIT5_6_2_, auditdatae0_.OBJECT_IDENTIFIER as OBJECT2_7_2_, auditdatae0_.OBJECT_NAME as OBJECT3_7_2_, auditdatae1_.PARENT_LOG_ID as PARENT4_4_, auditdatae1_.IDENTIFIER as IDENTIFIER4_, auditdatae1_.IDENTIFIER as IDENTIFIER6_0_, auditdatae1_1_.AUDIT_EVENT_ID as AUDIT5_6_0_, auditdatae1_.OBJECT_IDENTIFIER as OBJECT2_7_0_, auditdatae1_.OBJECT_NAME as OBJECT3_7_0_, auditevent2_.AUDIT_EVENT_LOG_ID as AUDIT5_5_, auditevent2_.IDENTIFIER as IDENTIFIER5_, auditevent2_.IDENTIFIER as IDENTIFIER5_1_, auditevent2_.ELEMENT_NAME as ELEMENT2_5_1_, auditevent2_.PREVIOUS_VALUE as PREVIOUS3_5_1_, auditevent2_.CURRENT_VALUE as CURRENT4_5_1_, auditevent2_.AUDIT_EVENT_LOG_ID as AUDIT5_5_1_ from CATISSUE_DATA_AUDIT_EVENT_LOG auditdatae0_ inner join CATISSUE_AUDIT_EVENT_LOG auditdatae0_1_ on auditdatae0_.IDENTIFIER=auditdatae0_1_.IDENTIFIER left outer join CATISSUE_DATA_AUDIT_EVENT_LOG auditdatae1_ on auditdatae0_.IDENTIFIER=auditdatae1_.PARENT_LOG_ID left outer join CATISSUE_AUDIT_EVENT_LOG auditdatae1_1_ on auditdatae1_.IDENTIFIER=auditdatae1_1_.IDENTIFIER left outer join CATISSUE_AUDIT_EVENT_DETAILS auditevent2_ on auditdatae1_.IDENTIFIER=auditevent2_.AUDIT_EVENT_LOG_ID where auditdatae0_.IDENTIFIER=?
Static select for entity test.User: select user0_.IDENTIFIER as IDENTIFIER0_0_, user0_.EMAIL_ADDRESS as EMAIL2_0_0_, user0_.FIRST_NAME as FIRST3_0_0_, user0_.LAST_NAME as LAST4_0_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_0_ from test_user user0_ where user0_.IDENTIFIER=?
Static select for entity test.User: select user0_.IDENTIFIER as IDENTIFIER0_0_, user0_.EMAIL_ADDRESS as EMAIL2_0_0_, user0_.FIRST_NAME as FIRST3_0_0_, user0_.LAST_NAME as LAST4_0_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_0_ from test_user user0_ where user0_.IDENTIFIER=?
Static select for entity test.User: select user0_.IDENTIFIER as IDENTIFIER0_0_, user0_.EMAIL_ADDRESS as EMAIL2_0_0_, user0_.FIRST_NAME as FIRST3_0_0_, user0_.LAST_NAME as LAST4_0_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_0_ from test_user user0_ where user0_.IDENTIFIER=? for update
Static select for entity test.User: select user0_.IDENTIFIER as IDENTIFIER0_0_, user0_.EMAIL_ADDRESS as EMAIL2_0_0_, user0_.FIRST_NAME as FIRST3_0_0_, user0_.LAST_NAME as LAST4_0_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_0_ from test_user user0_ where user0_.IDENTIFIER=? for update
Static select for action ACTION_MERGE on entity test.User: select user0_.IDENTIFIER as IDENTIFIER0_1_, user0_.EMAIL_ADDRESS as EMAIL2_0_1_, user0_.FIRST_NAME as FIRST3_0_1_, user0_.LAST_NAME as LAST4_0_1_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_1_, ordercolle1_.user_id as user3_3_, ordercolle1_.IDENTIFIER as IDENTIFIER3_, ordercolle1_.IDENTIFIER as IDENTIFIER3_0_, ordercolle1_.person_id as person2_3_0_, ordercolle1_.user_id as user3_3_0_ from test_user user0_ left outer join test_order ordercolle1_ on user0_.IDENTIFIER=ordercolle1_.user_id where user0_.IDENTIFIER=?
Static select for action ACTION_REFRESH on entity test.User: select user0_.IDENTIFIER as IDENTIFIER0_1_, user0_.EMAIL_ADDRESS as EMAIL2_0_1_, user0_.FIRST_NAME as FIRST3_0_1_, user0_.LAST_NAME as LAST4_0_1_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_1_, ordercolle1_.user_id as user3_3_, ordercolle1_.IDENTIFIER as IDENTIFIER3_, ordercolle1_.IDENTIFIER as IDENTIFIER3_0_, ordercolle1_.person_id as person2_3_0_, ordercolle1_.user_id as user3_3_0_ from test_user user0_ left outer join test_order ordercolle1_ on user0_.IDENTIFIER=ordercolle1_.user_id where user0_.IDENTIFIER=?
Static select for one-to-many edu.wustl.common.domain.AuditEvent.auditEventLogCollection: select auditevent0_.AUDIT_EVENT_ID as AUDIT5_1_, auditevent0_.IDENTIFIER as IDENTIFIER1_, auditevent0_.IDENTIFIER as IDENTIFIER6_0_, auditevent0_.AUDIT_EVENT_ID as AUDIT5_6_0_, auditevent0_1_.OBJECT_IDENTIFIER as OBJECT2_7_0_, auditevent0_1_.OBJECT_NAME as OBJECT3_7_0_, case when auditevent0_1_.IDENTIFIER is not null then 1 when auditevent0_.IDENTIFIER is not null then 0 end as clazz_0_ from CATISSUE_AUDIT_EVENT_LOG auditevent0_ left outer join CATISSUE_DATA_AUDIT_EVENT_LOG auditevent0_1_ on auditevent0_.IDENTIFIER=auditevent0_1_.IDENTIFIER where auditevent0_.AUDIT_EVENT_ID=?
Static select for one-to-many test.User.orderCollection: select ordercolle0_.user_id as user3_2_, ordercolle0_.IDENTIFIER as IDENTIFIER2_, ordercolle0_.IDENTIFIER as IDENTIFIER3_1_, ordercolle0_.person_id as person2_3_1_, ordercolle0_.user_id as user3_3_1_, person1_.IDENTIFIER as IDENTIFIER1_0_, person1_.NAME as NAME1_0_, person1_.ADDRESS_ID as ADDRESS3_1_0_ from test_order ordercolle0_ left outer join test_person person1_ on ordercolle0_.person_id=person1_.IDENTIFIER where ordercolle0_.user_id=?
Static select for one-to-many edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection: select auditevent0_.AUDIT_EVENT_LOG_ID as AUDIT5_1_, auditevent0_.IDENTIFIER as IDENTIFIER1_, auditevent0_.IDENTIFIER as IDENTIFIER5_0_, auditevent0_.ELEMENT_NAME as ELEMENT2_5_0_, auditevent0_.PREVIOUS_VALUE as PREVIOUS3_5_0_, auditevent0_.CURRENT_VALUE as CURRENT4_5_0_, auditevent0_.AUDIT_EVENT_LOG_ID as AUDIT5_5_0_ from CATISSUE_AUDIT_EVENT_DETAILS auditevent0_ where auditevent0_.AUDIT_EVENT_LOG_ID=?
Static select for one-to-many edu.wustl.common.domain.AuditEventLog.auditEventDetailsCollection: select auditevent0_.AUDIT_EVENT_LOG_ID as AUDIT5_1_, auditevent0_.IDENTIFIER as IDENTIFIER1_, auditevent0_.IDENTIFIER as IDENTIFIER5_0_, auditevent0_.ELEMENT_NAME as ELEMENT2_5_0_, auditevent0_.PREVIOUS_VALUE as PREVIOUS3_5_0_, auditevent0_.CURRENT_VALUE as CURRENT4_5_0_, auditevent0_.AUDIT_EVENT_LOG_ID as AUDIT5_5_0_ from CATISSUE_AUDIT_EVENT_DETAILS auditevent0_ where auditevent0_.AUDIT_EVENT_LOG_ID=?
Static select for one-to-many edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs: select auditdatae0_.PARENT_LOG_ID as PARENT4_2_, auditdatae0_.IDENTIFIER as IDENTIFIER2_, auditdatae0_.IDENTIFIER as IDENTIFIER6_1_, auditdatae0_1_.AUDIT_EVENT_ID as AUDIT5_6_1_, auditdatae0_.OBJECT_IDENTIFIER as OBJECT2_7_1_, auditdatae0_.OBJECT_NAME as OBJECT3_7_1_, auditevent1_.IDENTIFIER as IDENTIFIER4_0_, auditevent1_.EVENT_TIMESTAMP as EVENT2_4_0_, auditevent1_.USER_ID as USER3_4_0_, auditevent1_.EVENT_TYPE as EVENT4_4_0_, auditevent1_.COMMENTS as COMMENTS4_0_, auditevent1_.IP_ADDRESS as IP6_4_0_ from CATISSUE_DATA_AUDIT_EVENT_LOG auditdatae0_ inner join CATISSUE_AUDIT_EVENT_LOG auditdatae0_1_ on auditdatae0_.IDENTIFIER=auditdatae0_1_.IDENTIFIER left outer join CATISSUE_AUDIT_EVENT auditevent1_ on auditdatae0_1_.AUDIT_EVENT_ID=auditevent1_.IDENTIFIER where auditdatae0_.PARENT_LOG_ID=?
Static select for one-to-many test.Person.orderCollection: select ordercolle0_.person_id as person2_1_, ordercolle0_.IDENTIFIER as IDENTIFIER1_, ordercolle0_.IDENTIFIER as IDENTIFIER3_0_, ordercolle0_.person_id as person2_3_0_, ordercolle0_.user_id as user3_3_0_ from test_order ordercolle0_ where ordercolle0_.person_id=?
initializing class SessionFactoryObjectFactory
registered: 8ad847f8257dee2801257dee2b570000 (unnamed)
Not binding factory to JNDI, no JNDI name configured
instantiated session factory
Checking 0 named HQL queries
Checking 0 named SQL queries
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
configuring from XML document
show_sql=false
dialect=org.hibernate.dialect.Oracle9Dialect
connection.driver_class=oracle.jdbc.driver.OracleDriver
connection.url=jdbc:oracle:thin:@ps0741:1521:oranew
connection.username=daodb
connection.password=daodb
null<-org.dom4j.tree.DefaultAttribute@7109c4 [Attribute: name resource value "testhbm/User.hbm.xml"]
Reading mappings from resource: testhbm/User.hbm.xml
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
Mapping class: test.User -> test_user
Mapped property: id -> IDENTIFIER
Mapped property: emailAddress -> EMAIL_ADDRESS
Mapped property: firstName -> FIRST_NAME
Mapped property: lastName -> LAST_NAME
Mapped property: activityStatus -> ACTIVITY_STATUS
Mapped property: orderCollection
null<-org.dom4j.tree.DefaultAttribute@136a43c [Attribute: name resource value "testhbm/Person.hbm.xml"]
Reading mappings from resource: testhbm/Person.hbm.xml
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
Mapping class: test.Person -> test_person
Mapped property: id -> IDENTIFIER
Mapped property: name -> NAME
Mapped property: address -> ADDRESS_ID
Mapped property: orderCollection
null<-org.dom4j.tree.DefaultAttribute@1a7508a [Attribute: name resource value "testhbm/Address.hbm.xml"]
Reading mappings from resource: testhbm/Address.hbm.xml
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
Mapping class: test.Address -> test_address
Mapped property: id -> IDENTIFIER
Mapped property: street -> STREET
null<-org.dom4j.tree.DefaultAttribute@472d48 [Attribute: name resource value "testhbm/Order.hbm.xml"]
Reading mappings from resource: testhbm/Order.hbm.xml
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
Mapping class: test.Order -> test_order
Mapped property: id -> IDENTIFIER
Mapped property: person -> person_id
Mapped property: user -> user_id
null<-org.dom4j.tree.DefaultAttribute@19b04e2 [Attribute: name resource value "edu/wustl/common/hbm/AuditEvent.hbm.xml"]
Reading mappings from resource: edu/wustl/common/hbm/AuditEvent.hbm.xml
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
Mapping class: edu.wustl.common.domain.AuditEvent -> CATISSUE_AUDIT_EVENT
Mapped property: id -> IDENTIFIER
Mapped property: timestamp -> EVENT_TIMESTAMP
Mapped property: userId -> USER_ID
Mapped property: eventType -> EVENT_TYPE
Mapped property: comments -> COMMENTS
Mapped property: ipAddress -> IP_ADDRESS
Mapped property: auditEventLogCollection
null<-org.dom4j.tree.DefaultAttribute@b25b9d [Attribute: name resource value "edu/wustl/common/hbm/AuditEventDetails.hbm.xml"]
Reading mappings from resource: edu/wustl/common/hbm/AuditEventDetails.hbm.xml
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
Mapping class: edu.wustl.common.domain.AuditEventDetails -> CATISSUE_AUDIT_EVENT_DETAILS
Mapped property: id -> IDENTIFIER
Mapped property: elementName -> ELEMENT_NAME
Mapped property: previousValue -> PREVIOUS_VALUE
Mapped property: currentValue -> CURRENT_VALUE
Mapped property: auditEventLog -> AUDIT_EVENT_LOG_ID
null<-org.dom4j.tree.DefaultAttribute@30d82d [Attribute: name resource value "edu/wustl/common/hbm/AuditEventLog.hbm.xml"]
Reading mappings from resource: edu/wustl/common/hbm/AuditEventLog.hbm.xml
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
Mapping class: edu.wustl.common.domain.AuditEventLog -> CATISSUE_AUDIT_EVENT_LOG
Mapped property: id -> IDENTIFIER
Mapped property: objectIdentifier -> OBJECT_IDENTIFIER
Mapped property: objectName -> OBJECT_NAME
Mapped property: eventType -> EVENT_TYPE
Mapped property: auditEvent -> AUDIT_EVENT_ID
Mapped property: auditEventDetailsCollection
null<-org.dom4j.tree.DefaultAttribute@3b8b49 [Attribute: name resource value "edu/wustl/common/hbm/AbstractAuditEventLog.hbm.xml"]
Reading mappings from resource: edu/wustl/common/hbm/AbstractAuditEventLog.hbm.xml
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
Mapping class: edu.wustl.common.domain.AbstractAuditEventLog -> CATISSUE_AUDIT_EVENT_LOG
Mapped property: id -> IDENTIFIER
Mapped property: auditEvent -> AUDIT_EVENT_ID
Mapping joined-subclass: edu.wustl.common.domain.AuditDataEventLog -> CATISSUE_DATA_AUDIT_EVENT_LOG
Mapped property: objectIdentifier -> OBJECT_IDENTIFIER
Mapped property: objectName -> OBJECT_NAME
Mapped property: auditDataEventLogs
Mapped property: auditEventDetailsCollection
null<-org.dom4j.tree.DefaultAttribute@18235ed [Attribute: name resource value "edu/wustl/common/hbm/LoginEvent.hbm.xml"]
Reading mappings from resource: edu/wustl/common/hbm/LoginEvent.hbm.xml
trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
Mapping class: edu.wustl.common.domain.LoginEvent -> CATISSUE_LOGIN_AUDIT_EVENT_LOG
Mapped property: id -> IDENTIFIER
Mapped property: timestamp -> LOGIN_TIMESTAMP
Mapped property: sourceId -> LOGIN_SOURCE_ID
Mapped property: userLoginId -> USER_LOGIN_ID
Mapped property: ipAddress -> LOGIN_IP_ADDRESS
Mapped property: isLoginSuccessful -> IS_LOGIN_SUCCESSFUL
Configured SessionFactory: null
properties: {hibernate.connection.password=daodb, java.runtime.name=Java(TM) 2 Runtime Environment, Standard Edition, sun.boot.library.path=C:\Program Files\Java\jdk1.5.0_08\jre\bin, java.vm.version=1.5.0_08-b03, hibernate.connection.username=daodb, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=US, sun.os.patch.level=Service Pack 2, java.vm.specification.name=Java Virtual Machine Specification, user.dir=F:\catissueWorkspace\DAOWithoutAudit\daojunits, java.runtime.version=1.5.0_08-b03, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\Program Files\Java\jdk1.5.0_08\jre\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\DOCUME~1\KALPAN~1\LOCALS~1\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows XP, net.sourceforge.cobertura.datafile=F:\catissueWorkspace\DAOWithoutAudit\daojunits\cobertura.ser, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk1.5.0_08\jre\bin;.;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.5.0_08/bin/../jre/bin/client;C:/Program Files/Java/jdk1.5.0_08/bin/../jre/bin;C:\Tcl\bin;E:\Ant\apache-ant-1.7.0\bin;C:\Program Files\Java\jdk1.6.0\bin;C:\Program Files\DeID\;C:\Program Files\TortoiseCVS;C:\Program Files\Java\jdk1.5.0_08\bin;;F:\oracle\ora92\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\mysql server\bin;C:\Program Files\YourKit Java Profiler 7.0.11\bin\win32;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Windows Imaging\, java.specification.name=Java Platform API Specification, java.class.version=49.0, sun.management.compiler=HotSpot Client Compiler, os.version=5.1, connection.password=daodb, user.home=C:\Documents and Settings\kalpana_thakur, user.timezone=, connection.username=daodb, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=Cp1252, java.specification.version=1.5, hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver, show_sql=false, user.name=kalpana_thakur, java.class.path=F:\catissueWorkspace\DAOWithoutAudit\daojunits\instrument;F:\catissueWorkspace\DAOWithoutAudit\classes;F:\catissueWorkspace\DAOWithoutAudit\lib\ant-contrib.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\antlr-2.7.5H3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\asm.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\castor-1.3-core.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\castor-1.3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\cglib.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\commons-collections-3.2.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\commons-logging.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\dom4j-1.6.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\ehcache-1.2.3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\hibernate3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\j2ee.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\junit-4.5.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\log4j.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\mmtxProject.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\mysql-connector-java-5.0.8-bin.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\ojdbc14.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\washu-commons-1.1.4.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\src;F:\catissueWorkspace\DAOWithoutAudit\daojunits\classes;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\asm-2.2.1.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\asm-tree-2.2.1.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\cobertura.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\jakarta-oro-2.0.8.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\log4j.jar;E:\Ant\apache-ant-1.7.0\lib\junit-4.1.jar;E:\Ant\apache-ant-1.7.0\lib\ant-launcher.jar;E:\Ant\apache-ant-1.7.0\lib\ant.jar;E:\Ant\apache-ant-1.7.0\lib\ant-junit.jar, hibernate.show_sql=false, java.vm.specification.version=1.0, java.home=C:\Program Files\Java\jdk1.5.0_08\jre, sun.arch.data.model=32, hibernate.connection.url=jdbc:oracle:thin:@ps0741:1521:oranew, hibernate.dialect=org.hibernate.dialect.Oracle9Dialect, user.language=en, java.specification.vendor=Sun Microsystems Inc., awt.toolkit=sun.awt.windows.WToolkit, hibernate.cglib.use_reflection_optimizer=true, java.vm.info=mixed mode, sharing, java.version=1.5.0_08, java.ext.dirs=C:\Program Files\Java\jdk1.5.0_08\jre\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.5.0_08\jre\lib\rt.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\i18n.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\jce.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.5.0_08\jre\classes, java.vendor=Sun Microsystems Inc., connection.driver_class=oracle.jdbc.driver.OracleDriver, file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, connection.url=jdbc:oracle:thin:@ps0741:1521:oranew, dialect=org.hibernate.dialect.Oracle9Dialect, sun.cpu.isalist=}
Preparing to build session factory with filters : {}
processing extends queue
processing collection mappings
Second pass for collection: test.User.orderCollection
Mapping collection: test.User.orderCollection -> test_order
Mapped collection key: user_id, one-to-many: test.Order
Second pass for collection: test.Person.orderCollection
Mapping collection: test.Person.orderCollection -> test_order
Mapped collection key: person_id, one-to-many: test.Order
Second pass for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
Mapping collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection -> CATISSUE_AUDIT_EVENT_LOG
Mapped collection key: AUDIT_EVENT_ID, one-to-many: edu.wustl.common.domain.AbstractAuditEventLog
Second pass for collection: edu.wustl.common.domain.AuditEventLog.auditEventDetailsCollection
Mapping collection: edu.wustl.common.domain.AuditEventLog.auditEventDetailsCollection -> CATISSUE_AUDIT_EVENT_DETAILS
Mapped collection key: AUDIT_EVENT_LOG_ID, one-to-many: edu.wustl.common.domain.AuditEventDetails
Second pass for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
Mapping collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs -> CATISSUE_DATA_AUDIT_EVENT_LOG
Mapped collection key: PARENT_LOG_ID, one-to-many: edu.wustl.common.domain.AuditDataEventLog
Second pass for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
Mapping collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection -> CATISSUE_AUDIT_EVENT_DETAILS
Mapped collection key: AUDIT_EVENT_LOG_ID, one-to-many: edu.wustl.common.domain.AuditEventDetails
processing native query and ResultSetMapping mappings
processing association property references
processing foreign key constraints
resolving reference to class: edu.wustl.common.domain.AuditEventLog
resolving reference to class: edu.wustl.common.domain.AuditDataEventLog
resolving reference to class: edu.wustl.common.domain.AuditEvent
resolving reference to class: edu.wustl.common.domain.AuditDataEventLog
resolving reference to class: edu.wustl.common.domain.AbstractAuditEventLog
resolving reference to class: test.User
resolving reference to class: test.Person
resolving reference to class: test.Address
Using Hibernate built-in connection pool (not for production use!)
Hibernate connection pool size: 20
autocommit mode: false
using driver: oracle.jdbc.driver.OracleDriver at URL: jdbc:oracle:thin:@ps0741:1521:oranew
connection properties: {user=daodb, password=daodb}
total checked-out connections: 0
opening new JDBC connection
created connection to: jdbc:oracle:thin:@ps0741:1521:oranew, Isolation Level: 2
could not get database version from JDBC metadata
RDBMS: Oracle, version: Oracle Database 10g Enterprise Edition Release 10.2.0.1.0 - Production
With the Partitioning, OLAP and Data Mining options
JDBC driver: Oracle JDBC driver, version: 9.2.0.5.0
returning connection to pool, pool size: 1
Using dialect: org.hibernate.dialect.Oracle9Dialect
Using default transaction strategy (direct JDBC transactions)
No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): disabled
Connection release mode: auto
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
Using ASTQueryTranslatorFactory
Query language substitutions: {}
Second-level cache: enabled
Query cache: disabled
Cache provider: org.hibernate.cache.EhCacheProvider
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Using dialect defined converter
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
building session factory
Session factory constructed with filter configurations : {}
instantiating session factory with properties: {java.runtime.name=Java(TM) 2 Runtime Environment, Standard Edition, hibernate.connection.password=daodb, sun.boot.library.path=C:\Program Files\Java\jdk1.5.0_08\jre\bin, java.vm.version=1.5.0_08-b03, hibernate.connection.username=daodb, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=US, sun.os.patch.level=Service Pack 2, java.vm.specification.name=Java Virtual Machine Specification, user.dir=F:\catissueWorkspace\DAOWithoutAudit\daojunits, java.runtime.version=1.5.0_08-b03, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\Program Files\Java\jdk1.5.0_08\jre\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\DOCUME~1\KALPAN~1\LOCALS~1\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows XP, net.sourceforge.cobertura.datafile=F:\catissueWorkspace\DAOWithoutAudit\daojunits\cobertura.ser, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk1.5.0_08\jre\bin;.;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.5.0_08/bin/../jre/bin/client;C:/Program Files/Java/jdk1.5.0_08/bin/../jre/bin;C:\Tcl\bin;E:\Ant\apache-ant-1.7.0\bin;C:\Program Files\Java\jdk1.6.0\bin;C:\Program Files\DeID\;C:\Program Files\TortoiseCVS;C:\Program Files\Java\jdk1.5.0_08\bin;;F:\oracle\ora92\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\mysql server\bin;C:\Program Files\YourKit Java Profiler 7.0.11\bin\win32;C:\Program Files\TortoiseSVN\bin;C:\Program Files\Windows Imaging\, java.specification.name=Java Platform API Specification, java.class.version=49.0, sun.management.compiler=HotSpot Client Compiler, os.version=5.1, user.home=C:\Documents and Settings\kalpana_thakur, connection.password=daodb, user.timezone=, java.awt.printerjob=sun.awt.windows.WPrinterJob, connection.username=daodb, java.specification.version=1.5, file.encoding=Cp1252, hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver, show_sql=false, java.class.path=F:\catissueWorkspace\DAOWithoutAudit\daojunits\instrument;F:\catissueWorkspace\DAOWithoutAudit\classes;F:\catissueWorkspace\DAOWithoutAudit\lib\ant-contrib.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\antlr-2.7.5H3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\asm.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\castor-1.3-core.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\castor-1.3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\cglib.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\commons-collections-3.2.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\commons-logging.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\dom4j-1.6.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\ehcache-1.2.3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\hibernate3.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\j2ee.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\junit-4.5.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\log4j.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\mmtxProject.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\mysql-connector-java-5.0.8-bin.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\ojdbc14.jar;F:\catissueWorkspace\DAOWithoutAudit\lib\washu-commons-1.1.4.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\src;F:\catissueWorkspace\DAOWithoutAudit\daojunits\classes;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\asm-2.2.1.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\asm-tree-2.2.1.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\cobertura.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\jakarta-oro-2.0.8.jar;F:\catissueWorkspace\DAOWithoutAudit\daojunits\coberturalib\log4j.jar;E:\Ant\apache-ant-1.7.0\lib\junit-4.1.jar;E:\Ant\apache-ant-1.7.0\lib\ant-launcher.jar;E:\Ant\apache-ant-1.7.0\lib\ant.jar;E:\Ant\apache-ant-1.7.0\lib\ant-junit.jar, user.name=kalpana_thakur, hibernate.show_sql=false, java.vm.specification.version=1.0, sun.arch.data.model=32, java.home=C:\Program Files\Java\jdk1.5.0_08\jre, hibernate.dialect=org.hibernate.dialect.Oracle9Dialect, hibernate.connection.url=jdbc:oracle:thin:@ps0741:1521:oranew, java.specification.vendor=Sun Microsystems Inc., user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, hibernate.cglib.use_reflection_optimizer=true, java.version=1.5.0_08, java.ext.dirs=C:\Program Files\Java\jdk1.5.0_08\jre\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.5.0_08\jre\lib\rt.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\i18n.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\jce.jar;C:\Program Files\Java\jdk1.5.0_08\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.5.0_08\jre\classes, java.vendor=Sun Microsystems Inc., file.separator=\, connection.driver_class=oracle.jdbc.driver.OracleDriver, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, connection.url=jdbc:oracle:thin:@ps0741:1521:oranew, sun.cpu.isalist=, dialect=org.hibernate.dialect.Oracle9Dialect}
Attempting to create an existing singleton. Existing singleton returned.
Static SQL for entity: edu.wustl.common.domain.AbstractAuditEventLog
 Version select: select IDENTIFIER from CATISSUE_AUDIT_EVENT_LOG where IDENTIFIER =?
 Snapshot select: select abstractau_.IDENTIFIER, abstractau_.AUDIT_EVENT_ID as AUDIT5_25_ from CATISSUE_AUDIT_EVENT_LOG abstractau_ where abstractau_.IDENTIFIER=?
 Insert 0: insert into CATISSUE_AUDIT_EVENT_LOG (AUDIT_EVENT_ID, IDENTIFIER) values (?, ?)
 Update 0: update CATISSUE_AUDIT_EVENT_LOG set AUDIT_EVENT_ID=? where IDENTIFIER=?
 Delete 0: delete from CATISSUE_AUDIT_EVENT_LOG where IDENTIFIER=?
Static SQL for entity: edu.wustl.common.domain.AuditEventDetails
 Version select: select IDENTIFIER from CATISSUE_AUDIT_EVENT_DETAILS where IDENTIFIER =?
 Snapshot select: select auditevent_.IDENTIFIER, auditevent_.ELEMENT_NAME as ELEMENT2_24_, auditevent_.PREVIOUS_VALUE as PREVIOUS3_24_, auditevent_.CURRENT_VALUE as CURRENT4_24_, auditevent_.AUDIT_EVENT_LOG_ID as AUDIT5_24_ from CATISSUE_AUDIT_EVENT_DETAILS auditevent_ where auditevent_.IDENTIFIER=?
 Insert 0: insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID, IDENTIFIER) values (?, ?, ?, ?, ?)
 Update 0: update CATISSUE_AUDIT_EVENT_DETAILS set ELEMENT_NAME=?, PREVIOUS_VALUE=?, CURRENT_VALUE=?, AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
 Delete 0: delete from CATISSUE_AUDIT_EVENT_DETAILS where IDENTIFIER=?
Static SQL for entity: edu.wustl.common.domain.AuditEvent
 Version select: select IDENTIFIER from CATISSUE_AUDIT_EVENT where IDENTIFIER =?
 Snapshot select: select auditevent_.IDENTIFIER, auditevent_.EVENT_TIMESTAMP as EVENT2_23_, auditevent_.USER_ID as USER3_23_, auditevent_.EVENT_TYPE as EVENT4_23_, auditevent_.COMMENTS as COMMENTS23_, auditevent_.IP_ADDRESS as IP6_23_ from CATISSUE_AUDIT_EVENT auditevent_ where auditevent_.IDENTIFIER=?
 Insert 0: insert into CATISSUE_AUDIT_EVENT (EVENT_TIMESTAMP, USER_ID, EVENT_TYPE, COMMENTS, IP_ADDRESS, IDENTIFIER) values (?, ?, ?, ?, ?, ?)
 Update 0: update CATISSUE_AUDIT_EVENT set EVENT_TIMESTAMP=?, USER_ID=?, EVENT_TYPE=?, COMMENTS=?, IP_ADDRESS=? where IDENTIFIER=?
 Delete 0: delete from CATISSUE_AUDIT_EVENT where IDENTIFIER=?
Static SQL for entity: edu.wustl.common.domain.AuditEventLog
 Version select: select IDENTIFIER from CATISSUE_AUDIT_EVENT_LOG where IDENTIFIER =?
 Snapshot select: select auditevent_.IDENTIFIER, auditevent_.OBJECT_IDENTIFIER as OBJECT2_25_, auditevent_.OBJECT_NAME as OBJECT3_25_, auditevent_.EVENT_TYPE as EVENT4_25_, auditevent_.AUDIT_EVENT_ID as AUDIT5_25_ from CATISSUE_AUDIT_EVENT_LOG auditevent_ where auditevent_.IDENTIFIER=?
 Insert 0: insert into CATISSUE_AUDIT_EVENT_LOG (OBJECT_IDENTIFIER, OBJECT_NAME, EVENT_TYPE, AUDIT_EVENT_ID, IDENTIFIER) values (?, ?, ?, ?, ?)
 Update 0: update CATISSUE_AUDIT_EVENT_LOG set OBJECT_IDENTIFIER=?, OBJECT_NAME=?, EVENT_TYPE=?, AUDIT_EVENT_ID=? where IDENTIFIER=?
 Delete 0: delete from CATISSUE_AUDIT_EVENT_LOG where IDENTIFIER=?
instantiating cache region: test.Address usage strategy: read-write
Static SQL for entity: test.Address
 Version select: select IDENTIFIER from test_address where IDENTIFIER =?
 Snapshot select: select address_.IDENTIFIER, address_.STREET as STREET21_ from test_address address_ where address_.IDENTIFIER=?
 Insert 0: insert into test_address (STREET, IDENTIFIER) values (?, ?)
 Update 0: update test_address set STREET=? where IDENTIFIER=?
 Delete 0: delete from test_address where IDENTIFIER=?
instantiating cache region: test.Order usage strategy: read-write
Static SQL for entity: test.Order
 Version select: select IDENTIFIER from test_order where IDENTIFIER =?
 Snapshot select: select order_.IDENTIFIER, order_.person_id as person2_22_, order_.user_id as user3_22_ from test_order order_ where order_.IDENTIFIER=?
 Insert 0: insert into test_order (person_id, user_id, IDENTIFIER) values (?, ?, ?)
 Update 0: update test_order set person_id=?, user_id=? where IDENTIFIER=?
 Delete 0: delete from test_order where IDENTIFIER=?
instantiating cache region: test.Person usage strategy: read-write
Static SQL for entity: test.Person
 Version select: select IDENTIFIER from test_person where IDENTIFIER =?
 Snapshot select: select person_.IDENTIFIER, person_.NAME as NAME20_, person_.ADDRESS_ID as ADDRESS3_20_ from test_person person_ where person_.IDENTIFIER=?
 Insert 0: insert into test_person (NAME, ADDRESS_ID, IDENTIFIER) values (?, ?, ?)
 Update 0: update test_person set NAME=?, ADDRESS_ID=? where IDENTIFIER=?
 Delete 0: delete from test_person where IDENTIFIER=?
Static SQL for entity: edu.wustl.common.domain.LoginEvent
 Version select: select IDENTIFIER from CATISSUE_LOGIN_AUDIT_EVENT_LOG where IDENTIFIER =?
 Snapshot select: select loginevent_.IDENTIFIER, loginevent_.LOGIN_TIMESTAMP as LOGIN2_27_, loginevent_.LOGIN_SOURCE_ID as LOGIN3_27_, loginevent_.USER_LOGIN_ID as USER4_27_, loginevent_.LOGIN_IP_ADDRESS as LOGIN5_27_, loginevent_.IS_LOGIN_SUCCESSFUL as IS6_27_ from CATISSUE_LOGIN_AUDIT_EVENT_LOG loginevent_ where loginevent_.IDENTIFIER=?
 Insert 0: insert into CATISSUE_LOGIN_AUDIT_EVENT_LOG (LOGIN_TIMESTAMP, LOGIN_SOURCE_ID, USER_LOGIN_ID, LOGIN_IP_ADDRESS, IS_LOGIN_SUCCESSFUL, IDENTIFIER) values (?, ?, ?, ?, ?, ?)
 Update 0: update CATISSUE_LOGIN_AUDIT_EVENT_LOG set LOGIN_TIMESTAMP=?, LOGIN_SOURCE_ID=?, USER_LOGIN_ID=?, LOGIN_IP_ADDRESS=?, IS_LOGIN_SUCCESSFUL=? where IDENTIFIER=?
 Delete 0: delete from CATISSUE_LOGIN_AUDIT_EVENT_LOG where IDENTIFIER=?
Static SQL for entity: edu.wustl.common.domain.AuditDataEventLog
 Version select: select IDENTIFIER from CATISSUE_AUDIT_EVENT_LOG where IDENTIFIER =?
 Snapshot select: select auditdatae_.IDENTIFIER, auditdatae_1_.AUDIT_EVENT_ID as AUDIT5_25_, auditdatae_.OBJECT_IDENTIFIER as OBJECT2_26_, auditdatae_.OBJECT_NAME as OBJECT3_26_ from CATISSUE_DATA_AUDIT_EVENT_LOG auditdatae_ inner join CATISSUE_AUDIT_EVENT_LOG auditdatae_1_ on auditdatae_.IDENTIFIER=auditdatae_1_.IDENTIFIER where auditdatae_.IDENTIFIER=?
 Insert 0: insert into CATISSUE_AUDIT_EVENT_LOG (AUDIT_EVENT_ID, IDENTIFIER) values (?, ?)
 Update 0: update CATISSUE_AUDIT_EVENT_LOG set AUDIT_EVENT_ID=? where IDENTIFIER=?
 Delete 0: delete from CATISSUE_AUDIT_EVENT_LOG where IDENTIFIER=?
 Insert 1: insert into CATISSUE_DATA_AUDIT_EVENT_LOG (OBJECT_IDENTIFIER, OBJECT_NAME, IDENTIFIER) values (?, ?, ?)
 Update 1: update CATISSUE_DATA_AUDIT_EVENT_LOG set OBJECT_IDENTIFIER=?, OBJECT_NAME=? where IDENTIFIER=?
 Delete 1: delete from CATISSUE_DATA_AUDIT_EVENT_LOG where IDENTIFIER=?
instantiating cache region: test.User usage strategy: read-write
Static SQL for entity: test.User
 Version select: select IDENTIFIER from test_user where IDENTIFIER =?
 Snapshot select: select user_.IDENTIFIER, user_.EMAIL_ADDRESS as EMAIL2_19_, user_.FIRST_NAME as FIRST3_19_, user_.LAST_NAME as LAST4_19_, user_.ACTIVITY_STATUS as ACTIVITY5_19_ from test_user user_ where user_.IDENTIFIER=?
 Insert 0: insert into test_user (EMAIL_ADDRESS, FIRST_NAME, LAST_NAME, ACTIVITY_STATUS, IDENTIFIER) values (?, ?, ?, ?, ?)
 Update 0: update test_user set EMAIL_ADDRESS=?, FIRST_NAME=?, LAST_NAME=?, ACTIVITY_STATUS=? where IDENTIFIER=?
 Delete 0: delete from test_user where IDENTIFIER=?
Static SQL for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
 Row insert: update CATISSUE_AUDIT_EVENT_LOG set AUDIT_EVENT_ID=? where IDENTIFIER=?
 Row delete: update CATISSUE_AUDIT_EVENT_LOG set AUDIT_EVENT_ID=null where AUDIT_EVENT_ID=? and IDENTIFIER=?
 One-shot delete: update CATISSUE_AUDIT_EVENT_LOG set AUDIT_EVENT_ID=null where AUDIT_EVENT_ID=?
instantiating cache region: test.User.orderCollection usage strategy: read-write
Static SQL for collection: test.User.orderCollection
 Row insert: update test_order set user_id=? where IDENTIFIER=?
 Row delete: update test_order set user_id=null where user_id=? and IDENTIFIER=?
 One-shot delete: update test_order set user_id=null where user_id=?
Static SQL for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
 Row insert: update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
 Row delete: update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=null where AUDIT_EVENT_LOG_ID=? and IDENTIFIER=?
 One-shot delete: update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=null where AUDIT_EVENT_LOG_ID=?
Static SQL for collection: edu.wustl.common.domain.AuditEventLog.auditEventDetailsCollection
 Row insert: update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
 Row delete: update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=null where AUDIT_EVENT_LOG_ID=? and IDENTIFIER=?
 One-shot delete: update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=null where AUDIT_EVENT_LOG_ID=?
Static SQL for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
 Row insert: update CATISSUE_DATA_AUDIT_EVENT_LOG set PARENT_LOG_ID=? where IDENTIFIER=?
 Row delete: update CATISSUE_DATA_AUDIT_EVENT_LOG set PARENT_LOG_ID=null where PARENT_LOG_ID=? and IDENTIFIER=?
 One-shot delete: update CATISSUE_DATA_AUDIT_EVENT_LOG set PARENT_LOG_ID=null where PARENT_LOG_ID=?
instantiating cache region: test.Person.orderCollection usage strategy: read-write
Static SQL for collection: test.Person.orderCollection
 Row insert: update test_order set person_id=? where IDENTIFIER=?
 Row delete: update test_order set person_id=null where person_id=? and IDENTIFIER=?
 One-shot delete: update test_order set person_id=null where person_id=?
Static select for entity edu.wustl.common.domain.AuditEventDetails: select auditevent0_.IDENTIFIER as IDENTIFIER24_2_, auditevent0_.ELEMENT_NAME as ELEMENT2_24_2_, auditevent0_.PREVIOUS_VALUE as PREVIOUS3_24_2_, auditevent0_.CURRENT_VALUE as CURRENT4_24_2_, auditevent0_.AUDIT_EVENT_LOG_ID as AUDIT5_24_2_, auditdatae1_.IDENTIFIER as IDENTIFIER25_0_, auditdatae1_1_.AUDIT_EVENT_ID as AUDIT5_25_0_, auditdatae1_.OBJECT_IDENTIFIER as OBJECT2_26_0_, auditdatae1_.OBJECT_NAME as OBJECT3_26_0_, auditevent2_.IDENTIFIER as IDENTIFIER23_1_, auditevent2_.EVENT_TIMESTAMP as EVENT2_23_1_, auditevent2_.USER_ID as USER3_23_1_, auditevent2_.EVENT_TYPE as EVENT4_23_1_, auditevent2_.COMMENTS as COMMENTS23_1_, auditevent2_.IP_ADDRESS as IP6_23_1_ from CATISSUE_AUDIT_EVENT_DETAILS auditevent0_ left outer join CATISSUE_DATA_AUDIT_EVENT_LOG auditdatae1_ on auditevent0_.AUDIT_EVENT_LOG_ID=auditdatae1_.IDENTIFIER left outer join CATISSUE_AUDIT_EVENT_LOG auditdatae1_1_ on auditdatae1_.IDENTIFIER=auditdatae1_1_.IDENTIFIER left outer join CATISSUE_AUDIT_EVENT auditevent2_ on auditdatae1_1_.AUDIT_EVENT_ID=auditevent2_.IDENTIFIER where auditevent0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.AuditEventDetails: select auditevent0_.IDENTIFIER as IDENTIFIER24_2_, auditevent0_.ELEMENT_NAME as ELEMENT2_24_2_, auditevent0_.PREVIOUS_VALUE as PREVIOUS3_24_2_, auditevent0_.CURRENT_VALUE as CURRENT4_24_2_, auditevent0_.AUDIT_EVENT_LOG_ID as AUDIT5_24_2_, auditdatae1_.IDENTIFIER as IDENTIFIER25_0_, auditdatae1_1_.AUDIT_EVENT_ID as AUDIT5_25_0_, auditdatae1_.OBJECT_IDENTIFIER as OBJECT2_26_0_, auditdatae1_.OBJECT_NAME as OBJECT3_26_0_, auditevent2_.IDENTIFIER as IDENTIFIER23_1_, auditevent2_.EVENT_TIMESTAMP as EVENT2_23_1_, auditevent2_.USER_ID as USER3_23_1_, auditevent2_.EVENT_TYPE as EVENT4_23_1_, auditevent2_.COMMENTS as COMMENTS23_1_, auditevent2_.IP_ADDRESS as IP6_23_1_ from CATISSUE_AUDIT_EVENT_DETAILS auditevent0_ left outer join CATISSUE_DATA_AUDIT_EVENT_LOG auditdatae1_ on auditevent0_.AUDIT_EVENT_LOG_ID=auditdatae1_.IDENTIFIER left outer join CATISSUE_AUDIT_EVENT_LOG auditdatae1_1_ on auditdatae1_.IDENTIFIER=auditdatae1_1_.IDENTIFIER left outer join CATISSUE_AUDIT_EVENT auditevent2_ on auditdatae1_1_.AUDIT_EVENT_ID=auditevent2_.IDENTIFIER where auditevent0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.AuditEventDetails: select auditevent0_.IDENTIFIER as IDENTIFIER24_0_, auditevent0_.ELEMENT_NAME as ELEMENT2_24_0_, auditevent0_.PREVIOUS_VALUE as PREVIOUS3_24_0_, auditevent0_.CURRENT_VALUE as CURRENT4_24_0_, auditevent0_.AUDIT_EVENT_LOG_ID as AUDIT5_24_0_ from CATISSUE_AUDIT_EVENT_DETAILS auditevent0_ where auditevent0_.IDENTIFIER=? for update
Static select for entity edu.wustl.common.domain.AuditEventDetails: select auditevent0_.IDENTIFIER as IDENTIFIER24_0_, auditevent0_.ELEMENT_NAME as ELEMENT2_24_0_, auditevent0_.PREVIOUS_VALUE as PREVIOUS3_24_0_, auditevent0_.CURRENT_VALUE as CURRENT4_24_0_, auditevent0_.AUDIT_EVENT_LOG_ID as AUDIT5_24_0_ from CATISSUE_AUDIT_EVENT_DETAILS auditevent0_ where auditevent0_.IDENTIFIER=? for update nowait
Static select for action ACTION_MERGE on entity edu.wustl.common.domain.AuditEventDetails: select auditevent0_.IDENTIFIER as IDENTIFIER24_0_, auditevent0_.ELEMENT_NAME as ELEMENT2_24_0_, auditevent0_.PREVIOUS_VALUE as PREVIOUS3_24_0_, auditevent0_.CURRENT_VALUE as CURRENT4_24_0_, auditevent0_.AUDIT_EVENT_LOG_ID as AUDIT5_24_0_ from CATISSUE_AUDIT_EVENT_DETAILS auditevent0_ where auditevent0_.IDENTIFIER=?
Static select for action ACTION_REFRESH on entity edu.wustl.common.domain.AuditEventDetails: select auditevent0_.IDENTIFIER as IDENTIFIER24_0_, auditevent0_.ELEMENT_NAME as ELEMENT2_24_0_, auditevent0_.PREVIOUS_VALUE as PREVIOUS3_24_0_, auditevent0_.CURRENT_VALUE as CURRENT4_24_0_, auditevent0_.AUDIT_EVENT_LOG_ID as AUDIT5_24_0_ from CATISSUE_AUDIT_EVENT_DETAILS auditevent0_ where auditevent0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.AbstractAuditEventLog: select abstractau0_.IDENTIFIER as IDENTIFIER25_1_, abstractau0_.AUDIT_EVENT_ID as AUDIT5_25_1_, abstractau0_1_.OBJECT_IDENTIFIER as OBJECT2_26_1_, abstractau0_1_.OBJECT_NAME as OBJECT3_26_1_, case when abstractau0_1_.IDENTIFIER is not null then 1 when abstractau0_.IDENTIFIER is not null then 0 end as clazz_1_, auditevent1_.IDENTIFIER as IDENTIFIER23_0_, auditevent1_.EVENT_TIMESTAMP as EVENT2_23_0_, auditevent1_.USER_ID as USER3_23_0_, auditevent1_.EVENT_TYPE as EVENT4_23_0_, auditevent1_.COMMENTS as COMMENTS23_0_, auditevent1_.IP_ADDRESS as IP6_23_0_ from CATISSUE_AUDIT_EVENT_LOG abstractau0_ left outer join CATISSUE_DATA_AUDIT_EVENT_LOG abstractau0_1_ on abstractau0_.IDENTIFIER=abstractau0_1_.IDENTIFIER left outer join CATISSUE_AUDIT_EVENT auditevent1_ on abstractau0_.AUDIT_EVENT_ID=auditevent1_.IDENTIFIER where abstractau0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.AbstractAuditEventLog: select abstractau0_.IDENTIFIER as IDENTIFIER25_1_, abstractau0_.AUDIT_EVENT_ID as AUDIT5_25_1_, abstractau0_1_.OBJECT_IDENTIFIER as OBJECT2_26_1_, abstractau0_1_.OBJECT_NAME as OBJECT3_26_1_, case when abstractau0_1_.IDENTIFIER is not null then 1 when abstractau0_.IDENTIFIER is not null then 0 end as clazz_1_, auditevent1_.IDENTIFIER as IDENTIFIER23_0_, auditevent1_.EVENT_TIMESTAMP as EVENT2_23_0_, auditevent1_.USER_ID as USER3_23_0_, auditevent1_.EVENT_TYPE as EVENT4_23_0_, auditevent1_.COMMENTS as COMMENTS23_0_, auditevent1_.IP_ADDRESS as IP6_23_0_ from CATISSUE_AUDIT_EVENT_LOG abstractau0_ left outer join CATISSUE_DATA_AUDIT_EVENT_LOG abstractau0_1_ on abstractau0_.IDENTIFIER=abstractau0_1_.IDENTIFIER left outer join CATISSUE_AUDIT_EVENT auditevent1_ on abstractau0_.AUDIT_EVENT_ID=auditevent1_.IDENTIFIER where abstractau0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.AbstractAuditEventLog: select abstractau0_.IDENTIFIER as IDENTIFIER25_0_, abstractau0_.AUDIT_EVENT_ID as AUDIT5_25_0_, abstractau0_1_.OBJECT_IDENTIFIER as OBJECT2_26_0_, abstractau0_1_.OBJECT_NAME as OBJECT3_26_0_, case when abstractau0_1_.IDENTIFIER is not null then 1 when abstractau0_.IDENTIFIER is not null then 0 end as clazz_0_ from CATISSUE_AUDIT_EVENT_LOG abstractau0_ left outer join CATISSUE_DATA_AUDIT_EVENT_LOG abstractau0_1_ on abstractau0_.IDENTIFIER=abstractau0_1_.IDENTIFIER where abstractau0_.IDENTIFIER=? for update
Static select for entity edu.wustl.common.domain.AbstractAuditEventLog: select abstractau0_.IDENTIFIER as IDENTIFIER25_0_, abstractau0_.AUDIT_EVENT_ID as AUDIT5_25_0_, abstractau0_1_.OBJECT_IDENTIFIER as OBJECT2_26_0_, abstractau0_1_.OBJECT_NAME as OBJECT3_26_0_, case when abstractau0_1_.IDENTIFIER is not null then 1 when abstractau0_.IDENTIFIER is not null then 0 end as clazz_0_ from CATISSUE_AUDIT_EVENT_LOG abstractau0_ left outer join CATISSUE_DATA_AUDIT_EVENT_LOG abstractau0_1_ on abstractau0_.IDENTIFIER=abstractau0_1_.IDENTIFIER where abstractau0_.IDENTIFIER=? for update nowait
Static select for action ACTION_MERGE on entity edu.wustl.common.domain.AbstractAuditEventLog: select abstractau0_.IDENTIFIER as IDENTIFIER25_2_, abstractau0_.AUDIT_EVENT_ID as AUDIT5_25_2_, abstractau0_1_.OBJECT_IDENTIFIER as OBJECT2_26_2_, abstractau0_1_.OBJECT_NAME as OBJECT3_26_2_, case when abstractau0_1_.IDENTIFIER is not null then 1 when abstractau0_.IDENTIFIER is not null then 0 end as clazz_2_, auditdatae1_.PARENT_LOG_ID as PARENT4_4_, auditdatae1_.IDENTIFIER as IDENTIFIER4_, auditdatae1_.IDENTIFIER as IDENTIFIER25_0_, auditdatae1_1_.AUDIT_EVENT_ID as AUDIT5_25_0_, auditdatae1_.OBJECT_IDENTIFIER as OBJECT2_26_0_, auditdatae1_.OBJECT_NAME as OBJECT3_26_0_, auditevent2_.AUDIT_EVENT_LOG_ID as AUDIT5_5_, auditevent2_.IDENTIFIER as IDENTIFIER5_, auditevent2_.IDENTIFIER as IDENTIFIER24_1_, auditevent2_.ELEMENT_NAME as ELEMENT2_24_1_, auditevent2_.PREVIOUS_VALUE as PREVIOUS3_24_1_, auditevent2_.CURRENT_VALUE as CURRENT4_24_1_, auditevent2_.AUDIT_EVENT_LOG_ID as AUDIT5_24_1_ from CATISSUE_AUDIT_EVENT_LOG abstractau0_ left outer join CATISSUE_DATA_AUDIT_EVENT_LOG abstractau0_1_ on abstractau0_.IDENTIFIER=abstractau0_1_.IDENTIFIER left outer join CATISSUE_DATA_AUDIT_EVENT_LOG auditdatae1_ on abstractau0_.IDENTIFIER=auditdatae1_.PARENT_LOG_ID left outer join CATISSUE_AUDIT_EVENT_LOG auditdatae1_1_ on auditdatae1_.IDENTIFIER=auditdatae1_1_.IDENTIFIER left outer join CATISSUE_AUDIT_EVENT_DETAILS auditevent2_ on auditdatae1_.IDENTIFIER=auditevent2_.AUDIT_EVENT_LOG_ID where abstractau0_.IDENTIFIER=?
Static select for action ACTION_REFRESH on entity edu.wustl.common.domain.AbstractAuditEventLog: select abstractau0_.IDENTIFIER as IDENTIFIER25_2_, abstractau0_.AUDIT_EVENT_ID as AUDIT5_25_2_, abstractau0_1_.OBJECT_IDENTIFIER as OBJECT2_26_2_, abstractau0_1_.OBJECT_NAME as OBJECT3_26_2_, case when abstractau0_1_.IDENTIFIER is not null then 1 when abstractau0_.IDENTIFIER is not null then 0 end as clazz_2_, auditdatae1_.PARENT_LOG_ID as PARENT4_4_, auditdatae1_.IDENTIFIER as IDENTIFIER4_, auditdatae1_.IDENTIFIER as IDENTIFIER25_0_, auditdatae1_1_.AUDIT_EVENT_ID as AUDIT5_25_0_, auditdatae1_.OBJECT_IDENTIFIER as OBJECT2_26_0_, auditdatae1_.OBJECT_NAME as OBJECT3_26_0_, auditevent2_.AUDIT_EVENT_LOG_ID as AUDIT5_5_, auditevent2_.IDENTIFIER as IDENTIFIER5_, auditevent2_.IDENTIFIER as IDENTIFIER24_1_, auditevent2_.ELEMENT_NAME as ELEMENT2_24_1_, auditevent2_.PREVIOUS_VALUE as PREVIOUS3_24_1_, auditevent2_.CURRENT_VALUE as CURRENT4_24_1_, auditevent2_.AUDIT_EVENT_LOG_ID as AUDIT5_24_1_ from CATISSUE_AUDIT_EVENT_LOG abstractau0_ left outer join CATISSUE_DATA_AUDIT_EVENT_LOG abstractau0_1_ on abstractau0_.IDENTIFIER=abstractau0_1_.IDENTIFIER left outer join CATISSUE_DATA_AUDIT_EVENT_LOG auditdatae1_ on abstractau0_.IDENTIFIER=auditdatae1_.PARENT_LOG_ID left outer join CATISSUE_AUDIT_EVENT_LOG auditdatae1_1_ on auditdatae1_.IDENTIFIER=auditdatae1_1_.IDENTIFIER left outer join CATISSUE_AUDIT_EVENT_DETAILS auditevent2_ on auditdatae1_.IDENTIFIER=auditevent2_.AUDIT_EVENT_LOG_ID where abstractau0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.AuditEvent: select auditevent0_.IDENTIFIER as IDENTIFIER23_0_, auditevent0_.EVENT_TIMESTAMP as EVENT2_23_0_, auditevent0_.USER_ID as USER3_23_0_, auditevent0_.EVENT_TYPE as EVENT4_23_0_, auditevent0_.COMMENTS as COMMENTS23_0_, auditevent0_.IP_ADDRESS as IP6_23_0_ from CATISSUE_AUDIT_EVENT auditevent0_ where auditevent0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.AuditEvent: select auditevent0_.IDENTIFIER as IDENTIFIER23_0_, auditevent0_.EVENT_TIMESTAMP as EVENT2_23_0_, auditevent0_.USER_ID as USER3_23_0_, auditevent0_.EVENT_TYPE as EVENT4_23_0_, auditevent0_.COMMENTS as COMMENTS23_0_, auditevent0_.IP_ADDRESS as IP6_23_0_ from CATISSUE_AUDIT_EVENT auditevent0_ where auditevent0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.AuditEvent: select auditevent0_.IDENTIFIER as IDENTIFIER23_0_, auditevent0_.EVENT_TIMESTAMP as EVENT2_23_0_, auditevent0_.USER_ID as USER3_23_0_, auditevent0_.EVENT_TYPE as EVENT4_23_0_, auditevent0_.COMMENTS as COMMENTS23_0_, auditevent0_.IP_ADDRESS as IP6_23_0_ from CATISSUE_AUDIT_EVENT auditevent0_ where auditevent0_.IDENTIFIER=? for update
Static select for entity edu.wustl.common.domain.AuditEvent: select auditevent0_.IDENTIFIER as IDENTIFIER23_0_, auditevent0_.EVENT_TIMESTAMP as EVENT2_23_0_, auditevent0_.USER_ID as USER3_23_0_, auditevent0_.EVENT_TYPE as EVENT4_23_0_, auditevent0_.COMMENTS as COMMENTS23_0_, auditevent0_.IP_ADDRESS as IP6_23_0_ from CATISSUE_AUDIT_EVENT auditevent0_ where auditevent0_.IDENTIFIER=? for update nowait
Static select for action ACTION_MERGE on entity edu.wustl.common.domain.AuditEvent: select auditevent0_.IDENTIFIER as IDENTIFIER23_0_, auditevent0_.EVENT_TIMESTAMP as EVENT2_23_0_, auditevent0_.USER_ID as USER3_23_0_, auditevent0_.EVENT_TYPE as EVENT4_23_0_, auditevent0_.COMMENTS as COMMENTS23_0_, auditevent0_.IP_ADDRESS as IP6_23_0_ from CATISSUE_AUDIT_EVENT auditevent0_ where auditevent0_.IDENTIFIER=?
Static select for action ACTION_REFRESH on entity edu.wustl.common.domain.AuditEvent: select auditevent0_.IDENTIFIER as IDENTIFIER23_0_, auditevent0_.EVENT_TIMESTAMP as EVENT2_23_0_, auditevent0_.USER_ID as USER3_23_0_, auditevent0_.EVENT_TYPE as EVENT4_23_0_, auditevent0_.COMMENTS as COMMENTS23_0_, auditevent0_.IP_ADDRESS as IP6_23_0_ from CATISSUE_AUDIT_EVENT auditevent0_ where auditevent0_.IDENTIFIER=?
Static select for entity test.Address: select address0_.IDENTIFIER as IDENTIFIER21_0_, address0_.STREET as STREET21_0_ from test_address address0_ where address0_.IDENTIFIER=?
Static select for entity test.Address: select address0_.IDENTIFIER as IDENTIFIER21_0_, address0_.STREET as STREET21_0_ from test_address address0_ where address0_.IDENTIFIER=?
Static select for entity test.Address: select address0_.IDENTIFIER as IDENTIFIER21_0_, address0_.STREET as STREET21_0_ from test_address address0_ where address0_.IDENTIFIER=? for update
Static select for entity test.Address: select address0_.IDENTIFIER as IDENTIFIER21_0_, address0_.STREET as STREET21_0_ from test_address address0_ where address0_.IDENTIFIER=? for update nowait
Static select for action ACTION_MERGE on entity test.Address: select address0_.IDENTIFIER as IDENTIFIER21_0_, address0_.STREET as STREET21_0_ from test_address address0_ where address0_.IDENTIFIER=?
Static select for action ACTION_REFRESH on entity test.Address: select address0_.IDENTIFIER as IDENTIFIER21_0_, address0_.STREET as STREET21_0_ from test_address address0_ where address0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.AuditEventLog: select auditevent0_.IDENTIFIER as IDENTIFIER25_1_, auditevent0_.OBJECT_IDENTIFIER as OBJECT2_25_1_, auditevent0_.OBJECT_NAME as OBJECT3_25_1_, auditevent0_.EVENT_TYPE as EVENT4_25_1_, auditevent0_.AUDIT_EVENT_ID as AUDIT5_25_1_, auditevent1_.IDENTIFIER as IDENTIFIER23_0_, auditevent1_.EVENT_TIMESTAMP as EVENT2_23_0_, auditevent1_.USER_ID as USER3_23_0_, auditevent1_.EVENT_TYPE as EVENT4_23_0_, auditevent1_.COMMENTS as COMMENTS23_0_, auditevent1_.IP_ADDRESS as IP6_23_0_ from CATISSUE_AUDIT_EVENT_LOG auditevent0_ left outer join CATISSUE_AUDIT_EVENT auditevent1_ on auditevent0_.AUDIT_EVENT_ID=auditevent1_.IDENTIFIER where auditevent0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.AuditEventLog: select auditevent0_.IDENTIFIER as IDENTIFIER25_1_, auditevent0_.OBJECT_IDENTIFIER as OBJECT2_25_1_, auditevent0_.OBJECT_NAME as OBJECT3_25_1_, auditevent0_.EVENT_TYPE as EVENT4_25_1_, auditevent0_.AUDIT_EVENT_ID as AUDIT5_25_1_, auditevent1_.IDENTIFIER as IDENTIFIER23_0_, auditevent1_.EVENT_TIMESTAMP as EVENT2_23_0_, auditevent1_.USER_ID as USER3_23_0_, auditevent1_.EVENT_TYPE as EVENT4_23_0_, auditevent1_.COMMENTS as COMMENTS23_0_, auditevent1_.IP_ADDRESS as IP6_23_0_ from CATISSUE_AUDIT_EVENT_LOG auditevent0_ left outer join CATISSUE_AUDIT_EVENT auditevent1_ on auditevent0_.AUDIT_EVENT_ID=auditevent1_.IDENTIFIER where auditevent0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.AuditEventLog: select auditevent0_.IDENTIFIER as IDENTIFIER25_0_, auditevent0_.OBJECT_IDENTIFIER as OBJECT2_25_0_, auditevent0_.OBJECT_NAME as OBJECT3_25_0_, auditevent0_.EVENT_TYPE as EVENT4_25_0_, auditevent0_.AUDIT_EVENT_ID as AUDIT5_25_0_ from CATISSUE_AUDIT_EVENT_LOG auditevent0_ where auditevent0_.IDENTIFIER=? for update
Static select for entity edu.wustl.common.domain.AuditEventLog: select auditevent0_.IDENTIFIER as IDENTIFIER25_0_, auditevent0_.OBJECT_IDENTIFIER as OBJECT2_25_0_, auditevent0_.OBJECT_NAME as OBJECT3_25_0_, auditevent0_.EVENT_TYPE as EVENT4_25_0_, auditevent0_.AUDIT_EVENT_ID as AUDIT5_25_0_ from CATISSUE_AUDIT_EVENT_LOG auditevent0_ where auditevent0_.IDENTIFIER=? for update nowait
Static select for action ACTION_MERGE on entity edu.wustl.common.domain.AuditEventLog: select auditevent0_.IDENTIFIER as IDENTIFIER25_0_, auditevent0_.OBJECT_IDENTIFIER as OBJECT2_25_0_, auditevent0_.OBJECT_NAME as OBJECT3_25_0_, auditevent0_.EVENT_TYPE as EVENT4_25_0_, auditevent0_.AUDIT_EVENT_ID as AUDIT5_25_0_ from CATISSUE_AUDIT_EVENT_LOG auditevent0_ where auditevent0_.IDENTIFIER=?
Static select for action ACTION_REFRESH on entity edu.wustl.common.domain.AuditEventLog: select auditevent0_.IDENTIFIER as IDENTIFIER25_0_, auditevent0_.OBJECT_IDENTIFIER as OBJECT2_25_0_, auditevent0_.OBJECT_NAME as OBJECT3_25_0_, auditevent0_.EVENT_TYPE as EVENT4_25_0_, auditevent0_.AUDIT_EVENT_ID as AUDIT5_25_0_ from CATISSUE_AUDIT_EVENT_LOG auditevent0_ where auditevent0_.IDENTIFIER=?
Static select for entity test.Person: select person0_.IDENTIFIER as IDENTIFIER20_0_, person0_.NAME as NAME20_0_, person0_.ADDRESS_ID as ADDRESS3_20_0_ from test_person person0_ where person0_.IDENTIFIER=?
Static select for entity test.Person: select person0_.IDENTIFIER as IDENTIFIER20_0_, person0_.NAME as NAME20_0_, person0_.ADDRESS_ID as ADDRESS3_20_0_ from test_person person0_ where person0_.IDENTIFIER=?
Static select for entity test.Person: select person0_.IDENTIFIER as IDENTIFIER20_0_, person0_.NAME as NAME20_0_, person0_.ADDRESS_ID as ADDRESS3_20_0_ from test_person person0_ where person0_.IDENTIFIER=? for update
Static select for entity test.Person: select person0_.IDENTIFIER as IDENTIFIER20_0_, person0_.NAME as NAME20_0_, person0_.ADDRESS_ID as ADDRESS3_20_0_ from test_person person0_ where person0_.IDENTIFIER=? for update nowait
Static select for action ACTION_MERGE on entity test.Person: select person0_.IDENTIFIER as IDENTIFIER20_1_, person0_.NAME as NAME20_1_, person0_.ADDRESS_ID as ADDRESS3_20_1_, ordercolle1_.person_id as person2_3_, ordercolle1_.IDENTIFIER as IDENTIFIER3_, ordercolle1_.IDENTIFIER as IDENTIFIER22_0_, ordercolle1_.person_id as person2_22_0_, ordercolle1_.user_id as user3_22_0_ from test_person person0_ left outer join test_order ordercolle1_ on person0_.IDENTIFIER=ordercolle1_.person_id where person0_.IDENTIFIER=?
Static select for action ACTION_REFRESH on entity test.Person: select person0_.IDENTIFIER as IDENTIFIER20_1_, person0_.NAME as NAME20_1_, person0_.ADDRESS_ID as ADDRESS3_20_1_, ordercolle1_.person_id as person2_3_, ordercolle1_.IDENTIFIER as IDENTIFIER3_, ordercolle1_.IDENTIFIER as IDENTIFIER22_0_, ordercolle1_.person_id as person2_22_0_, ordercolle1_.user_id as user3_22_0_ from test_person person0_ left outer join test_order ordercolle1_ on person0_.IDENTIFIER=ordercolle1_.person_id where person0_.IDENTIFIER=?
Static select for entity test.Order: select order0_.IDENTIFIER as IDENTIFIER22_1_, order0_.person_id as person2_22_1_, order0_.user_id as user3_22_1_, person1_.IDENTIFIER as IDENTIFIER20_0_, person1_.NAME as NAME20_0_, person1_.ADDRESS_ID as ADDRESS3_20_0_ from test_order order0_ left outer join test_person person1_ on order0_.person_id=person1_.IDENTIFIER where order0_.IDENTIFIER=?
Static select for entity test.Order: select order0_.IDENTIFIER as IDENTIFIER22_1_, order0_.person_id as person2_22_1_, order0_.user_id as user3_22_1_, person1_.IDENTIFIER as IDENTIFIER20_0_, person1_.NAME as NAME20_0_, person1_.ADDRESS_ID as ADDRESS3_20_0_ from test_order order0_ left outer join test_person person1_ on order0_.person_id=person1_.IDENTIFIER where order0_.IDENTIFIER=?
Static select for entity test.Order: select order0_.IDENTIFIER as IDENTIFIER22_0_, order0_.person_id as person2_22_0_, order0_.user_id as user3_22_0_ from test_order order0_ where order0_.IDENTIFIER=? for update
Static select for entity test.Order: select order0_.IDENTIFIER as IDENTIFIER22_0_, order0_.person_id as person2_22_0_, order0_.user_id as user3_22_0_ from test_order order0_ where order0_.IDENTIFIER=? for update nowait
Static select for action ACTION_MERGE on entity test.Order: select order0_.IDENTIFIER as IDENTIFIER22_0_, order0_.person_id as person2_22_0_, order0_.user_id as user3_22_0_ from test_order order0_ where order0_.IDENTIFIER=?
Static select for action ACTION_REFRESH on entity test.Order: select order0_.IDENTIFIER as IDENTIFIER22_0_, order0_.person_id as person2_22_0_, order0_.user_id as user3_22_0_ from test_order order0_ where order0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.LoginEvent: select loginevent0_.IDENTIFIER as IDENTIFIER27_0_, loginevent0_.LOGIN_TIMESTAMP as LOGIN2_27_0_, loginevent0_.LOGIN_SOURCE_ID as LOGIN3_27_0_, loginevent0_.USER_LOGIN_ID as USER4_27_0_, loginevent0_.LOGIN_IP_ADDRESS as LOGIN5_27_0_, loginevent0_.IS_LOGIN_SUCCESSFUL as IS6_27_0_ from CATISSUE_LOGIN_AUDIT_EVENT_LOG loginevent0_ where loginevent0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.LoginEvent: select loginevent0_.IDENTIFIER as IDENTIFIER27_0_, loginevent0_.LOGIN_TIMESTAMP as LOGIN2_27_0_, loginevent0_.LOGIN_SOURCE_ID as LOGIN3_27_0_, loginevent0_.USER_LOGIN_ID as USER4_27_0_, loginevent0_.LOGIN_IP_ADDRESS as LOGIN5_27_0_, loginevent0_.IS_LOGIN_SUCCESSFUL as IS6_27_0_ from CATISSUE_LOGIN_AUDIT_EVENT_LOG loginevent0_ where loginevent0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.LoginEvent: select loginevent0_.IDENTIFIER as IDENTIFIER27_0_, loginevent0_.LOGIN_TIMESTAMP as LOGIN2_27_0_, loginevent0_.LOGIN_SOURCE_ID as LOGIN3_27_0_, loginevent0_.USER_LOGIN_ID as USER4_27_0_, loginevent0_.LOGIN_IP_ADDRESS as LOGIN5_27_0_, loginevent0_.IS_LOGIN_SUCCESSFUL as IS6_27_0_ from CATISSUE_LOGIN_AUDIT_EVENT_LOG loginevent0_ where loginevent0_.IDENTIFIER=? for update
Static select for entity edu.wustl.common.domain.LoginEvent: select loginevent0_.IDENTIFIER as IDENTIFIER27_0_, loginevent0_.LOGIN_TIMESTAMP as LOGIN2_27_0_, loginevent0_.LOGIN_SOURCE_ID as LOGIN3_27_0_, loginevent0_.USER_LOGIN_ID as USER4_27_0_, loginevent0_.LOGIN_IP_ADDRESS as LOGIN5_27_0_, loginevent0_.IS_LOGIN_SUCCESSFUL as IS6_27_0_ from CATISSUE_LOGIN_AUDIT_EVENT_LOG loginevent0_ where loginevent0_.IDENTIFIER=? for update nowait
Static select for action ACTION_MERGE on entity edu.wustl.common.domain.LoginEvent: select loginevent0_.IDENTIFIER as IDENTIFIER27_0_, loginevent0_.LOGIN_TIMESTAMP as LOGIN2_27_0_, loginevent0_.LOGIN_SOURCE_ID as LOGIN3_27_0_, loginevent0_.USER_LOGIN_ID as USER4_27_0_, loginevent0_.LOGIN_IP_ADDRESS as LOGIN5_27_0_, loginevent0_.IS_LOGIN_SUCCESSFUL as IS6_27_0_ from CATISSUE_LOGIN_AUDIT_EVENT_LOG loginevent0_ where loginevent0_.IDENTIFIER=?
Static select for action ACTION_REFRESH on entity edu.wustl.common.domain.LoginEvent: select loginevent0_.IDENTIFIER as IDENTIFIER27_0_, loginevent0_.LOGIN_TIMESTAMP as LOGIN2_27_0_, loginevent0_.LOGIN_SOURCE_ID as LOGIN3_27_0_, loginevent0_.USER_LOGIN_ID as USER4_27_0_, loginevent0_.LOGIN_IP_ADDRESS as LOGIN5_27_0_, loginevent0_.IS_LOGIN_SUCCESSFUL as IS6_27_0_ from CATISSUE_LOGIN_AUDIT_EVENT_LOG loginevent0_ where loginevent0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.AuditDataEventLog: select auditdatae0_.IDENTIFIER as IDENTIFIER25_1_, auditdatae0_1_.AUDIT_EVENT_ID as AUDIT5_25_1_, auditdatae0_.OBJECT_IDENTIFIER as OBJECT2_26_1_, auditdatae0_.OBJECT_NAME as OBJECT3_26_1_, auditevent1_.IDENTIFIER as IDENTIFIER23_0_, auditevent1_.EVENT_TIMESTAMP as EVENT2_23_0_, auditevent1_.USER_ID as USER3_23_0_, auditevent1_.EVENT_TYPE as EVENT4_23_0_, auditevent1_.COMMENTS as COMMENTS23_0_, auditevent1_.IP_ADDRESS as IP6_23_0_ from CATISSUE_DATA_AUDIT_EVENT_LOG auditdatae0_ inner join CATISSUE_AUDIT_EVENT_LOG auditdatae0_1_ on auditdatae0_.IDENTIFIER=auditdatae0_1_.IDENTIFIER left outer join CATISSUE_AUDIT_EVENT auditevent1_ on auditdatae0_1_.AUDIT_EVENT_ID=auditevent1_.IDENTIFIER where auditdatae0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.AuditDataEventLog: select auditdatae0_.IDENTIFIER as IDENTIFIER25_1_, auditdatae0_1_.AUDIT_EVENT_ID as AUDIT5_25_1_, auditdatae0_.OBJECT_IDENTIFIER as OBJECT2_26_1_, auditdatae0_.OBJECT_NAME as OBJECT3_26_1_, auditevent1_.IDENTIFIER as IDENTIFIER23_0_, auditevent1_.EVENT_TIMESTAMP as EVENT2_23_0_, auditevent1_.USER_ID as USER3_23_0_, auditevent1_.EVENT_TYPE as EVENT4_23_0_, auditevent1_.COMMENTS as COMMENTS23_0_, auditevent1_.IP_ADDRESS as IP6_23_0_ from CATISSUE_DATA_AUDIT_EVENT_LOG auditdatae0_ inner join CATISSUE_AUDIT_EVENT_LOG auditdatae0_1_ on auditdatae0_.IDENTIFIER=auditdatae0_1_.IDENTIFIER left outer join CATISSUE_AUDIT_EVENT auditevent1_ on auditdatae0_1_.AUDIT_EVENT_ID=auditevent1_.IDENTIFIER where auditdatae0_.IDENTIFIER=?
Static select for entity edu.wustl.common.domain.AuditDataEventLog: select auditdatae0_.IDENTIFIER as IDENTIFIER25_0_, auditdatae0_1_.AUDIT_EVENT_ID as AUDIT5_25_0_, auditdatae0_.OBJECT_IDENTIFIER as OBJECT2_26_0_, auditdatae0_.OBJECT_NAME as OBJECT3_26_0_ from CATISSUE_DATA_AUDIT_EVENT_LOG auditdatae0_ inner join CATISSUE_AUDIT_EVENT_LOG auditdatae0_1_ on auditdatae0_.IDENTIFIER=auditdatae0_1_.IDENTIFIER where auditdatae0_.IDENTIFIER=? for update
Static select for entity edu.wustl.common.domain.AuditDataEventLog: select auditdatae0_.IDENTIFIER as IDENTIFIER25_0_, auditdatae0_1_.AUDIT_EVENT_ID as AUDIT5_25_0_, auditdatae0_.OBJECT_IDENTIFIER as OBJECT2_26_0_, auditdatae0_.OBJECT_NAME as OBJECT3_26_0_ from CATISSUE_DATA_AUDIT_EVENT_LOG auditdatae0_ inner join CATISSUE_AUDIT_EVENT_LOG auditdatae0_1_ on auditdatae0_.IDENTIFIER=auditdatae0_1_.IDENTIFIER where auditdatae0_.IDENTIFIER=? for update nowait
Static select for action ACTION_MERGE on entity edu.wustl.common.domain.AuditDataEventLog: select auditdatae0_.IDENTIFIER as IDENTIFIER25_2_, auditdatae0_1_.AUDIT_EVENT_ID as AUDIT5_25_2_, auditdatae0_.OBJECT_IDENTIFIER as OBJECT2_26_2_, auditdatae0_.OBJECT_NAME as OBJECT3_26_2_, auditdatae1_.PARENT_LOG_ID as PARENT4_4_, auditdatae1_.IDENTIFIER as IDENTIFIER4_, auditdatae1_.IDENTIFIER as IDENTIFIER25_0_, auditdatae1_1_.AUDIT_EVENT_ID as AUDIT5_25_0_, auditdatae1_.OBJECT_IDENTIFIER as OBJECT2_26_0_, auditdatae1_.OBJECT_NAME as OBJECT3_26_0_, auditevent2_.AUDIT_EVENT_LOG_ID as AUDIT5_5_, auditevent2_.IDENTIFIER as IDENTIFIER5_, auditevent2_.IDENTIFIER as IDENTIFIER24_1_, auditevent2_.ELEMENT_NAME as ELEMENT2_24_1_, auditevent2_.PREVIOUS_VALUE as PREVIOUS3_24_1_, auditevent2_.CURRENT_VALUE as CURRENT4_24_1_, auditevent2_.AUDIT_EVENT_LOG_ID as AUDIT5_24_1_ from CATISSUE_DATA_AUDIT_EVENT_LOG auditdatae0_ inner join CATISSUE_AUDIT_EVENT_LOG auditdatae0_1_ on auditdatae0_.IDENTIFIER=auditdatae0_1_.IDENTIFIER left outer join CATISSUE_DATA_AUDIT_EVENT_LOG auditdatae1_ on auditdatae0_.IDENTIFIER=auditdatae1_.PARENT_LOG_ID left outer join CATISSUE_AUDIT_EVENT_LOG auditdatae1_1_ on auditdatae1_.IDENTIFIER=auditdatae1_1_.IDENTIFIER left outer join CATISSUE_AUDIT_EVENT_DETAILS auditevent2_ on auditdatae1_.IDENTIFIER=auditevent2_.AUDIT_EVENT_LOG_ID where auditdatae0_.IDENTIFIER=?
Static select for action ACTION_REFRESH on entity edu.wustl.common.domain.AuditDataEventLog: select auditdatae0_.IDENTIFIER as IDENTIFIER25_2_, auditdatae0_1_.AUDIT_EVENT_ID as AUDIT5_25_2_, auditdatae0_.OBJECT_IDENTIFIER as OBJECT2_26_2_, auditdatae0_.OBJECT_NAME as OBJECT3_26_2_, auditdatae1_.PARENT_LOG_ID as PARENT4_4_, auditdatae1_.IDENTIFIER as IDENTIFIER4_, auditdatae1_.IDENTIFIER as IDENTIFIER25_0_, auditdatae1_1_.AUDIT_EVENT_ID as AUDIT5_25_0_, auditdatae1_.OBJECT_IDENTIFIER as OBJECT2_26_0_, auditdatae1_.OBJECT_NAME as OBJECT3_26_0_, auditevent2_.AUDIT_EVENT_LOG_ID as AUDIT5_5_, auditevent2_.IDENTIFIER as IDENTIFIER5_, auditevent2_.IDENTIFIER as IDENTIFIER24_1_, auditevent2_.ELEMENT_NAME as ELEMENT2_24_1_, auditevent2_.PREVIOUS_VALUE as PREVIOUS3_24_1_, auditevent2_.CURRENT_VALUE as CURRENT4_24_1_, auditevent2_.AUDIT_EVENT_LOG_ID as AUDIT5_24_1_ from CATISSUE_DATA_AUDIT_EVENT_LOG auditdatae0_ inner join CATISSUE_AUDIT_EVENT_LOG auditdatae0_1_ on auditdatae0_.IDENTIFIER=auditdatae0_1_.IDENTIFIER left outer join CATISSUE_DATA_AUDIT_EVENT_LOG auditdatae1_ on auditdatae0_.IDENTIFIER=auditdatae1_.PARENT_LOG_ID left outer join CATISSUE_AUDIT_EVENT_LOG auditdatae1_1_ on auditdatae1_.IDENTIFIER=auditdatae1_1_.IDENTIFIER left outer join CATISSUE_AUDIT_EVENT_DETAILS auditevent2_ on auditdatae1_.IDENTIFIER=auditevent2_.AUDIT_EVENT_LOG_ID where auditdatae0_.IDENTIFIER=?
Static select for entity test.User: select user0_.IDENTIFIER as IDENTIFIER19_0_, user0_.EMAIL_ADDRESS as EMAIL2_19_0_, user0_.FIRST_NAME as FIRST3_19_0_, user0_.LAST_NAME as LAST4_19_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_19_0_ from test_user user0_ where user0_.IDENTIFIER=?
Static select for entity test.User: select user0_.IDENTIFIER as IDENTIFIER19_0_, user0_.EMAIL_ADDRESS as EMAIL2_19_0_, user0_.FIRST_NAME as FIRST3_19_0_, user0_.LAST_NAME as LAST4_19_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_19_0_ from test_user user0_ where user0_.IDENTIFIER=?
Static select for entity test.User: select user0_.IDENTIFIER as IDENTIFIER19_0_, user0_.EMAIL_ADDRESS as EMAIL2_19_0_, user0_.FIRST_NAME as FIRST3_19_0_, user0_.LAST_NAME as LAST4_19_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_19_0_ from test_user user0_ where user0_.IDENTIFIER=? for update
Static select for entity test.User: select user0_.IDENTIFIER as IDENTIFIER19_0_, user0_.EMAIL_ADDRESS as EMAIL2_19_0_, user0_.FIRST_NAME as FIRST3_19_0_, user0_.LAST_NAME as LAST4_19_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_19_0_ from test_user user0_ where user0_.IDENTIFIER=? for update nowait
Static select for action ACTION_MERGE on entity test.User: select user0_.IDENTIFIER as IDENTIFIER19_1_, user0_.EMAIL_ADDRESS as EMAIL2_19_1_, user0_.FIRST_NAME as FIRST3_19_1_, user0_.LAST_NAME as LAST4_19_1_, user0_.ACTIVITY_STATUS as ACTIVITY5_19_1_, ordercolle1_.user_id as user3_3_, ordercolle1_.IDENTIFIER as IDENTIFIER3_, ordercolle1_.IDENTIFIER as IDENTIFIER22_0_, ordercolle1_.person_id as person2_22_0_, ordercolle1_.user_id as user3_22_0_ from test_user user0_ left outer join test_order ordercolle1_ on user0_.IDENTIFIER=ordercolle1_.user_id where user0_.IDENTIFIER=?
Static select for action ACTION_REFRESH on entity test.User: select user0_.IDENTIFIER as IDENTIFIER19_1_, user0_.EMAIL_ADDRESS as EMAIL2_19_1_, user0_.FIRST_NAME as FIRST3_19_1_, user0_.LAST_NAME as LAST4_19_1_, user0_.ACTIVITY_STATUS as ACTIVITY5_19_1_, ordercolle1_.user_id as user3_3_, ordercolle1_.IDENTIFIER as IDENTIFIER3_, ordercolle1_.IDENTIFIER as IDENTIFIER22_0_, ordercolle1_.person_id as person2_22_0_, ordercolle1_.user_id as user3_22_0_ from test_user user0_ left outer join test_order ordercolle1_ on user0_.IDENTIFIER=ordercolle1_.user_id where user0_.IDENTIFIER=?
Static select for one-to-many edu.wustl.common.domain.AuditEvent.auditEventLogCollection: select auditevent0_.AUDIT_EVENT_ID as AUDIT5_1_, auditevent0_.IDENTIFIER as IDENTIFIER1_, auditevent0_.IDENTIFIER as IDENTIFIER25_0_, auditevent0_.AUDIT_EVENT_ID as AUDIT5_25_0_, auditevent0_1_.OBJECT_IDENTIFIER as OBJECT2_26_0_, auditevent0_1_.OBJECT_NAME as OBJECT3_26_0_, case when auditevent0_1_.IDENTIFIER is not null then 1 when auditevent0_.IDENTIFIER is not null then 0 end as clazz_0_ from CATISSUE_AUDIT_EVENT_LOG auditevent0_ left outer join CATISSUE_DATA_AUDIT_EVENT_LOG auditevent0_1_ on auditevent0_.IDENTIFIER=auditevent0_1_.IDENTIFIER where auditevent0_.AUDIT_EVENT_ID=?
Static select for one-to-many test.User.orderCollection: select ordercolle0_.user_id as user3_2_, ordercolle0_.IDENTIFIER as IDENTIFIER2_, ordercolle0_.IDENTIFIER as IDENTIFIER22_1_, ordercolle0_.person_id as person2_22_1_, ordercolle0_.user_id as user3_22_1_, person1_.IDENTIFIER as IDENTIFIER20_0_, person1_.NAME as NAME20_0_, person1_.ADDRESS_ID as ADDRESS3_20_0_ from test_order ordercolle0_ left outer join test_person person1_ on ordercolle0_.person_id=person1_.IDENTIFIER where ordercolle0_.user_id=?
Static select for one-to-many edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection: select auditevent0_.AUDIT_EVENT_LOG_ID as AUDIT5_1_, auditevent0_.IDENTIFIER as IDENTIFIER1_, auditevent0_.IDENTIFIER as IDENTIFIER24_0_, auditevent0_.ELEMENT_NAME as ELEMENT2_24_0_, auditevent0_.PREVIOUS_VALUE as PREVIOUS3_24_0_, auditevent0_.CURRENT_VALUE as CURRENT4_24_0_, auditevent0_.AUDIT_EVENT_LOG_ID as AUDIT5_24_0_ from CATISSUE_AUDIT_EVENT_DETAILS auditevent0_ where auditevent0_.AUDIT_EVENT_LOG_ID=?
Static select for one-to-many edu.wustl.common.domain.AuditEventLog.auditEventDetailsCollection: select auditevent0_.AUDIT_EVENT_LOG_ID as AUDIT5_1_, auditevent0_.IDENTIFIER as IDENTIFIER1_, auditevent0_.IDENTIFIER as IDENTIFIER24_0_, auditevent0_.ELEMENT_NAME as ELEMENT2_24_0_, auditevent0_.PREVIOUS_VALUE as PREVIOUS3_24_0_, auditevent0_.CURRENT_VALUE as CURRENT4_24_0_, auditevent0_.AUDIT_EVENT_LOG_ID as AUDIT5_24_0_ from CATISSUE_AUDIT_EVENT_DETAILS auditevent0_ where auditevent0_.AUDIT_EVENT_LOG_ID=?
Static select for one-to-many edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs: select auditdatae0_.PARENT_LOG_ID as PARENT4_2_, auditdatae0_.IDENTIFIER as IDENTIFIER2_, auditdatae0_.IDENTIFIER as IDENTIFIER25_1_, auditdatae0_1_.AUDIT_EVENT_ID as AUDIT5_25_1_, auditdatae0_.OBJECT_IDENTIFIER as OBJECT2_26_1_, auditdatae0_.OBJECT_NAME as OBJECT3_26_1_, auditevent1_.IDENTIFIER as IDENTIFIER23_0_, auditevent1_.EVENT_TIMESTAMP as EVENT2_23_0_, auditevent1_.USER_ID as USER3_23_0_, auditevent1_.EVENT_TYPE as EVENT4_23_0_, auditevent1_.COMMENTS as COMMENTS23_0_, auditevent1_.IP_ADDRESS as IP6_23_0_ from CATISSUE_DATA_AUDIT_EVENT_LOG auditdatae0_ inner join CATISSUE_AUDIT_EVENT_LOG auditdatae0_1_ on auditdatae0_.IDENTIFIER=auditdatae0_1_.IDENTIFIER left outer join CATISSUE_AUDIT_EVENT auditevent1_ on auditdatae0_1_.AUDIT_EVENT_ID=auditevent1_.IDENTIFIER where auditdatae0_.PARENT_LOG_ID=?
Static select for one-to-many test.Person.orderCollection: select ordercolle0_.person_id as person2_1_, ordercolle0_.IDENTIFIER as IDENTIFIER1_, ordercolle0_.IDENTIFIER as IDENTIFIER22_0_, ordercolle0_.person_id as person2_22_0_, ordercolle0_.user_id as user3_22_0_ from test_order ordercolle0_ where ordercolle0_.person_id=?
registered: 8ad847f8257dee2801257dee2e350001 (unnamed)
Not binding factory to JNDI, no JNDI name configured
instantiated session factory
Checking 0 named HQL queries
Checking 0 named SQL queries
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Setting the connection manager
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Loading mapping descriptors from file:/F:/catissueWorkspace/DAOWithoutAudit/daojunits/classes/mapping.xml
Properties loaded from classpath: /org/castor/core/castor.core.properties
Properties loaded from classpath: /org/castor/xml/castor.xml.properties
New instance!
Properties loaded from classpath: /org/castor/core/castor.core.properties
Properties loaded from classpath: /org/castor/core/castor.core.properties
Properties loaded from classpath: /org/castor/xml/castor.xml.properties
New instance!
Properties loaded from classpath: /org/castor/core/castor.core.properties
Properties loaded from classpath: /org/castor/xml/castor.xml.properties
New instance!
Successfully instantiated a JAXP SAXParser instance.
#startElement: mapping
Get descriptor for: org.exolab.castor.mapping.xml.MappingRoot found: null
Get descriptor for: org.exolab.castor.mapping.xml.MappingRoot found: null
Setting property: org.exolab.castor.xml.util.ResolverStrategy.LoadPackageMappings to value: true
Setting property: org.exolab.castor.xml.util.ResolverStrategy.useIntrospection to value: true
Setting property: org.exolab.castor.xml.util.ResolverStrategy.MappingLoader to value: null
Setting property: org.exolab.castor.xml.util.ResolverStrategy.Introspector to value: org.exolab.castor.xml.Introspector@e51b2c
Setting property: org.exolab.castor.xml.util.ResolverStrategy.ClassLoader to value: sun.misc.Launcher$AppClassLoader@133056f
Setting property: org.exolab.castor.xml.util.ResolverStrategy.LoadPackageMappings to value: true
Setting property: org.exolab.castor.xml.util.ResolverStrategy.useIntrospection to value: true
Setting property: org.exolab.castor.xml.util.ResolverStrategy.MappingLoader to value: null
Setting property: org.exolab.castor.xml.util.ResolverStrategy.Introspector to value: org.exolab.castor.xml.Introspector@e51b2c
Get descriptor for: org.exolab.castor.mapping.xml.MappingRoot found: null
Now in method: org.exolab.castor.xml.util.resolvers.ByMappingLoader resolving: org.exolab.castor.mapping.xml.MappingRoot
No mapping loader specified
Called addAllDescriptors with null or empty descriptor map
Get descriptor for: org.exolab.castor.mapping.xml.MappingRoot found: null
Now in resolve method: org.exolab.castor.xml.util.resolvers.ByCDR resolving: org.exolab.castor.mapping.xml
Found descriptor: class org.exolab.castor.mapping.xml.descriptors.BindXmlDescriptor
Found descriptor: class org.exolab.castor.mapping.xml.descriptors.FieldHandlerDefDescriptor
Found descriptor: class org.exolab.castor.mapping.xml.descriptors.ContainerDescriptor
Found descriptor: class org.exolab.castor.mapping.xml.descriptors.IncludeDescriptor
Found descriptor: class org.exolab.castor.mapping.xml.descriptors.ParamDescriptor
Found descriptor: class org.exolab.castor.mapping.xml.descriptors.LdapDescriptor
Found descriptor: class org.exolab.castor.mapping.xml.descriptors.ClassChoiceDescriptor
Found descriptor: class org.exolab.castor.mapping.xml.descriptors.NamedQueryDescriptor
Found descriptor: class org.exolab.castor.mapping.xml.descriptors.ClassMappingDescriptor
Found descriptor: class org.exolab.castor.mapping.xml.descriptors.CacheTypeMappingDescriptor
Found descriptor: class org.exolab.castor.mapping.xml.descriptors.FieldMappingDescriptor
Found descriptor: class org.exolab.castor.mapping.xml.descriptors.MappingRootDescriptor
Found descriptor: class org.exolab.castor.mapping.xml.descriptors.SqlDescriptor
Found descriptor: class org.exolab.castor.mapping.xml.descriptors.KeyGeneratorDefDescriptor
Found descriptor: class org.exolab.castor.mapping.xml.descriptors.MapToDescriptor
Found descriptor: class org.exolab.castor.mapping.xml.descriptors.PropertyDescriptor
Found descriptor: class org.exolab.castor.mapping.xml.descriptors.PropertyTypeDescriptor
Found descriptor: class org.exolab.castor.mapping.xml.descriptors.QueryHintDescriptor
Adding descriptor class for: org.exolab.castor.mapping.xml.FieldHandlerDef descriptor: org.exolab.castor.mapping.xml.descriptors.FieldHandlerDefDescriptor@1318b; descriptor for class: [null]; xml name: null
Adding descriptor class for: org.exolab.castor.mapping.xml.NamedQuery descriptor: org.exolab.castor.mapping.xml.descriptors.NamedQueryDescriptor@5bb966; descriptor for class: [null]; xml name: null
Adding descriptor class for: org.exolab.castor.mapping.xml.FieldMapping descriptor: org.exolab.castor.mapping.xml.descriptors.FieldMappingDescriptor@1e903d5; descriptor for class: [null]; xml name: null
Adding descriptor class for: org.exolab.castor.mapping.xml.BindXml descriptor: org.exolab.castor.mapping.xml.descriptors.BindXmlDescriptor@faa550; descriptor for class: [null]; xml name: null
Adding descriptor class for: org.exolab.castor.mapping.xml.KeyGeneratorDef descriptor: org.exolab.castor.mapping.xml.descriptors.KeyGeneratorDefDescriptor@17b6643; descriptor for class: [null]; xml name: null
Adding descriptor class for: org.exolab.castor.mapping.xml.Ldap descriptor: org.exolab.castor.mapping.xml.descriptors.LdapDescriptor@76e8a7; descriptor for class: [null]; xml name: null
Adding descriptor class for: org.exolab.castor.mapping.xml.PropertyType descriptor: org.exolab.castor.mapping.xml.descriptors.PropertyTypeDescriptor@a45536; descriptor for class: [null]; xml name: null
Adding descriptor class for: org.exolab.castor.mapping.xml.MappingRoot descriptor: org.exolab.castor.mapping.xml.descriptors.MappingRootDescriptor@d66426; descriptor for class: [null]; xml name: null
Adding descriptor class for: org.exolab.castor.mapping.xml.ClassChoice descriptor: org.exolab.castor.mapping.xml.descriptors.ClassChoiceDescriptor@1490eb5; descriptor for class: [null]; xml name: null
Adding descriptor class for: org.exolab.castor.mapping.xml.Property descriptor: org.exolab.castor.mapping.xml.descriptors.PropertyDescriptor@164b09c; descriptor for class: [null]; xml name: null
Adding descriptor class for: org.exolab.castor.mapping.xml.MapTo descriptor: org.exolab.castor.mapping.xml.descriptors.MapToDescriptor@186f247; descriptor for class: [null]; xml name: null
Adding descriptor class for: org.exolab.castor.mapping.xml.QueryHint descriptor: org.exolab.castor.mapping.xml.descriptors.QueryHintDescriptor@8c4a77; descriptor for class: [null]; xml name: null
Adding descriptor class for: org.exolab.castor.mapping.xml.Include descriptor: org.exolab.castor.mapping.xml.descriptors.IncludeDescriptor@6d0040; descriptor for class: [null]; xml name: null
Adding descriptor class for: org.exolab.castor.mapping.xml.Param descriptor: org.exolab.castor.mapping.xml.descriptors.ParamDescriptor@2b9406; descriptor for class: [null]; xml name: null
Adding descriptor class for: org.exolab.castor.mapping.xml.ClassMapping descriptor: org.exolab.castor.mapping.xml.descriptors.ClassMappingDescriptor@1035079; descriptor for class: [null]; xml name: null
Adding descriptor class for: org.exolab.castor.mapping.xml.Sql descriptor: org.exolab.castor.mapping.xml.descriptors.SqlDescriptor@983d95; descriptor for class: [null]; xml name: null
Adding descriptor class for: org.exolab.castor.mapping.xml.Container descriptor: org.exolab.castor.mapping.xml.descriptors.ContainerDescriptor@f30494; descriptor for class: [null]; xml name: null
Adding descriptor class for: org.exolab.castor.mapping.xml.CacheTypeMapping descriptor: org.exolab.castor.mapping.xml.descriptors.CacheTypeMappingDescriptor@b1cc87; descriptor for class: [null]; xml name: null
Now in resolve method: org.exolab.castor.xml.util.resolvers.ByPackageMapping resolving: org.exolab.castor.mapping.xml
Called addAllDescriptors with null or empty descriptor map
Get descriptor for: org.exolab.castor.mapping.xml.MappingRoot found: org.exolab.castor.mapping.xml.descriptors.MappingRootDescriptor@d66426; descriptor for class: [null]; xml name: null
#characters: 
	 
#startElement: class
Get descriptor for: org.exolab.castor.mapping.xml.ClassMapping found: org.exolab.castor.mapping.xml.descriptors.ClassMappingDescriptor@1035079; descriptor for class: [null]; xml name: null
Get descriptor for: org.exolab.castor.mapping.xml.ClassMapping found: org.exolab.castor.mapping.xml.descriptors.ClassMappingDescriptor@1035079; descriptor for class: [null]; xml name: null
#characters: 
		
#startElement: field
#container: _classChoice
Get descriptor for: org.exolab.castor.mapping.xml.FieldMapping found: org.exolab.castor.mapping.xml.descriptors.FieldMappingDescriptor@1e903d5; descriptor for class: [null]; xml name: null
Get descriptor for: org.exolab.castor.mapping.xml.FieldMapping found: org.exolab.castor.mapping.xml.descriptors.FieldMappingDescriptor@1e903d5; descriptor for class: [null]; xml name: null
#characters: 
			
#startElement: bind-xml
Get descriptor for: org.exolab.castor.mapping.xml.BindXml found: org.exolab.castor.mapping.xml.descriptors.BindXmlDescriptor@faa550; descriptor for class: [null]; xml name: null
Get descriptor for: org.exolab.castor.mapping.xml.BindXml found: org.exolab.castor.mapping.xml.descriptors.BindXmlDescriptor@faa550; descriptor for class: [null]; xml name: null
#endElement: bind-xml
#characters: 
		
#endElement: field
#endElement: _classChoice
#characters: 
		
#startElement: field
#container: _classChoice
Get descriptor for: org.exolab.castor.mapping.xml.FieldMapping found: org.exolab.castor.mapping.xml.descriptors.FieldMappingDescriptor@1e903d5; descriptor for class: [null]; xml name: null
Get descriptor for: org.exolab.castor.mapping.xml.FieldMapping found: org.exolab.castor.mapping.xml.descriptors.FieldMappingDescriptor@1e903d5; descriptor for class: [null]; xml name: null
#characters: 
			
#startElement: bind-xml
Get descriptor for: org.exolab.castor.mapping.xml.BindXml found: org.exolab.castor.mapping.xml.descriptors.BindXmlDescriptor@faa550; descriptor for class: [null]; xml name: null
Get descriptor for: org.exolab.castor.mapping.xml.BindXml found: org.exolab.castor.mapping.xml.descriptors.BindXmlDescriptor@faa550; descriptor for class: [null]; xml name: null
#endElement: bind-xml
#characters: 
		
#endElement: field
#endElement: _classChoice
#characters: 
		
#characters: 
		
#startElement: field
#container: _classChoice
Get descriptor for: org.exolab.castor.mapping.xml.FieldMapping found: org.exolab.castor.mapping.xml.descriptors.FieldMappingDescriptor@1e903d5; descriptor for class: [null]; xml name: null
Get descriptor for: org.exolab.castor.mapping.xml.FieldMapping found: org.exolab.castor.mapping.xml.descriptors.FieldMappingDescriptor@1e903d5; descriptor for class: [null]; xml name: null
#characters: 
			
#startElement: bind-xml
Get descriptor for: org.exolab.castor.mapping.xml.BindXml found: org.exolab.castor.mapping.xml.descriptors.BindXmlDescriptor@faa550; descriptor for class: [null]; xml name: null
Get descriptor for: org.exolab.castor.mapping.xml.BindXml found: org.exolab.castor.mapping.xml.descriptors.BindXmlDescriptor@faa550; descriptor for class: [null]; xml name: null
#endElement: bind-xml
#characters: 
		
#endElement: field
#endElement: _classChoice
#characters: 
		
#characters: 
		
#startElement: field
#container: _classChoice
Get descriptor for: org.exolab.castor.mapping.xml.FieldMapping found: org.exolab.castor.mapping.xml.descriptors.FieldMappingDescriptor@1e903d5; descriptor for class: [null]; xml name: null
Get descriptor for: org.exolab.castor.mapping.xml.FieldMapping found: org.exolab.castor.mapping.xml.descriptors.FieldMappingDescriptor@1e903d5; descriptor for class: [null]; xml name: null
#characters: 
			
#startElement: bind-xml
Get descriptor for: org.exolab.castor.mapping.xml.BindXml found: org.exolab.castor.mapping.xml.descriptors.BindXmlDescriptor@faa550; descriptor for class: [null]; xml name: null
Get descriptor for: org.exolab.castor.mapping.xml.BindXml found: org.exolab.castor.mapping.xml.descriptors.BindXmlDescriptor@faa550; descriptor for class: [null]; xml name: null
#endElement: bind-xml
#characters: 
		
#endElement: field
#endElement: _classChoice
#characters: 
		
#startElement: field
#container: _classChoice
Get descriptor for: org.exolab.castor.mapping.xml.FieldMapping found: org.exolab.castor.mapping.xml.descriptors.FieldMappingDescriptor@1e903d5; descriptor for class: [null]; xml name: null
Get descriptor for: org.exolab.castor.mapping.xml.FieldMapping found: org.exolab.castor.mapping.xml.descriptors.FieldMappingDescriptor@1e903d5; descriptor for class: [null]; xml name: null
#endElement: field
#endElement: _classChoice
#characters: 
		
#startElement: field
#container: _classChoice
Get descriptor for: org.exolab.castor.mapping.xml.FieldMapping found: org.exolab.castor.mapping.xml.descriptors.FieldMappingDescriptor@1e903d5; descriptor for class: [null]; xml name: null
Get descriptor for: org.exolab.castor.mapping.xml.FieldMapping found: org.exolab.castor.mapping.xml.descriptors.FieldMappingDescriptor@1e903d5; descriptor for class: [null]; xml name: null
#endElement: field
#endElement: _classChoice
#characters: 
		
#startElement: field
#container: _classChoice
Get descriptor for: org.exolab.castor.mapping.xml.FieldMapping found: org.exolab.castor.mapping.xml.descriptors.FieldMappingDescriptor@1e903d5; descriptor for class: [null]; xml name: null
Get descriptor for: org.exolab.castor.mapping.xml.FieldMapping found: org.exolab.castor.mapping.xml.descriptors.FieldMappingDescriptor@1e903d5; descriptor for class: [null]; xml name: null
#endElement: field
#endElement: _classChoice
#characters: 
	
#endElement: class
#characters: 
	
#characters: 
	
#startElement: class
Get descriptor for: org.exolab.castor.mapping.xml.ClassMapping found: org.exolab.castor.mapping.xml.descriptors.ClassMappingDescriptor@1035079; descriptor for class: [null]; xml name: null
Get descriptor for: org.exolab.castor.mapping.xml.ClassMapping found: org.exolab.castor.mapping.xml.descriptors.ClassMappingDescriptor@1035079; descriptor for class: [null]; xml name: null
#characters: 
	 
#startElement: field
#container: _classChoice
Get descriptor for: org.exolab.castor.mapping.xml.FieldMapping found: org.exolab.castor.mapping.xml.descriptors.FieldMappingDescriptor@1e903d5; descriptor for class: [null]; xml name: null
Get descriptor for: org.exolab.castor.mapping.xml.FieldMapping found: org.exolab.castor.mapping.xml.descriptors.FieldMappingDescriptor@1e903d5; descriptor for class: [null]; xml name: null
#endElement: field
#endElement: _classChoice
#characters: 
	 
#endElement: class
#characters: 
	 
#startElement: class
Get descriptor for: org.exolab.castor.mapping.xml.ClassMapping found: org.exolab.castor.mapping.xml.descriptors.ClassMappingDescriptor@1035079; descriptor for class: [null]; xml name: null
Get descriptor for: org.exolab.castor.mapping.xml.ClassMapping found: org.exolab.castor.mapping.xml.descriptors.ClassMappingDescriptor@1035079; descriptor for class: [null]; xml name: null
#characters: 
	 	
#startElement: field
#container: _classChoice
Get descriptor for: org.exolab.castor.mapping.xml.FieldMapping found: org.exolab.castor.mapping.xml.descriptors.FieldMappingDescriptor@1e903d5; descriptor for class: [null]; xml name: null
Get descriptor for: org.exolab.castor.mapping.xml.FieldMapping found: org.exolab.castor.mapping.xml.descriptors.FieldMappingDescriptor@1e903d5; descriptor for class: [null]; xml name: null
#characters: 
			
#startElement: bind-xml
Get descriptor for: org.exolab.castor.mapping.xml.BindXml found: org.exolab.castor.mapping.xml.descriptors.BindXmlDescriptor@faa550; descriptor for class: [null]; xml name: null
Get descriptor for: org.exolab.castor.mapping.xml.BindXml found: org.exolab.castor.mapping.xml.descriptors.BindXmlDescriptor@faa550; descriptor for class: [null]; xml name: null
#endElement: bind-xml
#characters: 
		
#endElement: field
#endElement: _classChoice
#characters: 
		
#startElement: field
#container: _classChoice
Get descriptor for: org.exolab.castor.mapping.xml.FieldMapping found: org.exolab.castor.mapping.xml.descriptors.FieldMappingDescriptor@1e903d5; descriptor for class: [null]; xml name: null
Get descriptor for: org.exolab.castor.mapping.xml.FieldMapping found: org.exolab.castor.mapping.xml.descriptors.FieldMappingDescriptor@1e903d5; descriptor for class: [null]; xml name: null
#characters: 
			
#startElement: bind-xml
Get descriptor for: org.exolab.castor.mapping.xml.BindXml found: org.exolab.castor.mapping.xml.descriptors.BindXmlDescriptor@faa550; descriptor for class: [null]; xml name: null
Get descriptor for: org.exolab.castor.mapping.xml.BindXml found: org.exolab.castor.mapping.xml.descriptors.BindXmlDescriptor@faa550; descriptor for class: [null]; xml name: null
#endElement: bind-xml
#characters: 
		
#endElement: field
#endElement: _classChoice
#characters: 
	 
#endElement: class
#characters: 

#endElement: mapping
Properties loaded from classpath: /org/castor/core/castor.core.properties
Properties loaded from classpath: /org/castor/xml/castor.xml.properties
New instance!
Properties loaded from classpath: /org/castor/core/castor.core.properties
Properties loaded from classpath: /org/castor/xml/castor.xml.properties
Properties loaded from classpath: /org/castor/core/castor.core.properties
Properties loaded from classpath: /org/castor/xml/castor.xml.properties
New instance!
Properties loaded from classpath: /org/castor/core/castor.core.properties
Properties loaded from classpath: /org/castor/xml/castor.xml.properties
New instance!
Adding descriptor class for: edu.wustl.common.audit.AuditableClass descriptor: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@3b1f38; descriptor for class: edu.wustl.common.audit.AuditableClass; xml name: auditable-class
Adding descriptor class for: edu.wustl.common.audit.AuditableMetaData descriptor: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@17ec9f7; descriptor for class: edu.wustl.common.audit.AuditableMetaData; xml name: auditable-meta-data
Adding descriptor class for: edu.wustl.common.audit.Attribute descriptor: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Successfully instantiated a JAXP SAXParser instance.
#startElement: AuditableMetaData
Get descriptor for: edu.wustl.common.audit.AuditableMetaData found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@17ec9f7; descriptor for class: edu.wustl.common.audit.AuditableMetaData; xml name: auditable-meta-data
Get descriptor for: edu.wustl.common.audit.AuditableMetaData found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@17ec9f7; descriptor for class: edu.wustl.common.audit.AuditableMetaData; xml name: auditable-meta-data
#characters: 

	
#startElement: AuditableClass
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
#characters: 
		
#startElement: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
#endElement: attribute
#characters: 
		
#startElement: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
#endElement: attribute
#characters: 
	
#endElement: AuditableClass
#characters: 
	
#characters: 
	
#startElement: AuditableClass
#characters: 
		
#startElement: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
#endElement: attribute
#characters: 
		
#startElement: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
#endElement: attribute
#characters: 
		
#startElement: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
#endElement: attribute
#characters: 
				
#characters: 
		
#startElement: containmentAssociationCollection
#characters: 
		
#endElement: containmentAssociationCollection
#characters: 
		
#characters: 
		
#startElement: containmentAssociationCollection
#characters: 
		
#endElement: containmentAssociationCollection
#characters: 
		
#characters: 
	
#endElement: AuditableClass
#characters: 
	
#characters: 
	
#startElement: AuditableClass
#characters: 
		
#startElement: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
#endElement: attribute
#characters: 
		
#startElement: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
#endElement: attribute
#characters: 
	
#endElement: AuditableClass
#characters: 
	
#characters: 
	
#startElement: AuditableClass
#characters: 
		
#startElement: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
#endElement: attribute
#characters: 
		
#startElement: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
#endElement: attribute
#characters: 
		
#startElement: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
#endElement: attribute
#characters: 
		
#startElement: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
#endElement: attribute
#characters: 
		
#startElement: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
#endElement: attribute
#characters: 
		
#characters: 
		
#startElement: referenceAssociationCollection
#characters: 
		
#endElement: referenceAssociationCollection
#characters: 
		
#characters: 
	
#endElement: AuditableClass
#characters: 
	
#characters: 
	
#startElement: AuditableClass
#characters: 
		
#startElement: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
#endElement: attribute
#characters: 
		
#startElement: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
#endElement: attribute
#characters: 
	
#endElement: AuditableClass
#characters: 
	
#characters: 
	
#startElement: AuditableClass
#characters: 
		
#characters: 
	
#endElement: AuditableClass
#characters: 
	
#characters: 
	
#startElement: AuditableClass
#characters: 
	
#endElement: AuditableClass
#characters: 
	
#characters: 
	
#startElement: AuditableClass
#characters: 
	
#endElement: AuditableClass
#characters: 
	
#characters: 
	
#startElement: AuditableClass
#characters: 
	
#endElement: AuditableClass
#characters: 
	
#startElement: AuditableClass
#characters: 
	
#endElement: AuditableClass
#characters: 
	
#characters: 

#endElement: AuditableMetaData
Get descriptor for: edu.wustl.common.audit.AuditableMetaData found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@17ec9f7; descriptor for class: edu.wustl.common.audit.AuditableMetaData; xml name: auditable-meta-data
Get descriptor for: edu.wustl.common.audit.AuditableMetaData found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@17ec9f7; descriptor for class: edu.wustl.common.audit.AuditableMetaData; xml name: auditable-meta-data
Called isValidated(edu.wustl.common.audit.AuditableMetaData@1a8773c)
Called isValidated(edu.wustl.common.audit.AuditableMetaData@1a8773c)
Called addValidated(edu.wustl.common.audit.AuditableMetaData@1a8773c)
Get descriptor for: edu.wustl.common.audit.AuditableClass found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@3b1f38; descriptor for class: edu.wustl.common.audit.AuditableClass; xml name: auditable-class
Get descriptor for: edu.wustl.common.audit.AuditableClass found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@3b1f38; descriptor for class: edu.wustl.common.audit.AuditableClass; xml name: auditable-class
Called isValidated(edu.wustl.common.audit.AuditableClass@d24e3f)
Called isValidated(edu.wustl.common.audit.AuditableClass@d24e3f)
Called addValidated(edu.wustl.common.audit.AuditableClass@d24e3f)
Called removeValidated(edu.wustl.common.audit.AuditableClass@d24e3f)
Called isValidated(edu.wustl.common.audit.AuditableClass@d24e3f)
Called isValidated(edu.wustl.common.audit.AuditableClass@d24e3f)
Called addValidated(edu.wustl.common.audit.AuditableClass@d24e3f)
Called removeValidated(edu.wustl.common.audit.AuditableClass@d24e3f)
Called isValidated(edu.wustl.common.audit.AuditableClass@d24e3f)
Called isValidated(edu.wustl.common.audit.AuditableClass@d24e3f)
Called addValidated(edu.wustl.common.audit.AuditableClass@d24e3f)
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Called isValidated(edu.wustl.common.audit.Attribute@10f41e9)
Called isValidated(edu.wustl.common.audit.Attribute@10f41e9)
Called addValidated(edu.wustl.common.audit.Attribute@10f41e9)
Called removeValidated(edu.wustl.common.audit.Attribute@10f41e9)
Called isValidated(edu.wustl.common.audit.Attribute@10f41e9)
Called isValidated(edu.wustl.common.audit.Attribute@10f41e9)
Called addValidated(edu.wustl.common.audit.Attribute@10f41e9)
Called removeValidated(edu.wustl.common.audit.Attribute@10f41e9)
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Called isValidated(edu.wustl.common.audit.Attribute@b05acd)
Called isValidated(edu.wustl.common.audit.Attribute@b05acd)
Called addValidated(edu.wustl.common.audit.Attribute@b05acd)
Called removeValidated(edu.wustl.common.audit.Attribute@b05acd)
Called isValidated(edu.wustl.common.audit.Attribute@b05acd)
Called isValidated(edu.wustl.common.audit.Attribute@b05acd)
Called addValidated(edu.wustl.common.audit.Attribute@b05acd)
Called removeValidated(edu.wustl.common.audit.Attribute@b05acd)
Called removeValidated(edu.wustl.common.audit.AuditableClass@d24e3f)
Called isValidated(edu.wustl.common.audit.AuditableClass@d24e3f)
Called isValidated(edu.wustl.common.audit.AuditableClass@d24e3f)
Called addValidated(edu.wustl.common.audit.AuditableClass@d24e3f)
Called removeValidated(edu.wustl.common.audit.AuditableClass@d24e3f)
Called isValidated(edu.wustl.common.audit.AuditableClass@d24e3f)
Called isValidated(edu.wustl.common.audit.AuditableClass@d24e3f)
Called addValidated(edu.wustl.common.audit.AuditableClass@d24e3f)
Called removeValidated(edu.wustl.common.audit.AuditableClass@d24e3f)
Called isValidated(edu.wustl.common.audit.AuditableClass@d24e3f)
Called isValidated(edu.wustl.common.audit.AuditableClass@d24e3f)
Called addValidated(edu.wustl.common.audit.AuditableClass@d24e3f)
Called removeValidated(edu.wustl.common.audit.AuditableClass@d24e3f)
Called isValidated(edu.wustl.common.audit.AuditableClass@d24e3f)
Called isValidated(edu.wustl.common.audit.AuditableClass@d24e3f)
Called addValidated(edu.wustl.common.audit.AuditableClass@d24e3f)
Called removeValidated(edu.wustl.common.audit.AuditableClass@d24e3f)
Get descriptor for: edu.wustl.common.audit.AuditableClass found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@3b1f38; descriptor for class: edu.wustl.common.audit.AuditableClass; xml name: auditable-class
Get descriptor for: edu.wustl.common.audit.AuditableClass found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@3b1f38; descriptor for class: edu.wustl.common.audit.AuditableClass; xml name: auditable-class
Called isValidated(edu.wustl.common.audit.AuditableClass@1989b5)
Called isValidated(edu.wustl.common.audit.AuditableClass@1989b5)
Called addValidated(edu.wustl.common.audit.AuditableClass@1989b5)
Get descriptor for: edu.wustl.common.audit.AuditableClass found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@3b1f38; descriptor for class: edu.wustl.common.audit.AuditableClass; xml name: auditable-class
Get descriptor for: edu.wustl.common.audit.AuditableClass found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@3b1f38; descriptor for class: edu.wustl.common.audit.AuditableClass; xml name: auditable-class
Called isValidated(edu.wustl.common.audit.AuditableClass@a00185)
Called isValidated(edu.wustl.common.audit.AuditableClass@a00185)
Called addValidated(edu.wustl.common.audit.AuditableClass@a00185)
Called removeValidated(edu.wustl.common.audit.AuditableClass@a00185)
Called isValidated(edu.wustl.common.audit.AuditableClass@a00185)
Called isValidated(edu.wustl.common.audit.AuditableClass@a00185)
Called addValidated(edu.wustl.common.audit.AuditableClass@a00185)
Called removeValidated(edu.wustl.common.audit.AuditableClass@a00185)
Called isValidated(edu.wustl.common.audit.AuditableClass@a00185)
Called isValidated(edu.wustl.common.audit.AuditableClass@a00185)
Called addValidated(edu.wustl.common.audit.AuditableClass@a00185)
Called removeValidated(edu.wustl.common.audit.AuditableClass@a00185)
Called isValidated(edu.wustl.common.audit.AuditableClass@a00185)
Called isValidated(edu.wustl.common.audit.AuditableClass@a00185)
Called addValidated(edu.wustl.common.audit.AuditableClass@a00185)
Called removeValidated(edu.wustl.common.audit.AuditableClass@a00185)
Called isValidated(edu.wustl.common.audit.AuditableClass@a00185)
Called isValidated(edu.wustl.common.audit.AuditableClass@a00185)
Called addValidated(edu.wustl.common.audit.AuditableClass@a00185)
Called removeValidated(edu.wustl.common.audit.AuditableClass@a00185)
Called isValidated(edu.wustl.common.audit.AuditableClass@a00185)
Called isValidated(edu.wustl.common.audit.AuditableClass@a00185)
Called addValidated(edu.wustl.common.audit.AuditableClass@a00185)
Called removeValidated(edu.wustl.common.audit.AuditableClass@a00185)
Called isValidated(edu.wustl.common.audit.AuditableClass@a00185)
Called isValidated(edu.wustl.common.audit.AuditableClass@a00185)
Called addValidated(edu.wustl.common.audit.AuditableClass@a00185)
Called removeValidated(edu.wustl.common.audit.AuditableClass@a00185)
Get descriptor for: edu.wustl.common.audit.AuditableClass found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@3b1f38; descriptor for class: edu.wustl.common.audit.AuditableClass; xml name: auditable-class
Get descriptor for: edu.wustl.common.audit.AuditableClass found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@3b1f38; descriptor for class: edu.wustl.common.audit.AuditableClass; xml name: auditable-class
Called isValidated(edu.wustl.common.audit.AuditableClass@1328c7a)
Called isValidated(edu.wustl.common.audit.AuditableClass@1328c7a)
Called addValidated(edu.wustl.common.audit.AuditableClass@1328c7a)
Called removeValidated(edu.wustl.common.audit.AuditableClass@1328c7a)
Called isValidated(edu.wustl.common.audit.AuditableClass@1328c7a)
Called isValidated(edu.wustl.common.audit.AuditableClass@1328c7a)
Called addValidated(edu.wustl.common.audit.AuditableClass@1328c7a)
Called removeValidated(edu.wustl.common.audit.AuditableClass@1328c7a)
Called isValidated(edu.wustl.common.audit.AuditableClass@1328c7a)
Called isValidated(edu.wustl.common.audit.AuditableClass@1328c7a)
Called addValidated(edu.wustl.common.audit.AuditableClass@1328c7a)
Called removeValidated(edu.wustl.common.audit.AuditableClass@1328c7a)
Called isValidated(edu.wustl.common.audit.AuditableClass@1328c7a)
Called isValidated(edu.wustl.common.audit.AuditableClass@1328c7a)
Called addValidated(edu.wustl.common.audit.AuditableClass@1328c7a)
Called removeValidated(edu.wustl.common.audit.AuditableClass@1328c7a)
Called isValidated(edu.wustl.common.audit.AuditableClass@1328c7a)
Called isValidated(edu.wustl.common.audit.AuditableClass@1328c7a)
Called addValidated(edu.wustl.common.audit.AuditableClass@1328c7a)
Called removeValidated(edu.wustl.common.audit.AuditableClass@1328c7a)
Called isValidated(edu.wustl.common.audit.AuditableClass@1328c7a)
Called isValidated(edu.wustl.common.audit.AuditableClass@1328c7a)
Called addValidated(edu.wustl.common.audit.AuditableClass@1328c7a)
Called removeValidated(edu.wustl.common.audit.AuditableClass@1328c7a)
Called isValidated(edu.wustl.common.audit.AuditableClass@1328c7a)
Called isValidated(edu.wustl.common.audit.AuditableClass@1328c7a)
Called addValidated(edu.wustl.common.audit.AuditableClass@1328c7a)
Called removeValidated(edu.wustl.common.audit.AuditableClass@1328c7a)
Called removeValidated(edu.wustl.common.audit.AuditableClass@1989b5)
Called isValidated(edu.wustl.common.audit.AuditableClass@1989b5)
Called isValidated(edu.wustl.common.audit.AuditableClass@1989b5)
Called addValidated(edu.wustl.common.audit.AuditableClass@1989b5)
Called removeValidated(edu.wustl.common.audit.AuditableClass@1989b5)
Called isValidated(edu.wustl.common.audit.AuditableClass@1989b5)
Called isValidated(edu.wustl.common.audit.AuditableClass@1989b5)
Called addValidated(edu.wustl.common.audit.AuditableClass@1989b5)
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Called isValidated(edu.wustl.common.audit.Attribute@1a4ded3)
Called isValidated(edu.wustl.common.audit.Attribute@1a4ded3)
Called addValidated(edu.wustl.common.audit.Attribute@1a4ded3)
Called removeValidated(edu.wustl.common.audit.Attribute@1a4ded3)
Called isValidated(edu.wustl.common.audit.Attribute@1a4ded3)
Called isValidated(edu.wustl.common.audit.Attribute@1a4ded3)
Called addValidated(edu.wustl.common.audit.Attribute@1a4ded3)
Called removeValidated(edu.wustl.common.audit.Attribute@1a4ded3)
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Called isValidated(edu.wustl.common.audit.Attribute@121177e)
Called isValidated(edu.wustl.common.audit.Attribute@121177e)
Called addValidated(edu.wustl.common.audit.Attribute@121177e)
Called removeValidated(edu.wustl.common.audit.Attribute@121177e)
Called isValidated(edu.wustl.common.audit.Attribute@121177e)
Called isValidated(edu.wustl.common.audit.Attribute@121177e)
Called addValidated(edu.wustl.common.audit.Attribute@121177e)
Called removeValidated(edu.wustl.common.audit.Attribute@121177e)
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Called isValidated(edu.wustl.common.audit.Attribute@18d7ace)
Called isValidated(edu.wustl.common.audit.Attribute@18d7ace)
Called addValidated(edu.wustl.common.audit.Attribute@18d7ace)
Called removeValidated(edu.wustl.common.audit.Attribute@18d7ace)
Called isValidated(edu.wustl.common.audit.Attribute@18d7ace)
Called isValidated(edu.wustl.common.audit.Attribute@18d7ace)
Called addValidated(edu.wustl.common.audit.Attribute@18d7ace)
Called removeValidated(edu.wustl.common.audit.Attribute@18d7ace)
Called removeValidated(edu.wustl.common.audit.AuditableClass@1989b5)
Called isValidated(edu.wustl.common.audit.AuditableClass@1989b5)
Called isValidated(edu.wustl.common.audit.AuditableClass@1989b5)
Called addValidated(edu.wustl.common.audit.AuditableClass@1989b5)
Called removeValidated(edu.wustl.common.audit.AuditableClass@1989b5)
Called isValidated(edu.wustl.common.audit.AuditableClass@1989b5)
Called isValidated(edu.wustl.common.audit.AuditableClass@1989b5)
Called addValidated(edu.wustl.common.audit.AuditableClass@1989b5)
Called removeValidated(edu.wustl.common.audit.AuditableClass@1989b5)
Called isValidated(edu.wustl.common.audit.AuditableClass@1989b5)
Called isValidated(edu.wustl.common.audit.AuditableClass@1989b5)
Called addValidated(edu.wustl.common.audit.AuditableClass@1989b5)
Called removeValidated(edu.wustl.common.audit.AuditableClass@1989b5)
Called isValidated(edu.wustl.common.audit.AuditableClass@1989b5)
Called isValidated(edu.wustl.common.audit.AuditableClass@1989b5)
Called addValidated(edu.wustl.common.audit.AuditableClass@1989b5)
Called removeValidated(edu.wustl.common.audit.AuditableClass@1989b5)
Get descriptor for: edu.wustl.common.audit.AuditableClass found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@3b1f38; descriptor for class: edu.wustl.common.audit.AuditableClass; xml name: auditable-class
Get descriptor for: edu.wustl.common.audit.AuditableClass found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@3b1f38; descriptor for class: edu.wustl.common.audit.AuditableClass; xml name: auditable-class
Called isValidated(edu.wustl.common.audit.AuditableClass@179953c)
Called isValidated(edu.wustl.common.audit.AuditableClass@179953c)
Called addValidated(edu.wustl.common.audit.AuditableClass@179953c)
Called removeValidated(edu.wustl.common.audit.AuditableClass@179953c)
Called isValidated(edu.wustl.common.audit.AuditableClass@179953c)
Called isValidated(edu.wustl.common.audit.AuditableClass@179953c)
Called addValidated(edu.wustl.common.audit.AuditableClass@179953c)
Called removeValidated(edu.wustl.common.audit.AuditableClass@179953c)
Called isValidated(edu.wustl.common.audit.AuditableClass@179953c)
Called isValidated(edu.wustl.common.audit.AuditableClass@179953c)
Called addValidated(edu.wustl.common.audit.AuditableClass@179953c)
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Called isValidated(edu.wustl.common.audit.Attribute@134ce4a)
Called isValidated(edu.wustl.common.audit.Attribute@134ce4a)
Called addValidated(edu.wustl.common.audit.Attribute@134ce4a)
Called removeValidated(edu.wustl.common.audit.Attribute@134ce4a)
Called isValidated(edu.wustl.common.audit.Attribute@134ce4a)
Called isValidated(edu.wustl.common.audit.Attribute@134ce4a)
Called addValidated(edu.wustl.common.audit.Attribute@134ce4a)
Called removeValidated(edu.wustl.common.audit.Attribute@134ce4a)
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Called isValidated(edu.wustl.common.audit.Attribute@1d381d2)
Called isValidated(edu.wustl.common.audit.Attribute@1d381d2)
Called addValidated(edu.wustl.common.audit.Attribute@1d381d2)
Called removeValidated(edu.wustl.common.audit.Attribute@1d381d2)
Called isValidated(edu.wustl.common.audit.Attribute@1d381d2)
Called isValidated(edu.wustl.common.audit.Attribute@1d381d2)
Called addValidated(edu.wustl.common.audit.Attribute@1d381d2)
Called removeValidated(edu.wustl.common.audit.Attribute@1d381d2)
Called removeValidated(edu.wustl.common.audit.AuditableClass@179953c)
Called isValidated(edu.wustl.common.audit.AuditableClass@179953c)
Called isValidated(edu.wustl.common.audit.AuditableClass@179953c)
Called addValidated(edu.wustl.common.audit.AuditableClass@179953c)
Called removeValidated(edu.wustl.common.audit.AuditableClass@179953c)
Called isValidated(edu.wustl.common.audit.AuditableClass@179953c)
Called isValidated(edu.wustl.common.audit.AuditableClass@179953c)
Called addValidated(edu.wustl.common.audit.AuditableClass@179953c)
Called removeValidated(edu.wustl.common.audit.AuditableClass@179953c)
Called isValidated(edu.wustl.common.audit.AuditableClass@179953c)
Called isValidated(edu.wustl.common.audit.AuditableClass@179953c)
Called addValidated(edu.wustl.common.audit.AuditableClass@179953c)
Called removeValidated(edu.wustl.common.audit.AuditableClass@179953c)
Called isValidated(edu.wustl.common.audit.AuditableClass@179953c)
Called isValidated(edu.wustl.common.audit.AuditableClass@179953c)
Called addValidated(edu.wustl.common.audit.AuditableClass@179953c)
Called removeValidated(edu.wustl.common.audit.AuditableClass@179953c)
Get descriptor for: edu.wustl.common.audit.AuditableClass found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@3b1f38; descriptor for class: edu.wustl.common.audit.AuditableClass; xml name: auditable-class
Get descriptor for: edu.wustl.common.audit.AuditableClass found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@3b1f38; descriptor for class: edu.wustl.common.audit.AuditableClass; xml name: auditable-class
Called isValidated(edu.wustl.common.audit.AuditableClass@f01771)
Called isValidated(edu.wustl.common.audit.AuditableClass@f01771)
Called addValidated(edu.wustl.common.audit.AuditableClass@f01771)
Called removeValidated(edu.wustl.common.audit.AuditableClass@f01771)
Called isValidated(edu.wustl.common.audit.AuditableClass@f01771)
Called isValidated(edu.wustl.common.audit.AuditableClass@f01771)
Called addValidated(edu.wustl.common.audit.AuditableClass@f01771)
Get descriptor for: edu.wustl.common.audit.AuditableClass found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@3b1f38; descriptor for class: edu.wustl.common.audit.AuditableClass; xml name: auditable-class
Get descriptor for: edu.wustl.common.audit.AuditableClass found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@3b1f38; descriptor for class: edu.wustl.common.audit.AuditableClass; xml name: auditable-class
Called isValidated(edu.wustl.common.audit.AuditableClass@933bcb)
Called isValidated(edu.wustl.common.audit.AuditableClass@933bcb)
Called addValidated(edu.wustl.common.audit.AuditableClass@933bcb)
Called removeValidated(edu.wustl.common.audit.AuditableClass@933bcb)
Called isValidated(edu.wustl.common.audit.AuditableClass@933bcb)
Called isValidated(edu.wustl.common.audit.AuditableClass@933bcb)
Called addValidated(edu.wustl.common.audit.AuditableClass@933bcb)
Called removeValidated(edu.wustl.common.audit.AuditableClass@933bcb)
Called isValidated(edu.wustl.common.audit.AuditableClass@933bcb)
Called isValidated(edu.wustl.common.audit.AuditableClass@933bcb)
Called addValidated(edu.wustl.common.audit.AuditableClass@933bcb)
Called removeValidated(edu.wustl.common.audit.AuditableClass@933bcb)
Called isValidated(edu.wustl.common.audit.AuditableClass@933bcb)
Called isValidated(edu.wustl.common.audit.AuditableClass@933bcb)
Called addValidated(edu.wustl.common.audit.AuditableClass@933bcb)
Called removeValidated(edu.wustl.common.audit.AuditableClass@933bcb)
Called isValidated(edu.wustl.common.audit.AuditableClass@933bcb)
Called isValidated(edu.wustl.common.audit.AuditableClass@933bcb)
Called addValidated(edu.wustl.common.audit.AuditableClass@933bcb)
Called removeValidated(edu.wustl.common.audit.AuditableClass@933bcb)
Called isValidated(edu.wustl.common.audit.AuditableClass@933bcb)
Called isValidated(edu.wustl.common.audit.AuditableClass@933bcb)
Called addValidated(edu.wustl.common.audit.AuditableClass@933bcb)
Called removeValidated(edu.wustl.common.audit.AuditableClass@933bcb)
Called isValidated(edu.wustl.common.audit.AuditableClass@933bcb)
Called isValidated(edu.wustl.common.audit.AuditableClass@933bcb)
Called addValidated(edu.wustl.common.audit.AuditableClass@933bcb)
Called removeValidated(edu.wustl.common.audit.AuditableClass@933bcb)
Called removeValidated(edu.wustl.common.audit.AuditableClass@f01771)
Called isValidated(edu.wustl.common.audit.AuditableClass@f01771)
Called isValidated(edu.wustl.common.audit.AuditableClass@f01771)
Called addValidated(edu.wustl.common.audit.AuditableClass@f01771)
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Called isValidated(edu.wustl.common.audit.Attribute@1722456)
Called isValidated(edu.wustl.common.audit.Attribute@1722456)
Called addValidated(edu.wustl.common.audit.Attribute@1722456)
Called removeValidated(edu.wustl.common.audit.Attribute@1722456)
Called isValidated(edu.wustl.common.audit.Attribute@1722456)
Called isValidated(edu.wustl.common.audit.Attribute@1722456)
Called addValidated(edu.wustl.common.audit.Attribute@1722456)
Called removeValidated(edu.wustl.common.audit.Attribute@1722456)
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Called isValidated(edu.wustl.common.audit.Attribute@afa68a)
Called isValidated(edu.wustl.common.audit.Attribute@afa68a)
Called addValidated(edu.wustl.common.audit.Attribute@afa68a)
Called removeValidated(edu.wustl.common.audit.Attribute@afa68a)
Called isValidated(edu.wustl.common.audit.Attribute@afa68a)
Called isValidated(edu.wustl.common.audit.Attribute@afa68a)
Called addValidated(edu.wustl.common.audit.Attribute@afa68a)
Called removeValidated(edu.wustl.common.audit.Attribute@afa68a)
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Called isValidated(edu.wustl.common.audit.Attribute@1dec1dd)
Called isValidated(edu.wustl.common.audit.Attribute@1dec1dd)
Called addValidated(edu.wustl.common.audit.Attribute@1dec1dd)
Called removeValidated(edu.wustl.common.audit.Attribute@1dec1dd)
Called isValidated(edu.wustl.common.audit.Attribute@1dec1dd)
Called isValidated(edu.wustl.common.audit.Attribute@1dec1dd)
Called addValidated(edu.wustl.common.audit.Attribute@1dec1dd)
Called removeValidated(edu.wustl.common.audit.Attribute@1dec1dd)
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Called isValidated(edu.wustl.common.audit.Attribute@189c036)
Called isValidated(edu.wustl.common.audit.Attribute@189c036)
Called addValidated(edu.wustl.common.audit.Attribute@189c036)
Called removeValidated(edu.wustl.common.audit.Attribute@189c036)
Called isValidated(edu.wustl.common.audit.Attribute@189c036)
Called isValidated(edu.wustl.common.audit.Attribute@189c036)
Called addValidated(edu.wustl.common.audit.Attribute@189c036)
Called removeValidated(edu.wustl.common.audit.Attribute@189c036)
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Called isValidated(edu.wustl.common.audit.Attribute@aa233f)
Called isValidated(edu.wustl.common.audit.Attribute@aa233f)
Called addValidated(edu.wustl.common.audit.Attribute@aa233f)
Called removeValidated(edu.wustl.common.audit.Attribute@aa233f)
Called isValidated(edu.wustl.common.audit.Attribute@aa233f)
Called isValidated(edu.wustl.common.audit.Attribute@aa233f)
Called addValidated(edu.wustl.common.audit.Attribute@aa233f)
Called removeValidated(edu.wustl.common.audit.Attribute@aa233f)
Called removeValidated(edu.wustl.common.audit.AuditableClass@f01771)
Called isValidated(edu.wustl.common.audit.AuditableClass@f01771)
Called isValidated(edu.wustl.common.audit.AuditableClass@f01771)
Called addValidated(edu.wustl.common.audit.AuditableClass@f01771)
Called removeValidated(edu.wustl.common.audit.AuditableClass@f01771)
Called isValidated(edu.wustl.common.audit.AuditableClass@f01771)
Called isValidated(edu.wustl.common.audit.AuditableClass@f01771)
Called addValidated(edu.wustl.common.audit.AuditableClass@f01771)
Called removeValidated(edu.wustl.common.audit.AuditableClass@f01771)
Called isValidated(edu.wustl.common.audit.AuditableClass@f01771)
Called isValidated(edu.wustl.common.audit.AuditableClass@f01771)
Called addValidated(edu.wustl.common.audit.AuditableClass@f01771)
Called removeValidated(edu.wustl.common.audit.AuditableClass@f01771)
Called isValidated(edu.wustl.common.audit.AuditableClass@f01771)
Called isValidated(edu.wustl.common.audit.AuditableClass@f01771)
Called addValidated(edu.wustl.common.audit.AuditableClass@f01771)
Called removeValidated(edu.wustl.common.audit.AuditableClass@f01771)
Get descriptor for: edu.wustl.common.audit.AuditableClass found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@3b1f38; descriptor for class: edu.wustl.common.audit.AuditableClass; xml name: auditable-class
Get descriptor for: edu.wustl.common.audit.AuditableClass found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@3b1f38; descriptor for class: edu.wustl.common.audit.AuditableClass; xml name: auditable-class
Called isValidated(edu.wustl.common.audit.AuditableClass@1eb0)
Called isValidated(edu.wustl.common.audit.AuditableClass@1eb0)
Called addValidated(edu.wustl.common.audit.AuditableClass@1eb0)
Called removeValidated(edu.wustl.common.audit.AuditableClass@1eb0)
Called isValidated(edu.wustl.common.audit.AuditableClass@1eb0)
Called isValidated(edu.wustl.common.audit.AuditableClass@1eb0)
Called addValidated(edu.wustl.common.audit.AuditableClass@1eb0)
Called removeValidated(edu.wustl.common.audit.AuditableClass@1eb0)
Called isValidated(edu.wustl.common.audit.AuditableClass@1eb0)
Called isValidated(edu.wustl.common.audit.AuditableClass@1eb0)
Called addValidated(edu.wustl.common.audit.AuditableClass@1eb0)
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Called isValidated(edu.wustl.common.audit.Attribute@1dee400)
Called isValidated(edu.wustl.common.audit.Attribute@1dee400)
Called addValidated(edu.wustl.common.audit.Attribute@1dee400)
Called removeValidated(edu.wustl.common.audit.Attribute@1dee400)
Called isValidated(edu.wustl.common.audit.Attribute@1dee400)
Called isValidated(edu.wustl.common.audit.Attribute@1dee400)
Called addValidated(edu.wustl.common.audit.Attribute@1dee400)
Called removeValidated(edu.wustl.common.audit.Attribute@1dee400)
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Get descriptor for: edu.wustl.common.audit.Attribute found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@fd918a; descriptor for class: edu.wustl.common.audit.Attribute; xml name: attribute
Called isValidated(edu.wustl.common.audit.Attribute@4ac216)
Called isValidated(edu.wustl.common.audit.Attribute@4ac216)
Called addValidated(edu.wustl.common.audit.Attribute@4ac216)
Called removeValidated(edu.wustl.common.audit.Attribute@4ac216)
Called isValidated(edu.wustl.common.audit.Attribute@4ac216)
Called isValidated(edu.wustl.common.audit.Attribute@4ac216)
Called addValidated(edu.wustl.common.audit.Attribute@4ac216)
Called removeValidated(edu.wustl.common.audit.Attribute@4ac216)
Called removeValidated(edu.wustl.common.audit.AuditableClass@1eb0)
Called isValidated(edu.wustl.common.audit.AuditableClass@1eb0)
Called isValidated(edu.wustl.common.audit.AuditableClass@1eb0)
Called addValidated(edu.wustl.common.audit.AuditableClass@1eb0)
Called removeValidated(edu.wustl.common.audit.AuditableClass@1eb0)
Called isValidated(edu.wustl.common.audit.AuditableClass@1eb0)
Called isValidated(edu.wustl.common.audit.AuditableClass@1eb0)
Called addValidated(edu.wustl.common.audit.AuditableClass@1eb0)
Called removeValidated(edu.wustl.common.audit.AuditableClass@1eb0)
Called isValidated(edu.wustl.common.audit.AuditableClass@1eb0)
Called isValidated(edu.wustl.common.audit.AuditableClass@1eb0)
Called addValidated(edu.wustl.common.audit.AuditableClass@1eb0)
Called removeValidated(edu.wustl.common.audit.AuditableClass@1eb0)
Called isValidated(edu.wustl.common.audit.AuditableClass@1eb0)
Called isValidated(edu.wustl.common.audit.AuditableClass@1eb0)
Called addValidated(edu.wustl.common.audit.AuditableClass@1eb0)
Called removeValidated(edu.wustl.common.audit.AuditableClass@1eb0)
Get descriptor for: edu.wustl.common.audit.AuditableClass found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@3b1f38; descriptor for class: edu.wustl.common.audit.AuditableClass; xml name: auditable-class
Get descriptor for: edu.wustl.common.audit.AuditableClass found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@3b1f38; descriptor for class: edu.wustl.common.audit.AuditableClass; xml name: auditable-class
Called isValidated(edu.wustl.common.audit.AuditableClass@c5e9c)
Called isValidated(edu.wustl.common.audit.AuditableClass@c5e9c)
Called addValidated(edu.wustl.common.audit.AuditableClass@c5e9c)
Called removeValidated(edu.wustl.common.audit.AuditableClass@c5e9c)
Called isValidated(edu.wustl.common.audit.AuditableClass@c5e9c)
Called isValidated(edu.wustl.common.audit.AuditableClass@c5e9c)
Called addValidated(edu.wustl.common.audit.AuditableClass@c5e9c)
Called removeValidated(edu.wustl.common.audit.AuditableClass@c5e9c)
Called isValidated(edu.wustl.common.audit.AuditableClass@c5e9c)
Called isValidated(edu.wustl.common.audit.AuditableClass@c5e9c)
Called addValidated(edu.wustl.common.audit.AuditableClass@c5e9c)
Called removeValidated(edu.wustl.common.audit.AuditableClass@c5e9c)
Called isValidated(edu.wustl.common.audit.AuditableClass@c5e9c)
Called isValidated(edu.wustl.common.audit.AuditableClass@c5e9c)
Called addValidated(edu.wustl.common.audit.AuditableClass@c5e9c)
Called removeValidated(edu.wustl.common.audit.AuditableClass@c5e9c)
Called isValidated(edu.wustl.common.audit.AuditableClass@c5e9c)
Called isValidated(edu.wustl.common.audit.AuditableClass@c5e9c)
Called addValidated(edu.wustl.common.audit.AuditableClass@c5e9c)
Called removeValidated(edu.wustl.common.audit.AuditableClass@c5e9c)
Called isValidated(edu.wustl.common.audit.AuditableClass@c5e9c)
Called isValidated(edu.wustl.common.audit.AuditableClass@c5e9c)
Called addValidated(edu.wustl.common.audit.AuditableClass@c5e9c)
Called removeValidated(edu.wustl.common.audit.AuditableClass@c5e9c)
Called isValidated(edu.wustl.common.audit.AuditableClass@c5e9c)
Called isValidated(edu.wustl.common.audit.AuditableClass@c5e9c)
Called addValidated(edu.wustl.common.audit.AuditableClass@c5e9c)
Called removeValidated(edu.wustl.common.audit.AuditableClass@c5e9c)
Get descriptor for: edu.wustl.common.audit.AuditableClass found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@3b1f38; descriptor for class: edu.wustl.common.audit.AuditableClass; xml name: auditable-class
Get descriptor for: edu.wustl.common.audit.AuditableClass found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@3b1f38; descriptor for class: edu.wustl.common.audit.AuditableClass; xml name: auditable-class
Called isValidated(edu.wustl.common.audit.AuditableClass@1777b1)
Called isValidated(edu.wustl.common.audit.AuditableClass@1777b1)
Called addValidated(edu.wustl.common.audit.AuditableClass@1777b1)
Called removeValidated(edu.wustl.common.audit.AuditableClass@1777b1)
Called isValidated(edu.wustl.common.audit.AuditableClass@1777b1)
Called isValidated(edu.wustl.common.audit.AuditableClass@1777b1)
Called addValidated(edu.wustl.common.audit.AuditableClass@1777b1)
Called removeValidated(edu.wustl.common.audit.AuditableClass@1777b1)
Called isValidated(edu.wustl.common.audit.AuditableClass@1777b1)
Called isValidated(edu.wustl.common.audit.AuditableClass@1777b1)
Called addValidated(edu.wustl.common.audit.AuditableClass@1777b1)
Called removeValidated(edu.wustl.common.audit.AuditableClass@1777b1)
Called isValidated(edu.wustl.common.audit.AuditableClass@1777b1)
Called isValidated(edu.wustl.common.audit.AuditableClass@1777b1)
Called addValidated(edu.wustl.common.audit.AuditableClass@1777b1)
Called removeValidated(edu.wustl.common.audit.AuditableClass@1777b1)
Called isValidated(edu.wustl.common.audit.AuditableClass@1777b1)
Called isValidated(edu.wustl.common.audit.AuditableClass@1777b1)
Called addValidated(edu.wustl.common.audit.AuditableClass@1777b1)
Called removeValidated(edu.wustl.common.audit.AuditableClass@1777b1)
Called isValidated(edu.wustl.common.audit.AuditableClass@1777b1)
Called isValidated(edu.wustl.common.audit.AuditableClass@1777b1)
Called addValidated(edu.wustl.common.audit.AuditableClass@1777b1)
Called removeValidated(edu.wustl.common.audit.AuditableClass@1777b1)
Called isValidated(edu.wustl.common.audit.AuditableClass@1777b1)
Called isValidated(edu.wustl.common.audit.AuditableClass@1777b1)
Called addValidated(edu.wustl.common.audit.AuditableClass@1777b1)
Called removeValidated(edu.wustl.common.audit.AuditableClass@1777b1)
Get descriptor for: edu.wustl.common.audit.AuditableClass found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@3b1f38; descriptor for class: edu.wustl.common.audit.AuditableClass; xml name: auditable-class
Get descriptor for: edu.wustl.common.audit.AuditableClass found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@3b1f38; descriptor for class: edu.wustl.common.audit.AuditableClass; xml name: auditable-class
Called isValidated(edu.wustl.common.audit.AuditableClass@b3319f)
Called isValidated(edu.wustl.common.audit.AuditableClass@b3319f)
Called addValidated(edu.wustl.common.audit.AuditableClass@b3319f)
Called removeValidated(edu.wustl.common.audit.AuditableClass@b3319f)
Called isValidated(edu.wustl.common.audit.AuditableClass@b3319f)
Called isValidated(edu.wustl.common.audit.AuditableClass@b3319f)
Called addValidated(edu.wustl.common.audit.AuditableClass@b3319f)
Called removeValidated(edu.wustl.common.audit.AuditableClass@b3319f)
Called isValidated(edu.wustl.common.audit.AuditableClass@b3319f)
Called isValidated(edu.wustl.common.audit.AuditableClass@b3319f)
Called addValidated(edu.wustl.common.audit.AuditableClass@b3319f)
Called removeValidated(edu.wustl.common.audit.AuditableClass@b3319f)
Called isValidated(edu.wustl.common.audit.AuditableClass@b3319f)
Called isValidated(edu.wustl.common.audit.AuditableClass@b3319f)
Called addValidated(edu.wustl.common.audit.AuditableClass@b3319f)
Called removeValidated(edu.wustl.common.audit.AuditableClass@b3319f)
Called isValidated(edu.wustl.common.audit.AuditableClass@b3319f)
Called isValidated(edu.wustl.common.audit.AuditableClass@b3319f)
Called addValidated(edu.wustl.common.audit.AuditableClass@b3319f)
Called removeValidated(edu.wustl.common.audit.AuditableClass@b3319f)
Called isValidated(edu.wustl.common.audit.AuditableClass@b3319f)
Called isValidated(edu.wustl.common.audit.AuditableClass@b3319f)
Called addValidated(edu.wustl.common.audit.AuditableClass@b3319f)
Called removeValidated(edu.wustl.common.audit.AuditableClass@b3319f)
Called isValidated(edu.wustl.common.audit.AuditableClass@b3319f)
Called isValidated(edu.wustl.common.audit.AuditableClass@b3319f)
Called addValidated(edu.wustl.common.audit.AuditableClass@b3319f)
Called removeValidated(edu.wustl.common.audit.AuditableClass@b3319f)
Get descriptor for: edu.wustl.common.audit.AuditableClass found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@3b1f38; descriptor for class: edu.wustl.common.audit.AuditableClass; xml name: auditable-class
Get descriptor for: edu.wustl.common.audit.AuditableClass found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@3b1f38; descriptor for class: edu.wustl.common.audit.AuditableClass; xml name: auditable-class
Called isValidated(edu.wustl.common.audit.AuditableClass@7ecd78)
Called isValidated(edu.wustl.common.audit.AuditableClass@7ecd78)
Called addValidated(edu.wustl.common.audit.AuditableClass@7ecd78)
Called removeValidated(edu.wustl.common.audit.AuditableClass@7ecd78)
Called isValidated(edu.wustl.common.audit.AuditableClass@7ecd78)
Called isValidated(edu.wustl.common.audit.AuditableClass@7ecd78)
Called addValidated(edu.wustl.common.audit.AuditableClass@7ecd78)
Called removeValidated(edu.wustl.common.audit.AuditableClass@7ecd78)
Called isValidated(edu.wustl.common.audit.AuditableClass@7ecd78)
Called isValidated(edu.wustl.common.audit.AuditableClass@7ecd78)
Called addValidated(edu.wustl.common.audit.AuditableClass@7ecd78)
Called removeValidated(edu.wustl.common.audit.AuditableClass@7ecd78)
Called isValidated(edu.wustl.common.audit.AuditableClass@7ecd78)
Called isValidated(edu.wustl.common.audit.AuditableClass@7ecd78)
Called addValidated(edu.wustl.common.audit.AuditableClass@7ecd78)
Called removeValidated(edu.wustl.common.audit.AuditableClass@7ecd78)
Called isValidated(edu.wustl.common.audit.AuditableClass@7ecd78)
Called isValidated(edu.wustl.common.audit.AuditableClass@7ecd78)
Called addValidated(edu.wustl.common.audit.AuditableClass@7ecd78)
Called removeValidated(edu.wustl.common.audit.AuditableClass@7ecd78)
Called isValidated(edu.wustl.common.audit.AuditableClass@7ecd78)
Called isValidated(edu.wustl.common.audit.AuditableClass@7ecd78)
Called addValidated(edu.wustl.common.audit.AuditableClass@7ecd78)
Called removeValidated(edu.wustl.common.audit.AuditableClass@7ecd78)
Called isValidated(edu.wustl.common.audit.AuditableClass@7ecd78)
Called isValidated(edu.wustl.common.audit.AuditableClass@7ecd78)
Called addValidated(edu.wustl.common.audit.AuditableClass@7ecd78)
Called removeValidated(edu.wustl.common.audit.AuditableClass@7ecd78)
Get descriptor for: edu.wustl.common.audit.AuditableClass found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@3b1f38; descriptor for class: edu.wustl.common.audit.AuditableClass; xml name: auditable-class
Get descriptor for: edu.wustl.common.audit.AuditableClass found: org.exolab.castor.xml.util.XMLClassDescriptorAdapter@3b1f38; descriptor for class: edu.wustl.common.audit.AuditableClass; xml name: auditable-class
Called isValidated(edu.wustl.common.audit.AuditableClass@e3849c)
Called isValidated(edu.wustl.common.audit.AuditableClass@e3849c)
Called addValidated(edu.wustl.common.audit.AuditableClass@e3849c)
Called removeValidated(edu.wustl.common.audit.AuditableClass@e3849c)
Called isValidated(edu.wustl.common.audit.AuditableClass@e3849c)
Called isValidated(edu.wustl.common.audit.AuditableClass@e3849c)
Called addValidated(edu.wustl.common.audit.AuditableClass@e3849c)
Called removeValidated(edu.wustl.common.audit.AuditableClass@e3849c)
Called isValidated(edu.wustl.common.audit.AuditableClass@e3849c)
Called isValidated(edu.wustl.common.audit.AuditableClass@e3849c)
Called addValidated(edu.wustl.common.audit.AuditableClass@e3849c)
Called removeValidated(edu.wustl.common.audit.AuditableClass@e3849c)
Called isValidated(edu.wustl.common.audit.AuditableClass@e3849c)
Called isValidated(edu.wustl.common.audit.AuditableClass@e3849c)
Called addValidated(edu.wustl.common.audit.AuditableClass@e3849c)
Called removeValidated(edu.wustl.common.audit.AuditableClass@e3849c)
Called isValidated(edu.wustl.common.audit.AuditableClass@e3849c)
Called isValidated(edu.wustl.common.audit.AuditableClass@e3849c)
Called addValidated(edu.wustl.common.audit.AuditableClass@e3849c)
Called removeValidated(edu.wustl.common.audit.AuditableClass@e3849c)
Called isValidated(edu.wustl.common.audit.AuditableClass@e3849c)
Called isValidated(edu.wustl.common.audit.AuditableClass@e3849c)
Called addValidated(edu.wustl.common.audit.AuditableClass@e3849c)
Called removeValidated(edu.wustl.common.audit.AuditableClass@e3849c)
Called isValidated(edu.wustl.common.audit.AuditableClass@e3849c)
Called isValidated(edu.wustl.common.audit.AuditableClass@e3849c)
Called addValidated(edu.wustl.common.audit.AuditableClass@e3849c)
Called removeValidated(edu.wustl.common.audit.AuditableClass@e3849c)
Called removeValidated(edu.wustl.common.audit.AuditableMetaData@1a8773c)
Open the session
opened session at timestamp: 5163164383490048
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
begin
current autocommit status: false
after transaction begin
Insert Object
saving transient instance
saving [test.Person#<null>]
executing insertions
processing cascade ACTION_SAVE_UPDATE for: test.Person
cascading to saveOrUpdate: test.Address
transient instance of: test.Address
saving transient instance
saving [test.Address#<null>]
executing insertions
Inserting entity: test.Address (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into test_address (STREET) values (?)
preparing statement
Dehydrating entity: [test.Address#<null>]
binding 'Street unknown' to parameter: 1
Natively generated identity: 115
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
done processing cascade ACTION_SAVE_UPDATE for: test.Person
Wrapped collection in role: test.Person.orderCollection
Inserting entity: test.Person (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into test_person (NAME, ADDRESS_ID) values (?, ?)
preparing statement
Dehydrating entity: [test.Person#<null>]
binding 'Kalpana' to parameter: 1
binding '115' to parameter: 2
Natively generated identity: 1
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
processing cascade ACTION_SAVE_UPDATE for: test.Person
cascade ACTION_SAVE_UPDATE for collection: test.Person.orderCollection
cascading to saveOrUpdate: test.Order
transient instance of: test.Order
saving transient instance
saving [test.Order#<null>]
executing insertions
Inserting entity: test.Order (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into test_order (person_id, user_id) values (?, ?)
preparing statement
Dehydrating entity: [test.Order#<null>]
binding '1' to parameter: 1
binding null to parameter: 2
Natively generated identity: 1
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: test.Order
transient instance of: test.Order
saving transient instance
saving [test.Order#<null>]
executing insertions
Inserting entity: test.Order (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into test_order (person_id, user_id) values (?, ?)
preparing statement
Dehydrating entity: [test.Order#<null>]
binding '1' to parameter: 1
binding null to parameter: 2
Natively generated identity: 2
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
done cascade ACTION_SAVE_UPDATE for collection: test.Person.orderCollection
deleting orphans for collection: test.Person.orderCollection
done deleting orphans for collection: test.Person.orderCollection
done processing cascade ACTION_SAVE_UPDATE for: test.Person
Inside isObjectAuditable method.
Inside obtainAuditableEventLog method.
Inside startAuditing method.
Inside auditReferenceAssociations method.
Inside auditContainmentAssociation method.
Inside auditContainmentsforNewEntry method.
Inside obtainAuditableEventLog method.
Inside startAuditing method.
Inside auditReferenceAssociations method.
Inside auditContainmentAssociation method.
Inside obtainAuditableEventLog method.
Inside startAuditing method.
Inside auditReferenceAssociations method.
Inside auditContainmentAssociation method.
Inside auditContainmentsforNewEntry method.
Inside obtainAuditableEventLog method.
Inside startAuditing method.
Inside auditReferenceAssociations method.
Inside auditContainmentAssociation method.
saving transient instance
saving [edu.wustl.common.domain.AuditEvent#<null>]
executing insertions
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
Wrapped collection in role: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
Inserting entity: edu.wustl.common.domain.AuditEvent (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT (EVENT_TIMESTAMP, USER_ID, EVENT_TYPE, COMMENTS, IP_ADDRESS) values (?, ?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEvent#<null>]
binding '2009-12-11 18:59:39' to parameter: 1
binding null to parameter: 2
binding 'INSERT' to parameter: 3
binding null to parameter: 4
binding null to parameter: 5
Natively generated identity: 1
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AbstractAuditEventLog
transient instance of: edu.wustl.common.domain.AbstractAuditEventLog
saving transient instance
saving [edu.wustl.common.domain.AuditDataEventLog#<null>]
executing insertions
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
Wrapped collection in role: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
Wrapped collection in role: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
Inserting entity: edu.wustl.common.domain.AuditDataEventLog (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_LOG (AUDIT_EVENT_ID) values (?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditDataEventLog#<null>]
binding '1' to parameter: 1
Natively generated identity: 1
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
Inserting entity: [edu.wustl.common.domain.AuditDataEventLog#1]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_DATA_AUDIT_EVENT_LOG (OBJECT_IDENTIFIER, OBJECT_NAME, IDENTIFIER) values (?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditDataEventLog#1]
binding '1' to parameter: 1
binding 'test_order' to parameter: 2
binding '1' to parameter: 3
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'IDENTIFIER' to parameter: 1
binding null to parameter: 2
binding '1' to parameter: 3
binding '1' to parameter: 4
Natively generated identity: 1
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'person_id' to parameter: 1
binding null to parameter: 2
binding '1' to parameter: 3
binding '1' to parameter: 4
Natively generated identity: 2
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascading to saveOrUpdate: edu.wustl.common.domain.AbstractAuditEventLog
transient instance of: edu.wustl.common.domain.AbstractAuditEventLog
saving transient instance
saving [edu.wustl.common.domain.AuditDataEventLog#<null>]
executing insertions
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
Wrapped collection in role: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
Wrapped collection in role: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
Inserting entity: edu.wustl.common.domain.AuditDataEventLog (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_LOG (AUDIT_EVENT_ID) values (?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditDataEventLog#<null>]
binding '1' to parameter: 1
Natively generated identity: 2
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
Inserting entity: [edu.wustl.common.domain.AuditDataEventLog#2]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_DATA_AUDIT_EVENT_LOG (OBJECT_IDENTIFIER, OBJECT_NAME, IDENTIFIER) values (?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditDataEventLog#2]
binding '115' to parameter: 1
binding 'test_address' to parameter: 2
binding '2' to parameter: 3
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'STREET' to parameter: 1
binding null to parameter: 2
binding 'Street unknown' to parameter: 3
binding '2' to parameter: 4
Natively generated identity: 3
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'IDENTIFIER' to parameter: 1
binding null to parameter: 2
binding '115' to parameter: 3
binding '2' to parameter: 4
Natively generated identity: 4
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascading to saveOrUpdate: edu.wustl.common.domain.AbstractAuditEventLog
transient instance of: edu.wustl.common.domain.AbstractAuditEventLog
saving transient instance
saving [edu.wustl.common.domain.AuditDataEventLog#<null>]
executing insertions
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
Wrapped collection in role: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
Wrapped collection in role: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
Inserting entity: edu.wustl.common.domain.AuditDataEventLog (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_LOG (AUDIT_EVENT_ID) values (?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditDataEventLog#<null>]
binding '1' to parameter: 1
Natively generated identity: 3
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
Inserting entity: [edu.wustl.common.domain.AuditDataEventLog#3]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_DATA_AUDIT_EVENT_LOG (OBJECT_IDENTIFIER, OBJECT_NAME, IDENTIFIER) values (?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditDataEventLog#3]
binding '2' to parameter: 1
binding 'test_order' to parameter: 2
binding '3' to parameter: 3
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'person_id' to parameter: 1
binding null to parameter: 2
binding '1' to parameter: 3
binding '3' to parameter: 4
Natively generated identity: 5
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'IDENTIFIER' to parameter: 1
binding null to parameter: 2
binding '2' to parameter: 3
binding '3' to parameter: 4
Natively generated identity: 6
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascading to saveOrUpdate: edu.wustl.common.domain.AbstractAuditEventLog
transient instance of: edu.wustl.common.domain.AbstractAuditEventLog
saving transient instance
saving [edu.wustl.common.domain.AuditDataEventLog#<null>]
executing insertions
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
Wrapped collection in role: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
Wrapped collection in role: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
Inserting entity: edu.wustl.common.domain.AuditDataEventLog (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_LOG (AUDIT_EVENT_ID) values (?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditDataEventLog#<null>]
binding '1' to parameter: 1
Natively generated identity: 4
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
Inserting entity: [edu.wustl.common.domain.AuditDataEventLog#4]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_DATA_AUDIT_EVENT_LOG (OBJECT_IDENTIFIER, OBJECT_NAME, IDENTIFIER) values (?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditDataEventLog#4]
binding '1' to parameter: 1
binding 'test_person' to parameter: 2
binding '4' to parameter: 3
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
cascading to saveOrUpdate: edu.wustl.common.domain.AuditDataEventLog
persistent instance of: edu.wustl.common.domain.AuditDataEventLog
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditDataEventLog#1]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditDataEventLog
persistent instance of: edu.wustl.common.domain.AuditDataEventLog
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditDataEventLog#2]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditDataEventLog
persistent instance of: edu.wustl.common.domain.AuditDataEventLog
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditDataEventLog#3]
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'NAME' to parameter: 1
binding null to parameter: 2
binding 'Kalpana' to parameter: 3
binding '4' to parameter: 4
Natively generated identity: 7
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'IDENTIFIER' to parameter: 1
binding null to parameter: 2
binding '1' to parameter: 3
binding '4' to parameter: 4
Natively generated identity: 8
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'test.Order_PREV_CURR_IDS_LIST' to parameter: 1
binding null to parameter: 2
binding '1:2' to parameter: 3
binding '4' to parameter: 4
Natively generated identity: 9
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'ADDRESS_ID' to parameter: 1
binding null to parameter: 2
binding '115' to parameter: 3
binding '4' to parameter: 4
Natively generated identity: 10
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'test.Address_PREV_CURR_IDS_LIST' to parameter: 1
binding null to parameter: 2
binding '115' to parameter: 3
binding '4' to parameter: 4
Natively generated identity: 11
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
Session commit
commit
automatically flushing session
flushing session
processing flush-time cascades
processing cascade ACTION_SAVE_UPDATE for: test.Person
cascading to saveOrUpdate: test.Address
persistent instance of: test.Address
ignoring persistent instance
object already associated with session: [test.Address#115]
cascade ACTION_SAVE_UPDATE for collection: test.Person.orderCollection
cascading to saveOrUpdate: test.Order
persistent instance of: test.Order
ignoring persistent instance
object already associated with session: [test.Order#1]
cascading to saveOrUpdate: test.Order
persistent instance of: test.Order
ignoring persistent instance
object already associated with session: [test.Order#2]
done cascade ACTION_SAVE_UPDATE for collection: test.Person.orderCollection
deleting orphans for collection: test.Person.orderCollection
done deleting orphans for collection: test.Person.orderCollection
done processing cascade ACTION_SAVE_UPDATE for: test.Person
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AbstractAuditEventLog
persistent instance of: edu.wustl.common.domain.AbstractAuditEventLog
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditDataEventLog#1]
cascading to saveOrUpdate: edu.wustl.common.domain.AbstractAuditEventLog
persistent instance of: edu.wustl.common.domain.AbstractAuditEventLog
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditDataEventLog#2]
cascading to saveOrUpdate: edu.wustl.common.domain.AbstractAuditEventLog
persistent instance of: edu.wustl.common.domain.AbstractAuditEventLog
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditDataEventLog#3]
cascading to saveOrUpdate: edu.wustl.common.domain.AbstractAuditEventLog
persistent instance of: edu.wustl.common.domain.AbstractAuditEventLog
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditDataEventLog#4]
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#1]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#2]
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#3]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#4]
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#5]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#6]
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
cascading to saveOrUpdate: edu.wustl.common.domain.AuditDataEventLog
persistent instance of: edu.wustl.common.domain.AuditDataEventLog
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditDataEventLog#1]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditDataEventLog
persistent instance of: edu.wustl.common.domain.AuditDataEventLog
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditDataEventLog#2]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditDataEventLog
persistent instance of: edu.wustl.common.domain.AuditDataEventLog
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditDataEventLog#3]
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#7]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#8]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#9]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#10]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#11]
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
dirty checking collections
Flushing entities and processing referenced collections
Collection found: [test.Person.orderCollection#1], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditEvent.auditEventLogCollection#1], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs#1], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection#1], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs#2], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection#2], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs#3], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection#3], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs#4], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection#4], was: [<unreferenced>] (initialized)
Processing unreferenced collections
Scheduling collection removes/(re)creates/updates
Flushed: 0 insertions, 0 updates, 0 deletions to 20 objects
Flushed: 10 (re)creations, 0 updates, 0 removals to 10 collections
listing entities:
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#3, currentValue=2, previousValue=null, elementName=IDENTIFIER, id=6}
edu.wustl.common.domain.AuditEvent{comments=null, userId=null, auditEventLogCollection=[edu.wustl.common.domain.AbstractAuditEventLog#1, edu.wustl.common.domain.AbstractAuditEventLog#2, edu.wustl.common.domain.AbstractAuditEventLog#3, edu.wustl.common.domain.AbstractAuditEventLog#4], ipAddress=null, timestamp=2009-12-11 18:59:39, eventType=INSERT, id=1}
test.Person{orderCollection=[test.Order#1, test.Order#2], address=test.Address#115, name=Kalpana, id=1}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#1, currentValue=1, previousValue=null, elementName=person_id, id=2}
edu.wustl.common.domain.AuditDataEventLog{objectName=test_order, objectIdentifier=2, auditEventDetailsCollection=[edu.wustl.common.domain.AuditEventDetails#5, edu.wustl.common.domain.AuditEventDetails#6], auditEvent=edu.wustl.common.domain.AuditEvent#1, auditDataEventLogs=[], id=3}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#4, currentValue=115, previousValue=null, elementName=test.Address_PREV_CURR_IDS_LIST, id=11}
test.Order{user=null, person=test.Person#1, id=1}
edu.wustl.common.domain.AuditDataEventLog{objectName=test_address, objectIdentifier=115, auditEventDetailsCollection=[edu.wustl.common.domain.AuditEventDetails#3, edu.wustl.common.domain.AuditEventDetails#4], auditEvent=edu.wustl.common.domain.AuditEvent#1, auditDataEventLogs=[], id=2}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#3, currentValue=1, previousValue=null, elementName=person_id, id=5}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#1, currentValue=1, previousValue=null, elementName=IDENTIFIER, id=1}
edu.wustl.common.domain.AuditDataEventLog{objectName=test_person, objectIdentifier=1, auditEventDetailsCollection=[edu.wustl.common.domain.AuditEventDetails#7, edu.wustl.common.domain.AuditEventDetails#8, edu.wustl.common.domain.AuditEventDetails#9, edu.wustl.common.domain.AuditEventDetails#10, edu.wustl.common.domain.AuditEventDetails#11], auditEvent=edu.wustl.common.domain.AuditEvent#1, auditDataEventLogs=[edu.wustl.common.domain.AuditDataEventLog#1, edu.wustl.common.domain.AuditDataEventLog#2, edu.wustl.common.domain.AuditDataEventLog#3], id=4}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#2, currentValue=115, previousValue=null, elementName=IDENTIFIER, id=4}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#4, currentValue=1:2, previousValue=null, elementName=test.Order_PREV_CURR_IDS_LIST, id=9}
test.Order{user=null, person=test.Person#1, id=2}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#4, currentValue=1, previousValue=null, elementName=IDENTIFIER, id=8}
edu.wustl.common.domain.AuditDataEventLog{objectName=test_order, objectIdentifier=1, auditEventDetailsCollection=[edu.wustl.common.domain.AuditEventDetails#1, edu.wustl.common.domain.AuditEventDetails#2], auditEvent=edu.wustl.common.domain.AuditEvent#1, auditDataEventLogs=[], id=1}
test.Address{street=Street unknown, id=115}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#4, currentValue=115, previousValue=null, elementName=ADDRESS_ID, id=10}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#2, currentValue=Street unknown, previousValue=null, elementName=STREET, id=3}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#4, currentValue=Kalpana, previousValue=null, elementName=NAME, id=7}
executing flush
registering flush begin
Invalidating: test.Person.orderCollection#1
key: test.Person.orderCollection#1
test.Person.orderCollectionCache: test.Person.orderCollectionMemoryStore miss for test.Person.orderCollection#1
test.Person.orderCollection cache - Miss
Element for test.Person.orderCollection#1 is null
Inserting collection: [edu.wustl.common.domain.AuditEvent.auditEventLogCollection#1]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
update CATISSUE_AUDIT_EVENT_LOG set AUDIT_EVENT_ID=? where IDENTIFIER=?
preparing statement
binding '1' to parameter: 1
binding '1' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_LOG set AUDIT_EVENT_ID=? where IDENTIFIER=?
binding '1' to parameter: 1
binding '2' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_LOG set AUDIT_EVENT_ID=? where IDENTIFIER=?
binding '1' to parameter: 1
binding '3' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_LOG set AUDIT_EVENT_ID=? where IDENTIFIER=?
binding '1' to parameter: 1
binding '4' to parameter: 2
Adding to batch
done inserting collection: 4 rows inserted
Inserting collection: [edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs#1]
collection was empty
Inserting collection: [edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection#1]
Executing batch size: 4
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
preparing statement
binding '1' to parameter: 1
binding '1' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '1' to parameter: 1
binding '2' to parameter: 2
Adding to batch
done inserting collection: 2 rows inserted
Inserting collection: [edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs#2]
collection was empty
Inserting collection: [edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection#2]
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '2' to parameter: 1
binding '3' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '2' to parameter: 1
binding '4' to parameter: 2
Adding to batch
done inserting collection: 2 rows inserted
Inserting collection: [edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs#3]
collection was empty
Inserting collection: [edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection#3]
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '3' to parameter: 1
binding '5' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '3' to parameter: 1
binding '6' to parameter: 2
Adding to batch
done inserting collection: 2 rows inserted
Inserting collection: [edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs#4]
Executing batch size: 6
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
update CATISSUE_DATA_AUDIT_EVENT_LOG set PARENT_LOG_ID=? where IDENTIFIER=?
preparing statement
binding '4' to parameter: 1
binding '1' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_DATA_AUDIT_EVENT_LOG set PARENT_LOG_ID=? where IDENTIFIER=?
binding '4' to parameter: 1
binding '2' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_DATA_AUDIT_EVENT_LOG set PARENT_LOG_ID=? where IDENTIFIER=?
binding '4' to parameter: 1
binding '3' to parameter: 2
Adding to batch
done inserting collection: 3 rows inserted
Inserting collection: [edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection#4]
Executing batch size: 3
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
preparing statement
binding '4' to parameter: 1
binding '7' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '4' to parameter: 1
binding '8' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '4' to parameter: 1
binding '9' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '4' to parameter: 1
binding '10' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '4' to parameter: 1
binding '11' to parameter: 2
Adding to batch
done inserting collection: 5 rows inserted
Executing batch size: 5
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
registering flush end
post flush
before transaction completion
before transaction completion
committed JDBC Connection
after transaction completion
aggressively releasing JDBC connection
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
after transaction completion
Releasing: test.Person.orderCollection#1
key: test.Person.orderCollection#1
test.Person.orderCollectionCache: test.Person.orderCollectionMemoryStore hit for test.Person.orderCollection#1
Close the session
closing session
connection already null in cleanup : no action
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5163164385280001
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
begin
current autocommit status: false
after transaction begin
Insert Object
saving transient instance
saving [test.User#<null>]
executing insertions
processing cascade ACTION_SAVE_UPDATE for: test.User
done processing cascade ACTION_SAVE_UPDATE for: test.User
Wrapped collection in role: test.User.orderCollection
Inserting entity: test.User (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into test_user (EMAIL_ADDRESS, FIRST_NAME, LAST_NAME, ACTIVITY_STATUS) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [test.User#<null>]
binding 'kalpana@kalpana.com' to parameter: 1
binding 'kalpana' to parameter: 2
binding 'Thakur' to parameter: 3
binding 'Active' to parameter: 4
Natively generated identity: 1
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
processing cascade ACTION_SAVE_UPDATE for: test.User
cascade ACTION_SAVE_UPDATE for collection: test.User.orderCollection
cascading to saveOrUpdate: test.Order
transient instance of: test.Order
saving transient instance
saving [test.Order#<null>]
executing insertions
Inserting entity: test.Order (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into test_order (person_id, user_id) values (?, ?)
preparing statement
Dehydrating entity: [test.Order#<null>]
binding null to parameter: 1
binding '1' to parameter: 2
Natively generated identity: 3
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: test.Order
transient instance of: test.Order
saving transient instance
saving [test.Order#<null>]
executing insertions
Inserting entity: test.Order (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into test_order (person_id, user_id) values (?, ?)
preparing statement
Dehydrating entity: [test.Order#<null>]
binding null to parameter: 1
binding '1' to parameter: 2
Natively generated identity: 4
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
done cascade ACTION_SAVE_UPDATE for collection: test.User.orderCollection
deleting orphans for collection: test.User.orderCollection
done deleting orphans for collection: test.User.orderCollection
done processing cascade ACTION_SAVE_UPDATE for: test.User
Inside isObjectAuditable method.
Inside obtainAuditableEventLog method.
Inside startAuditing method.
Inside auditReferenceAssociations method.
Inside auditContainmentAssociation method.
saving transient instance
saving [edu.wustl.common.domain.AuditEvent#<null>]
executing insertions
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
Wrapped collection in role: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
Inserting entity: edu.wustl.common.domain.AuditEvent (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT (EVENT_TIMESTAMP, USER_ID, EVENT_TYPE, COMMENTS, IP_ADDRESS) values (?, ?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEvent#<null>]
binding '2009-12-11 18:59:40' to parameter: 1
binding null to parameter: 2
binding 'INSERT' to parameter: 3
binding null to parameter: 4
binding null to parameter: 5
Natively generated identity: 2
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AbstractAuditEventLog
transient instance of: edu.wustl.common.domain.AbstractAuditEventLog
saving transient instance
saving [edu.wustl.common.domain.AuditDataEventLog#<null>]
executing insertions
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
Wrapped collection in role: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
Wrapped collection in role: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
Inserting entity: edu.wustl.common.domain.AuditDataEventLog (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_LOG (AUDIT_EVENT_ID) values (?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditDataEventLog#<null>]
binding '2' to parameter: 1
Natively generated identity: 5
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
Inserting entity: [edu.wustl.common.domain.AuditDataEventLog#5]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_DATA_AUDIT_EVENT_LOG (OBJECT_IDENTIFIER, OBJECT_NAME, IDENTIFIER) values (?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditDataEventLog#5]
binding '1' to parameter: 1
binding 'test_user' to parameter: 2
binding '5' to parameter: 3
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'FIRST_NAME' to parameter: 1
binding null to parameter: 2
binding 'kalpana' to parameter: 3
binding '5' to parameter: 4
Natively generated identity: 12
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'IDENTIFIER' to parameter: 1
binding null to parameter: 2
binding '1' to parameter: 3
binding '5' to parameter: 4
Natively generated identity: 13
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'test.Order_PREV_CURR_IDS_LIST' to parameter: 1
binding null to parameter: 2
binding '3:4' to parameter: 3
binding '5' to parameter: 4
Natively generated identity: 14
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'ACTIVITY_STATUS' to parameter: 1
binding null to parameter: 2
binding 'Active' to parameter: 3
binding '5' to parameter: 4
Natively generated identity: 15
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'EMAIL_ADDRESS' to parameter: 1
binding null to parameter: 2
binding 'kalpana@kalpana.com' to parameter: 3
binding '5' to parameter: 4
Natively generated identity: 16
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'LAST_NAME' to parameter: 1
binding null to parameter: 2
binding 'Thakur' to parameter: 3
binding '5' to parameter: 4
Natively generated identity: 17
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
Insert Object
saving transient instance
saving [test.User#<null>]
executing insertions
processing cascade ACTION_SAVE_UPDATE for: test.User
done processing cascade ACTION_SAVE_UPDATE for: test.User
Wrapped collection in role: test.User.orderCollection
Inserting entity: test.User (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into test_user (EMAIL_ADDRESS, FIRST_NAME, LAST_NAME, ACTIVITY_STATUS) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [test.User#<null>]
binding 'kalpana@kalpana.com' to parameter: 1
binding 'kalpana' to parameter: 2
binding 'Thakur' to parameter: 3
binding 'Active' to parameter: 4
Natively generated identity: 2
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
processing cascade ACTION_SAVE_UPDATE for: test.User
cascade ACTION_SAVE_UPDATE for collection: test.User.orderCollection
cascading to saveOrUpdate: test.Order
transient instance of: test.Order
saving transient instance
saving [test.Order#<null>]
executing insertions
Inserting entity: test.Order (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into test_order (person_id, user_id) values (?, ?)
preparing statement
Dehydrating entity: [test.Order#<null>]
binding null to parameter: 1
binding '2' to parameter: 2
Natively generated identity: 5
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: test.Order
transient instance of: test.Order
saving transient instance
saving [test.Order#<null>]
executing insertions
Inserting entity: test.Order (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into test_order (person_id, user_id) values (?, ?)
preparing statement
Dehydrating entity: [test.Order#<null>]
binding null to parameter: 1
binding '2' to parameter: 2
Natively generated identity: 6
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
done cascade ACTION_SAVE_UPDATE for collection: test.User.orderCollection
deleting orphans for collection: test.User.orderCollection
done deleting orphans for collection: test.User.orderCollection
done processing cascade ACTION_SAVE_UPDATE for: test.User
Inside isObjectAuditable method.
Inside obtainAuditableEventLog method.
Inside startAuditing method.
Inside auditReferenceAssociations method.
Inside auditContainmentAssociation method.
saving transient instance
saving [edu.wustl.common.domain.AuditEvent#<null>]
executing insertions
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
Wrapped collection in role: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
Inserting entity: edu.wustl.common.domain.AuditEvent (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT (EVENT_TIMESTAMP, USER_ID, EVENT_TYPE, COMMENTS, IP_ADDRESS) values (?, ?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEvent#<null>]
binding '2009-12-11 18:59:40' to parameter: 1
binding null to parameter: 2
binding 'INSERT' to parameter: 3
binding null to parameter: 4
binding null to parameter: 5
Natively generated identity: 3
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AbstractAuditEventLog
transient instance of: edu.wustl.common.domain.AbstractAuditEventLog
saving transient instance
saving [edu.wustl.common.domain.AuditDataEventLog#<null>]
executing insertions
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
Wrapped collection in role: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
Wrapped collection in role: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
Inserting entity: edu.wustl.common.domain.AuditDataEventLog (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_LOG (AUDIT_EVENT_ID) values (?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditDataEventLog#<null>]
binding '3' to parameter: 1
Natively generated identity: 6
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
Inserting entity: [edu.wustl.common.domain.AuditDataEventLog#6]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_DATA_AUDIT_EVENT_LOG (OBJECT_IDENTIFIER, OBJECT_NAME, IDENTIFIER) values (?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditDataEventLog#6]
binding '2' to parameter: 1
binding 'test_user' to parameter: 2
binding '6' to parameter: 3
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'FIRST_NAME' to parameter: 1
binding null to parameter: 2
binding 'kalpana' to parameter: 3
binding '6' to parameter: 4
Natively generated identity: 18
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'IDENTIFIER' to parameter: 1
binding null to parameter: 2
binding '2' to parameter: 3
binding '6' to parameter: 4
Natively generated identity: 19
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'test.Order_PREV_CURR_IDS_LIST' to parameter: 1
binding null to parameter: 2
binding '5:6' to parameter: 3
binding '6' to parameter: 4
Natively generated identity: 20
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'ACTIVITY_STATUS' to parameter: 1
binding null to parameter: 2
binding 'Active' to parameter: 3
binding '6' to parameter: 4
Natively generated identity: 21
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'EMAIL_ADDRESS' to parameter: 1
binding null to parameter: 2
binding 'kalpana@kalpana.com' to parameter: 3
binding '6' to parameter: 4
Natively generated identity: 22
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'LAST_NAME' to parameter: 1
binding null to parameter: 2
binding 'Thakur' to parameter: 3
binding '6' to parameter: 4
Natively generated identity: 23
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
Session commit
commit
automatically flushing session
flushing session
processing flush-time cascades
processing cascade ACTION_SAVE_UPDATE for: test.User
cascade ACTION_SAVE_UPDATE for collection: test.User.orderCollection
cascading to saveOrUpdate: test.Order
persistent instance of: test.Order
ignoring persistent instance
object already associated with session: [test.Order#3]
cascading to saveOrUpdate: test.Order
persistent instance of: test.Order
ignoring persistent instance
object already associated with session: [test.Order#4]
done cascade ACTION_SAVE_UPDATE for collection: test.User.orderCollection
deleting orphans for collection: test.User.orderCollection
done deleting orphans for collection: test.User.orderCollection
done processing cascade ACTION_SAVE_UPDATE for: test.User
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AbstractAuditEventLog
persistent instance of: edu.wustl.common.domain.AbstractAuditEventLog
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditDataEventLog#5]
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#12]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#13]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#14]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#15]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#16]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#17]
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
processing cascade ACTION_SAVE_UPDATE for: test.User
cascade ACTION_SAVE_UPDATE for collection: test.User.orderCollection
cascading to saveOrUpdate: test.Order
persistent instance of: test.Order
ignoring persistent instance
object already associated with session: [test.Order#5]
cascading to saveOrUpdate: test.Order
persistent instance of: test.Order
ignoring persistent instance
object already associated with session: [test.Order#6]
done cascade ACTION_SAVE_UPDATE for collection: test.User.orderCollection
deleting orphans for collection: test.User.orderCollection
done deleting orphans for collection: test.User.orderCollection
done processing cascade ACTION_SAVE_UPDATE for: test.User
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AbstractAuditEventLog
persistent instance of: edu.wustl.common.domain.AbstractAuditEventLog
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditDataEventLog#6]
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#18]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#19]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#20]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#21]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#22]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#23]
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
dirty checking collections
Flushing entities and processing referenced collections
Collection found: [test.User.orderCollection#1], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditEvent.auditEventLogCollection#2], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs#5], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection#5], was: [<unreferenced>] (initialized)
Collection found: [test.User.orderCollection#2], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditEvent.auditEventLogCollection#3], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs#6], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection#6], was: [<unreferenced>] (initialized)
Processing unreferenced collections
Scheduling collection removes/(re)creates/updates
Flushed: 0 insertions, 0 updates, 0 deletions to 22 objects
Flushed: 8 (re)creations, 0 updates, 0 removals to 8 collections
listing entities:
test.Order{user=test.User#1, person=null, id=4}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#5, currentValue=3:4, previousValue=null, elementName=test.Order_PREV_CURR_IDS_LIST, id=14}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#6, currentValue=Active, previousValue=null, elementName=ACTIVITY_STATUS, id=21}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#6, currentValue=5:6, previousValue=null, elementName=test.Order_PREV_CURR_IDS_LIST, id=20}
edu.wustl.common.domain.AuditDataEventLog{objectName=test_user, objectIdentifier=2, auditEventDetailsCollection=[edu.wustl.common.domain.AuditEventDetails#18, edu.wustl.common.domain.AuditEventDetails#19, edu.wustl.common.domain.AuditEventDetails#20, edu.wustl.common.domain.AuditEventDetails#21, edu.wustl.common.domain.AuditEventDetails#22, edu.wustl.common.domain.AuditEventDetails#23], auditEvent=edu.wustl.common.domain.AuditEvent#3, auditDataEventLogs=[], id=6}
test.User{orderCollection=[test.Order#3, test.Order#4], emailAddress=kalpana@kalpana.com, activityStatus=Active, firstName=kalpana, id=1, lastName=Thakur}
test.Order{user=test.User#2, person=null, id=5}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#5, currentValue=Active, previousValue=null, elementName=ACTIVITY_STATUS, id=15}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#6, currentValue=2, previousValue=null, elementName=IDENTIFIER, id=19}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#6, currentValue=kalpana, previousValue=null, elementName=FIRST_NAME, id=18}
edu.wustl.common.domain.AuditEvent{comments=null, userId=null, auditEventLogCollection=[edu.wustl.common.domain.AbstractAuditEventLog#5], ipAddress=null, timestamp=2009-12-11 18:59:40, eventType=INSERT, id=2}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#5, currentValue=kalpana, previousValue=null, elementName=FIRST_NAME, id=12}
edu.wustl.common.domain.AuditDataEventLog{objectName=test_user, objectIdentifier=1, auditEventDetailsCollection=[edu.wustl.common.domain.AuditEventDetails#12, edu.wustl.common.domain.AuditEventDetails#13, edu.wustl.common.domain.AuditEventDetails#14, edu.wustl.common.domain.AuditEventDetails#15, edu.wustl.common.domain.AuditEventDetails#16, edu.wustl.common.domain.AuditEventDetails#17], auditEvent=edu.wustl.common.domain.AuditEvent#2, auditDataEventLogs=[], id=5}
test.User{orderCollection=[test.Order#5, test.Order#6], emailAddress=kalpana@kalpana.com, activityStatus=Active, firstName=kalpana, id=2, lastName=Thakur}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#5, currentValue=kalpana@kalpana.com, previousValue=null, elementName=EMAIL_ADDRESS, id=16}
edu.wustl.common.domain.AuditEvent{comments=null, userId=null, auditEventLogCollection=[edu.wustl.common.domain.AbstractAuditEventLog#6], ipAddress=null, timestamp=2009-12-11 18:59:40, eventType=INSERT, id=3}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#6, currentValue=Thakur, previousValue=null, elementName=LAST_NAME, id=23}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#5, currentValue=Thakur, previousValue=null, elementName=LAST_NAME, id=17}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#5, currentValue=1, previousValue=null, elementName=IDENTIFIER, id=13}
test.Order{user=test.User#1, person=null, id=3}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#6, currentValue=kalpana@kalpana.com, previousValue=null, elementName=EMAIL_ADDRESS, id=22}
more......
executing flush
registering flush begin
Invalidating: test.User.orderCollection#1
key: test.User.orderCollection#1
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore miss for test.User.orderCollection#1
test.User.orderCollection cache - Miss
Element for test.User.orderCollection#1 is null
Invalidating: test.User.orderCollection#2
key: test.User.orderCollection#2
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore miss for test.User.orderCollection#2
test.User.orderCollection cache - Miss
Element for test.User.orderCollection#2 is null
Inserting collection: [edu.wustl.common.domain.AuditEvent.auditEventLogCollection#2]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
update CATISSUE_AUDIT_EVENT_LOG set AUDIT_EVENT_ID=? where IDENTIFIER=?
preparing statement
binding '2' to parameter: 1
binding '5' to parameter: 2
Adding to batch
done inserting collection: 1 rows inserted
Inserting collection: [edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs#5]
collection was empty
Inserting collection: [edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection#5]
Executing batch size: 1
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
preparing statement
binding '5' to parameter: 1
binding '12' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '5' to parameter: 1
binding '13' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '5' to parameter: 1
binding '14' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '5' to parameter: 1
binding '15' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '5' to parameter: 1
binding '16' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '5' to parameter: 1
binding '17' to parameter: 2
Adding to batch
done inserting collection: 6 rows inserted
Inserting collection: [edu.wustl.common.domain.AuditEvent.auditEventLogCollection#3]
Executing batch size: 6
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
update CATISSUE_AUDIT_EVENT_LOG set AUDIT_EVENT_ID=? where IDENTIFIER=?
preparing statement
binding '3' to parameter: 1
binding '6' to parameter: 2
Adding to batch
done inserting collection: 1 rows inserted
Inserting collection: [edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs#6]
collection was empty
Inserting collection: [edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection#6]
Executing batch size: 1
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
preparing statement
binding '6' to parameter: 1
binding '18' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '6' to parameter: 1
binding '19' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '6' to parameter: 1
binding '20' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '6' to parameter: 1
binding '21' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '6' to parameter: 1
binding '22' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '6' to parameter: 1
binding '23' to parameter: 2
Adding to batch
done inserting collection: 6 rows inserted
Executing batch size: 6
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
registering flush end
post flush
before transaction completion
before transaction completion
committed JDBC Connection
after transaction completion
aggressively releasing JDBC connection
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
after transaction completion
Releasing: test.User.orderCollection#1
key: test.User.orderCollection#1
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#1
Releasing: test.User.orderCollection#2
key: test.User.orderCollection#2
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#2
Close the session
closing session
connection already null in cleanup : no action
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5163164385599490
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 0
begin
current autocommit status: false
after transaction begin
Setting the connection manager
Open the session
opened session at timestamp: 5163164385599491
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 1
opening new JDBC connection
created connection to: jdbc:mysql://ps4267:3306/daodb, Isolation Level: 4
begin
current autocommit status: false
after transaction begin
Inside retrieve method
loading entity: [test.User#1]
creating new proxy for entity
initializing proxy: [test.User#1]
attempting to resolve: [test.User#1]
Cache lookup: test.User#1
key: test.User#1
test.UserCache: test.UserMemoryStore miss for test.User#1
test.User cache - Miss
Element for test.User#1 is null
Cache miss: test.User#1
object not resolved in any cache: [test.User#1]
Fetching entity: [test.User#1]
loading entity: [test.User#1]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select user0_.IDENTIFIER as IDENTIFIER0_0_, user0_.EMAIL_ADDRESS as EMAIL2_0_0_, user0_.FIRST_NAME as FIRST3_0_0_, user0_.LAST_NAME as LAST4_0_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_0_ from test_user user0_ where user0_.IDENTIFIER=?
preparing statement
binding '1' to parameter: 1
about to open ResultSet (open ResultSets: 0, globally: 0)
processing result set
result set row: 0
result row: EntityKey[test.User#1]
Initializing object from ResultSet: [test.User#1]
Hydrating entity: [test.User#1]
returning 'kalpana@kalpana.com' as column: EMAIL2_0_0_
returning 'kalpana' as column: FIRST3_0_0_
returning 'Thakur' as column: LAST4_0_0_
returning 'Active' as column: ACTIVITY5_0_0_
done processing result set (1 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
total objects hydrated: 1
resolving associations for [test.User#1]
creating collection wrapper:[test.User.orderCollection#1]
adding entity to second-level cache: [test.User#1]
Caching: test.User#1
key: test.User#1
test.UserCache: test.UserMemoryStore miss for test.User#1
test.User cache - Miss
Element for test.User#1 is null
Cached: test.User#1
done materializing entity [test.User#1]
initializing non-lazy collections
initializing collection [test.User.orderCollection#1]
checking second-level cache
Cache lookup: test.User.orderCollection#1
key: test.User.orderCollection#1
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#1
Cached item was locked: test.User.orderCollection#1
collection not cached
loading collection: [test.User.orderCollection#1]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select ordercolle0_.user_id as user3_2_, ordercolle0_.IDENTIFIER as IDENTIFIER2_, ordercolle0_.IDENTIFIER as IDENTIFIER3_1_, ordercolle0_.person_id as person2_3_1_, ordercolle0_.user_id as user3_3_1_, person1_.IDENTIFIER as IDENTIFIER1_0_, person1_.NAME as NAME1_0_, person1_.ADDRESS_ID as ADDRESS3_1_0_ from test_order ordercolle0_ left outer join test_person person1_ on ordercolle0_.person_id=person1_.IDENTIFIER where ordercolle0_.user_id=?
preparing statement
binding '1' to parameter: 1
about to open ResultSet (open ResultSets: 0, globally: 0)
result set contains (possibly empty) collection: [test.User.orderCollection#1]
uninitialized collection: initializing
processing result set
result set row: 0
returning null as column: IDENTIFIER1_0_
returning '3' as column: IDENTIFIER3_1_
result row: null, EntityKey[test.Order#3]
Initializing object from ResultSet: [test.Order#3]
Hydrating entity: [test.Order#3]
returning null as column: person2_3_1_
returning '1' as column: user3_3_1_
returning '1' as column: user3_2_
found row of collection: [test.User.orderCollection#1]
reading row
returning '3' as column: IDENTIFIER2_
loading entity: [test.Order#3]
attempting to resolve: [test.Order#3]
resolved object in session cache: [test.Order#3]
result set row: 1
returning null as column: IDENTIFIER1_0_
returning '4' as column: IDENTIFIER3_1_
result row: null, EntityKey[test.Order#4]
Initializing object from ResultSet: [test.Order#4]
Hydrating entity: [test.Order#4]
returning null as column: person2_3_1_
returning '1' as column: user3_3_1_
returning '1' as column: user3_2_
found row of collection: [test.User.orderCollection#1]
reading row
returning '4' as column: IDENTIFIER2_
loading entity: [test.Order#4]
attempting to resolve: [test.Order#4]
resolved object in session cache: [test.Order#4]
done processing result set (2 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
total objects hydrated: 2
resolving associations for [test.Order#3]
loading entity: [test.User#1]
entity proxy found in session cache
adding entity to second-level cache: [test.Order#3]
Caching: test.Order#3
key: test.Order#3
test.OrderCache: test.OrderMemoryStore miss for test.Order#3
test.Order cache - Miss
Element for test.Order#3 is null
Cached: test.Order#3
done materializing entity [test.Order#3]
resolving associations for [test.Order#4]
loading entity: [test.User#1]
entity proxy found in session cache
adding entity to second-level cache: [test.Order#4]
Caching: test.Order#4
key: test.Order#4
test.OrderCache: test.OrderMemoryStore miss for test.Order#4
test.Order cache - Miss
Element for test.Order#4 is null
Cached: test.Order#4
done materializing entity [test.Order#4]
1 collections were found in result set for role: test.User.orderCollection
Caching collection: [test.User.orderCollection#1]
Caching: test.User.orderCollection#1
key: test.User.orderCollection#1
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#1
Cached: test.User.orderCollection#1
collection fully initialized: [test.User.orderCollection#1]
1 collections initialized for role: test.User.orderCollection
done loading collection
collection initialized
done entity load
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
Update Object
updating detached instance
updating [test.User#1]
collection dereferenced while transient [test.User.orderCollection#1]
updating [test.User#1]
processing cascade ACTION_SAVE_UPDATE for: test.User
cascade ACTION_SAVE_UPDATE for collection: test.User.orderCollection
cascading to saveOrUpdate: test.Order
id unsaved-value strategy NULL
detached instance of: test.Order
updating detached instance
updating [test.Order#3]
updating [test.Order#3]
done cascade ACTION_SAVE_UPDATE for collection: test.User.orderCollection
done processing cascade ACTION_SAVE_UPDATE for: test.User
Inside isObjectAuditable method.
Inside obtainAuditableEventLog method.
Inside startAuditing method.
Inside auditReferenceAssociations method.
Inside auditContainmentAssociation method.
saving transient instance
saving [edu.wustl.common.domain.AuditEvent#<null>]
executing insertions
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
Wrapped collection in role: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
Inserting entity: edu.wustl.common.domain.AuditEvent (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT (EVENT_TIMESTAMP, USER_ID, EVENT_TYPE, COMMENTS, IP_ADDRESS) values (?, ?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEvent#<null>]
binding '2009-12-11 18:59:40' to parameter: 1
binding null to parameter: 2
binding 'UPDATE' to parameter: 3
binding null to parameter: 4
binding null to parameter: 5
Natively generated identity: 4
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AbstractAuditEventLog
transient instance of: edu.wustl.common.domain.AbstractAuditEventLog
saving transient instance
saving [edu.wustl.common.domain.AuditDataEventLog#<null>]
executing insertions
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
Wrapped collection in role: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
Wrapped collection in role: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
Inserting entity: edu.wustl.common.domain.AuditDataEventLog (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_LOG (AUDIT_EVENT_ID) values (?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditDataEventLog#<null>]
binding '4' to parameter: 1
Natively generated identity: 7
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
Inserting entity: [edu.wustl.common.domain.AuditDataEventLog#7]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_DATA_AUDIT_EVENT_LOG (OBJECT_IDENTIFIER, OBJECT_NAME, IDENTIFIER) values (?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditDataEventLog#7]
binding '1' to parameter: 1
binding 'test_user' to parameter: 2
binding '7' to parameter: 3
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'EMAIL_ADDRESS' to parameter: 1
binding 'kalpana@kalpana.com' to parameter: 2
binding 'kalpana@kalpana.com' to parameter: 3
binding '7' to parameter: 4
Natively generated identity: 24
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'FIRST_NAME' to parameter: 1
binding 'kalpana' to parameter: 2
binding 'Maria johns' to parameter: 3
binding '7' to parameter: 4
Natively generated identity: 25
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'test.Order_PREV_CURR_IDS_LIST' to parameter: 1
binding '3:4' to parameter: 2
binding '3' to parameter: 3
binding '7' to parameter: 4
Natively generated identity: 26
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'IDENTIFIER' to parameter: 1
binding '1' to parameter: 2
binding '1' to parameter: 3
binding '7' to parameter: 4
Natively generated identity: 27
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'LAST_NAME' to parameter: 1
binding 'Thakur' to parameter: 2
binding 'Thakur' to parameter: 3
binding '7' to parameter: 4
Natively generated identity: 28
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'ACTIVITY_STATUS' to parameter: 1
binding 'Active' to parameter: 2
binding 'Active' to parameter: 3
binding '7' to parameter: 4
Natively generated identity: 29
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
Session commit
commit
automatically flushing session
flushing session
processing flush-time cascades
processing cascade ACTION_SAVE_UPDATE for: test.User
cascade ACTION_SAVE_UPDATE for collection: test.User.orderCollection
cascading to saveOrUpdate: test.Order
persistent instance of: test.Order
ignoring persistent instance
object already associated with session: [test.Order#3]
done cascade ACTION_SAVE_UPDATE for collection: test.User.orderCollection
done processing cascade ACTION_SAVE_UPDATE for: test.User
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AbstractAuditEventLog
persistent instance of: edu.wustl.common.domain.AbstractAuditEventLog
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditDataEventLog#7]
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#24]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#25]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#26]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#27]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#28]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#29]
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
dirty checking collections
Flushing entities and processing referenced collections
Wrapped collection in role: test.User.orderCollection
Updating entity: [test.User#1]
Collection found: [test.User.orderCollection#1], was: [<unreferenced>] (initialized)
Updating entity: [test.Order#3]
Collection found: [edu.wustl.common.domain.AuditEvent.auditEventLogCollection#4], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs#7], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection#7], was: [<unreferenced>] (initialized)
Processing unreferenced collections
Scheduling collection removes/(re)creates/updates
Flushed: 0 insertions, 2 updates, 0 deletions to 10 objects
Flushed: 4 (re)creations, 0 updates, 1 removals to 4 collections
listing entities:
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#7, currentValue=1, previousValue=1, elementName=IDENTIFIER, id=27}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#7, currentValue=Active, previousValue=Active, elementName=ACTIVITY_STATUS, id=29}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#7, currentValue=3, previousValue=3:4, elementName=test.Order_PREV_CURR_IDS_LIST, id=26}
test.User{orderCollection=[test.Order#3], emailAddress=kalpana@kalpana.com, activityStatus=Active, firstName=Maria johns, id=1, lastName=Thakur}
test.Order{user=test.User#1, person=null, id=3}
edu.wustl.common.domain.AuditEvent{comments=null, userId=null, auditEventLogCollection=[edu.wustl.common.domain.AbstractAuditEventLog#7], ipAddress=null, timestamp=2009-12-11 18:59:40, eventType=UPDATE, id=4}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#7, currentValue=Maria johns, previousValue=kalpana, elementName=FIRST_NAME, id=25}
edu.wustl.common.domain.AuditDataEventLog{objectName=test_user, objectIdentifier=1, auditEventDetailsCollection=[edu.wustl.common.domain.AuditEventDetails#24, edu.wustl.common.domain.AuditEventDetails#25, edu.wustl.common.domain.AuditEventDetails#26, edu.wustl.common.domain.AuditEventDetails#27, edu.wustl.common.domain.AuditEventDetails#28, edu.wustl.common.domain.AuditEventDetails#29], auditEvent=edu.wustl.common.domain.AuditEvent#4, auditDataEventLogs=[], id=7}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#7, currentValue=Thakur, previousValue=Thakur, elementName=LAST_NAME, id=28}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#7, currentValue=kalpana@kalpana.com, previousValue=kalpana@kalpana.com, elementName=EMAIL_ADDRESS, id=24}
executing flush
registering flush begin
Invalidating: test.User.orderCollection#1
key: test.User.orderCollection#1
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#1
Invalidating: test.User.orderCollection#1
key: test.User.orderCollection#1
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#1
Invalidating: test.User#1
key: test.User#1
test.UserCache: test.UserMemoryStore hit for test.User#1
Updating entity: [test.User#1]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
update test_user set EMAIL_ADDRESS=?, FIRST_NAME=?, LAST_NAME=?, ACTIVITY_STATUS=? where IDENTIFIER=?
preparing statement
Dehydrating entity: [test.User#1]
binding 'kalpana@kalpana.com' to parameter: 1
binding 'Maria johns' to parameter: 2
binding 'Thakur' to parameter: 3
binding 'Active' to parameter: 4
binding '1' to parameter: 5
Adding to batch
Invalidating: test.Order#3
key: test.Order#3
test.OrderCache: test.OrderMemoryStore hit for test.Order#3
Updating entity: [test.Order#3]
Executing batch size: 1
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
update test_order set person_id=?, user_id=? where IDENTIFIER=?
preparing statement
Dehydrating entity: [test.Order#3]
binding null to parameter: 1
binding '1' to parameter: 2
binding '3' to parameter: 3
Adding to batch
Executing batch size: 1
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
Inserting collection: [edu.wustl.common.domain.AuditEvent.auditEventLogCollection#4]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
update CATISSUE_AUDIT_EVENT_LOG set AUDIT_EVENT_ID=? where IDENTIFIER=?
preparing statement
binding '4' to parameter: 1
binding '7' to parameter: 2
Adding to batch
done inserting collection: 1 rows inserted
Inserting collection: [edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs#7]
collection was empty
Inserting collection: [edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection#7]
Executing batch size: 1
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
preparing statement
binding '7' to parameter: 1
binding '24' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '7' to parameter: 1
binding '25' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '7' to parameter: 1
binding '26' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '7' to parameter: 1
binding '27' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '7' to parameter: 1
binding '28' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '7' to parameter: 1
binding '29' to parameter: 2
Adding to batch
done inserting collection: 6 rows inserted
Executing batch size: 6
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
registering flush end
post flush
before transaction completion
before transaction completion
committed JDBC Connection
after transaction completion
aggressively releasing JDBC connection
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
after transaction completion
Updating: test.User#1
key: test.User#1
test.UserCache: test.UserMemoryStore hit for test.User#1
Updated: test.User#1
Updating: test.Order#3
key: test.Order#3
test.OrderCache: test.OrderMemoryStore hit for test.Order#3
Updated: test.Order#3
Releasing: test.User.orderCollection#1
key: test.User.orderCollection#1
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#1
Releasing: test.User.orderCollection#1
key: test.User.orderCollection#1
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#1
Close the session
closing session
connection already null in cleanup : no action
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5163164386242564
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
begin
current autocommit status: false
after transaction begin
Setting the connection manager
Open the session
opened session at timestamp: 5163164386242565
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 1
using pooled JDBC connection, pool size: 0
begin
current autocommit status: false
after transaction begin
Inside retrieve method
loading entity: [test.Person#1]
attempting to resolve: [test.Person#1]
Cache lookup: test.Person#1
key: test.Person#1
test.PersonCache: test.PersonMemoryStore miss for test.Person#1
test.Person cache - Miss
Element for test.Person#1 is null
Cache miss: test.Person#1
object not resolved in any cache: [test.Person#1]
Fetching entity: [test.Person#1]
loading entity: [test.Person#1]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select person0_.IDENTIFIER as IDENTIFIER1_0_, person0_.NAME as NAME1_0_, person0_.ADDRESS_ID as ADDRESS3_1_0_ from test_person person0_ where person0_.IDENTIFIER=?
preparing statement
binding '1' to parameter: 1
about to open ResultSet (open ResultSets: 0, globally: 0)
processing result set
result set row: 0
result row: EntityKey[test.Person#1]
Initializing object from ResultSet: [test.Person#1]
Hydrating entity: [test.Person#1]
returning 'Kalpana' as column: NAME1_0_
returning '115' as column: ADDRESS3_1_0_
done processing result set (1 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
total objects hydrated: 1
resolving associations for [test.Person#1]
loading entity: [test.Address#115]
attempting to resolve: [test.Address#115]
Cache lookup: test.Address#115
key: test.Address#115
test.AddressCache: test.AddressMemoryStore miss for test.Address#115
test.Address cache - Miss
Element for test.Address#115 is null
Cache miss: test.Address#115
object not resolved in any cache: [test.Address#115]
Fetching entity: [test.Address#115]
loading entity: [test.Address#115]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select address0_.IDENTIFIER as IDENTIFIER2_0_, address0_.STREET as STREET2_0_ from test_address address0_ where address0_.IDENTIFIER=?
preparing statement
binding '115' to parameter: 1
about to open ResultSet (open ResultSets: 0, globally: 0)
processing result set
result set row: 0
result row: EntityKey[test.Address#115]
Initializing object from ResultSet: [test.Address#115]
Hydrating entity: [test.Address#115]
returning 'Street unknown' as column: STREET2_0_
done processing result set (1 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
total objects hydrated: 1
resolving associations for [test.Address#115]
adding entity to second-level cache: [test.Address#115]
Caching: test.Address#115
key: test.Address#115
test.AddressCache: test.AddressMemoryStore miss for test.Address#115
test.Address cache - Miss
Element for test.Address#115 is null
Cached: test.Address#115
done materializing entity [test.Address#115]
done entity load
creating collection wrapper:[test.Person.orderCollection#1]
adding entity to second-level cache: [test.Person#1]
Caching: test.Person#1
key: test.Person#1
test.PersonCache: test.PersonMemoryStore miss for test.Person#1
test.Person cache - Miss
Element for test.Person#1 is null
Cached: test.Person#1
done materializing entity [test.Person#1]
initializing non-lazy collections
initializing collection [test.Person.orderCollection#1]
checking second-level cache
Cache lookup: test.Person.orderCollection#1
key: test.Person.orderCollection#1
test.Person.orderCollectionCache: test.Person.orderCollectionMemoryStore hit for test.Person.orderCollection#1
Cached item was locked: test.Person.orderCollection#1
collection not cached
loading collection: [test.Person.orderCollection#1]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select ordercolle0_.person_id as person2_1_, ordercolle0_.IDENTIFIER as IDENTIFIER1_, ordercolle0_.IDENTIFIER as IDENTIFIER3_0_, ordercolle0_.person_id as person2_3_0_, ordercolle0_.user_id as user3_3_0_ from test_order ordercolle0_ where ordercolle0_.person_id=?
preparing statement
binding '1' to parameter: 1
about to open ResultSet (open ResultSets: 0, globally: 0)
result set contains (possibly empty) collection: [test.Person.orderCollection#1]
uninitialized collection: initializing
processing result set
result set row: 0
returning '1' as column: IDENTIFIER3_0_
result row: EntityKey[test.Order#1]
Initializing object from ResultSet: [test.Order#1]
Hydrating entity: [test.Order#1]
returning '1' as column: person2_3_0_
returning null as column: user3_3_0_
returning '1' as column: person2_1_
found row of collection: [test.Person.orderCollection#1]
reading row
returning '1' as column: IDENTIFIER1_
loading entity: [test.Order#1]
attempting to resolve: [test.Order#1]
resolved object in session cache: [test.Order#1]
result set row: 1
returning '2' as column: IDENTIFIER3_0_
result row: EntityKey[test.Order#2]
Initializing object from ResultSet: [test.Order#2]
Hydrating entity: [test.Order#2]
returning '1' as column: person2_3_0_
returning null as column: user3_3_0_
returning '1' as column: person2_1_
found row of collection: [test.Person.orderCollection#1]
reading row
returning '2' as column: IDENTIFIER1_
loading entity: [test.Order#2]
attempting to resolve: [test.Order#2]
resolved object in session cache: [test.Order#2]
done processing result set (2 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
total objects hydrated: 2
resolving associations for [test.Order#1]
loading entity: [test.Person#1]
attempting to resolve: [test.Person#1]
resolved object in session cache: [test.Person#1]
adding entity to second-level cache: [test.Order#1]
Caching: test.Order#1
key: test.Order#1
test.OrderCache: test.OrderMemoryStore miss for test.Order#1
test.Order cache - Miss
Element for test.Order#1 is null
Cached: test.Order#1
done materializing entity [test.Order#1]
resolving associations for [test.Order#2]
loading entity: [test.Person#1]
attempting to resolve: [test.Person#1]
resolved object in session cache: [test.Person#1]
adding entity to second-level cache: [test.Order#2]
Caching: test.Order#2
key: test.Order#2
test.OrderCache: test.OrderMemoryStore miss for test.Order#2
test.Order cache - Miss
Element for test.Order#2 is null
Cached: test.Order#2
done materializing entity [test.Order#2]
1 collections were found in result set for role: test.Person.orderCollection
Caching collection: [test.Person.orderCollection#1]
Caching: test.Person.orderCollection#1
key: test.Person.orderCollection#1
test.Person.orderCollectionCache: test.Person.orderCollectionMemoryStore hit for test.Person.orderCollection#1
Cached: test.Person.orderCollection#1
collection fully initialized: [test.Person.orderCollection#1]
1 collections initialized for role: test.Person.orderCollection
done loading collection
collection initialized
done entity load
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 1
Update Object
updating detached instance
updating [test.Person#1]
collection dereferenced while transient [test.Person.orderCollection#1]
updating [test.Person#1]
processing cascade ACTION_SAVE_UPDATE for: test.Person
cascading to saveOrUpdate: test.Address
id unsaved-value strategy NULL
detached instance of: test.Address
updating detached instance
updating [test.Address#115]
updating [test.Address#115]
cascade ACTION_SAVE_UPDATE for collection: test.Person.orderCollection
cascading to saveOrUpdate: test.Order
id unsaved-value strategy NULL
detached instance of: test.Order
updating detached instance
updating [test.Order#1]
updating [test.Order#1]
done cascade ACTION_SAVE_UPDATE for collection: test.Person.orderCollection
done processing cascade ACTION_SAVE_UPDATE for: test.Person
Inside isObjectAuditable method.
Inside obtainAuditableEventLog method.
Inside startAuditing method.
Inside auditReferenceAssociations method.
Inside auditContainmentAssociation method.
Inside auditContainmentsforExistingEntries method.
Inside obtainAuditableEventLog method.
Inside startAuditing method.
Inside auditReferenceAssociations method.
Inside auditContainmentAssociation method.
Inside auditContainmentsforExistingEntries method.
Inside obtainAuditableEventLog method.
Inside startAuditing method.
Inside auditReferenceAssociations method.
Inside auditContainmentAssociation method.
saving transient instance
saving [edu.wustl.common.domain.AuditEvent#<null>]
executing insertions
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
Wrapped collection in role: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
Inserting entity: edu.wustl.common.domain.AuditEvent (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT (EVENT_TIMESTAMP, USER_ID, EVENT_TYPE, COMMENTS, IP_ADDRESS) values (?, ?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEvent#<null>]
binding '2009-12-11 18:59:40' to parameter: 1
binding null to parameter: 2
binding 'UPDATE' to parameter: 3
binding null to parameter: 4
binding null to parameter: 5
Natively generated identity: 5
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AbstractAuditEventLog
transient instance of: edu.wustl.common.domain.AbstractAuditEventLog
saving transient instance
saving [edu.wustl.common.domain.AuditDataEventLog#<null>]
executing insertions
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
Wrapped collection in role: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
Wrapped collection in role: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
Inserting entity: edu.wustl.common.domain.AuditDataEventLog (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_LOG (AUDIT_EVENT_ID) values (?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditDataEventLog#<null>]
binding '5' to parameter: 1
Natively generated identity: 8
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
Inserting entity: [edu.wustl.common.domain.AuditDataEventLog#8]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_DATA_AUDIT_EVENT_LOG (OBJECT_IDENTIFIER, OBJECT_NAME, IDENTIFIER) values (?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditDataEventLog#8]
binding '1' to parameter: 1
binding 'test_person' to parameter: 2
binding '8' to parameter: 3
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
cascading to saveOrUpdate: edu.wustl.common.domain.AuditDataEventLog
transient instance of: edu.wustl.common.domain.AuditDataEventLog
saving transient instance
saving [edu.wustl.common.domain.AuditDataEventLog#<null>]
executing insertions
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
Wrapped collection in role: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
Wrapped collection in role: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
Inserting entity: edu.wustl.common.domain.AuditDataEventLog (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_LOG (AUDIT_EVENT_ID) values (?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditDataEventLog#<null>]
binding '5' to parameter: 1
Natively generated identity: 9
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
Inserting entity: [edu.wustl.common.domain.AuditDataEventLog#9]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_DATA_AUDIT_EVENT_LOG (OBJECT_IDENTIFIER, OBJECT_NAME, IDENTIFIER) values (?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditDataEventLog#9]
binding '1' to parameter: 1
binding 'test_order' to parameter: 2
binding '9' to parameter: 3
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'IDENTIFIER' to parameter: 1
binding '1' to parameter: 2
binding '1' to parameter: 3
binding '9' to parameter: 4
Natively generated identity: 30
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'person_id' to parameter: 1
binding '1' to parameter: 2
binding '1' to parameter: 3
binding '9' to parameter: 4
Natively generated identity: 31
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascading to saveOrUpdate: edu.wustl.common.domain.AuditDataEventLog
transient instance of: edu.wustl.common.domain.AuditDataEventLog
saving transient instance
saving [edu.wustl.common.domain.AuditDataEventLog#<null>]
executing insertions
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
Wrapped collection in role: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
Wrapped collection in role: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
Inserting entity: edu.wustl.common.domain.AuditDataEventLog (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_LOG (AUDIT_EVENT_ID) values (?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditDataEventLog#<null>]
binding '5' to parameter: 1
Natively generated identity: 10
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
Inserting entity: [edu.wustl.common.domain.AuditDataEventLog#10]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_DATA_AUDIT_EVENT_LOG (OBJECT_IDENTIFIER, OBJECT_NAME, IDENTIFIER) values (?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditDataEventLog#10]
binding '115' to parameter: 1
binding 'test_address' to parameter: 2
binding '10' to parameter: 3
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'STREET' to parameter: 1
binding 'Street unknown' to parameter: 2
binding 'Street unknown' to parameter: 3
binding '10' to parameter: 4
Natively generated identity: 32
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'IDENTIFIER' to parameter: 1
binding '115' to parameter: 2
binding '115' to parameter: 3
binding '10' to parameter: 4
Natively generated identity: 33
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'test.Order_PREV_CURR_IDS_LIST' to parameter: 1
binding '1:2' to parameter: 2
binding '1' to parameter: 3
binding '8' to parameter: 4
Natively generated identity: 34
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'NAME' to parameter: 1
binding 'Kalpana' to parameter: 2
binding 'Kalpana Thakur' to parameter: 3
binding '8' to parameter: 4
Natively generated identity: 35
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'IDENTIFIER' to parameter: 1
binding '1' to parameter: 2
binding '1' to parameter: 3
binding '8' to parameter: 4
Natively generated identity: 36
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'test.Address_PREV_CURR_IDS_LIST' to parameter: 1
binding '115' to parameter: 2
binding '115' to parameter: 3
binding '8' to parameter: 4
Natively generated identity: 37
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'ADDRESS_ID' to parameter: 1
binding '115' to parameter: 2
binding '115' to parameter: 3
binding '8' to parameter: 4
Natively generated identity: 38
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascading to saveOrUpdate: edu.wustl.common.domain.AbstractAuditEventLog
persistent instance of: edu.wustl.common.domain.AbstractAuditEventLog
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditDataEventLog#9]
cascading to saveOrUpdate: edu.wustl.common.domain.AbstractAuditEventLog
persistent instance of: edu.wustl.common.domain.AbstractAuditEventLog
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditDataEventLog#10]
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
Session commit
commit
automatically flushing session
flushing session
processing flush-time cascades
processing cascade ACTION_SAVE_UPDATE for: test.Person
cascading to saveOrUpdate: test.Address
persistent instance of: test.Address
ignoring persistent instance
object already associated with session: [test.Address#115]
cascade ACTION_SAVE_UPDATE for collection: test.Person.orderCollection
cascading to saveOrUpdate: test.Order
persistent instance of: test.Order
ignoring persistent instance
object already associated with session: [test.Order#1]
done cascade ACTION_SAVE_UPDATE for collection: test.Person.orderCollection
done processing cascade ACTION_SAVE_UPDATE for: test.Person
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AbstractAuditEventLog
persistent instance of: edu.wustl.common.domain.AbstractAuditEventLog
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditDataEventLog#8]
cascading to saveOrUpdate: edu.wustl.common.domain.AbstractAuditEventLog
persistent instance of: edu.wustl.common.domain.AbstractAuditEventLog
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditDataEventLog#9]
cascading to saveOrUpdate: edu.wustl.common.domain.AbstractAuditEventLog
persistent instance of: edu.wustl.common.domain.AbstractAuditEventLog
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditDataEventLog#10]
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
cascading to saveOrUpdate: edu.wustl.common.domain.AuditDataEventLog
persistent instance of: edu.wustl.common.domain.AuditDataEventLog
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditDataEventLog#9]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditDataEventLog
persistent instance of: edu.wustl.common.domain.AuditDataEventLog
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditDataEventLog#10]
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#34]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#35]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#36]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#37]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#38]
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#30]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#31]
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#32]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#33]
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
dirty checking collections
Flushing entities and processing referenced collections
Wrapped collection in role: test.Person.orderCollection
Updating entity: [test.Person#1]
Collection found: [test.Person.orderCollection#1], was: [<unreferenced>] (initialized)
Updating entity: [test.Address#115]
Updating entity: [test.Order#1]
Collection found: [edu.wustl.common.domain.AuditEvent.auditEventLogCollection#5], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs#8], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection#8], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs#9], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection#9], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs#10], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection#10], was: [<unreferenced>] (initialized)
Processing unreferenced collections
Scheduling collection removes/(re)creates/updates
Flushed: 0 insertions, 3 updates, 0 deletions to 16 objects
Flushed: 8 (re)creations, 0 updates, 1 removals to 8 collections
listing entities:
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#8, currentValue=115, previousValue=115, elementName=ADDRESS_ID, id=38}
test.Person{orderCollection=[test.Order#1], address=test.Address#115, name=Kalpana Thakur, id=1}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#8, currentValue=1, previousValue=1:2, elementName=test.Order_PREV_CURR_IDS_LIST, id=34}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#9, currentValue=1, previousValue=1, elementName=IDENTIFIER, id=30}
test.Order{user=null, person=test.Person#1, id=1}
edu.wustl.common.domain.AuditEvent{comments=null, userId=null, auditEventLogCollection=[edu.wustl.common.domain.AbstractAuditEventLog#8, edu.wustl.common.domain.AbstractAuditEventLog#9, edu.wustl.common.domain.AbstractAuditEventLog#10], ipAddress=null, timestamp=2009-12-11 18:59:40, eventType=UPDATE, id=5}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#8, currentValue=115, previousValue=115, elementName=test.Address_PREV_CURR_IDS_LIST, id=37}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#10, currentValue=115, previousValue=115, elementName=IDENTIFIER, id=33}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#8, currentValue=1, previousValue=1, elementName=IDENTIFIER, id=36}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#9, currentValue=1, previousValue=1, elementName=person_id, id=31}
edu.wustl.common.domain.AuditDataEventLog{objectName=test_order, objectIdentifier=1, auditEventDetailsCollection=[edu.wustl.common.domain.AuditEventDetails#30, edu.wustl.common.domain.AuditEventDetails#31], auditEvent=edu.wustl.common.domain.AuditEvent#5, auditDataEventLogs=[], id=9}
edu.wustl.common.domain.AuditDataEventLog{objectName=test_person, objectIdentifier=1, auditEventDetailsCollection=[edu.wustl.common.domain.AuditEventDetails#34, edu.wustl.common.domain.AuditEventDetails#35, edu.wustl.common.domain.AuditEventDetails#36, edu.wustl.common.domain.AuditEventDetails#37, edu.wustl.common.domain.AuditEventDetails#38], auditEvent=edu.wustl.common.domain.AuditEvent#5, auditDataEventLogs=[edu.wustl.common.domain.AuditDataEventLog#9, edu.wustl.common.domain.AuditDataEventLog#10], id=8}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#8, currentValue=Kalpana Thakur, previousValue=Kalpana, elementName=NAME, id=35}
edu.wustl.common.domain.AuditDataEventLog{objectName=test_address, objectIdentifier=115, auditEventDetailsCollection=[edu.wustl.common.domain.AuditEventDetails#32, edu.wustl.common.domain.AuditEventDetails#33], auditEvent=edu.wustl.common.domain.AuditEvent#5, auditDataEventLogs=[], id=10}
test.Address{street=Street unknown, id=115}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#10, currentValue=Street unknown, previousValue=Street unknown, elementName=STREET, id=32}
executing flush
registering flush begin
Invalidating: test.Person.orderCollection#1
key: test.Person.orderCollection#1
test.Person.orderCollectionCache: test.Person.orderCollectionMemoryStore hit for test.Person.orderCollection#1
Invalidating: test.Person.orderCollection#1
key: test.Person.orderCollection#1
test.Person.orderCollectionCache: test.Person.orderCollectionMemoryStore hit for test.Person.orderCollection#1
Invalidating: test.Person#1
key: test.Person#1
test.PersonCache: test.PersonMemoryStore hit for test.Person#1
Updating entity: [test.Person#1]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
update test_person set NAME=?, ADDRESS_ID=? where IDENTIFIER=?
preparing statement
Dehydrating entity: [test.Person#1]
binding 'Kalpana Thakur' to parameter: 1
binding '115' to parameter: 2
binding '1' to parameter: 3
Adding to batch
Invalidating: test.Address#115
key: test.Address#115
test.AddressCache: test.AddressMemoryStore hit for test.Address#115
Updating entity: [test.Address#115]
Executing batch size: 1
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
update test_address set STREET=? where IDENTIFIER=?
preparing statement
Dehydrating entity: [test.Address#115]
binding 'Street unknown' to parameter: 1
binding '115' to parameter: 2
Adding to batch
Invalidating: test.Order#1
key: test.Order#1
test.OrderCache: test.OrderMemoryStore hit for test.Order#1
Updating entity: [test.Order#1]
Executing batch size: 1
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
update test_order set person_id=?, user_id=? where IDENTIFIER=?
preparing statement
Dehydrating entity: [test.Order#1]
id unsaved-value strategy NULL
binding '1' to parameter: 1
binding null to parameter: 2
binding '1' to parameter: 3
Adding to batch
id unsaved-value strategy NULL
Executing batch size: 1
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
Inserting collection: [edu.wustl.common.domain.AuditEvent.auditEventLogCollection#5]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
update CATISSUE_AUDIT_EVENT_LOG set AUDIT_EVENT_ID=? where IDENTIFIER=?
preparing statement
binding '5' to parameter: 1
binding '8' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_LOG set AUDIT_EVENT_ID=? where IDENTIFIER=?
binding '5' to parameter: 1
binding '9' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_LOG set AUDIT_EVENT_ID=? where IDENTIFIER=?
binding '5' to parameter: 1
binding '10' to parameter: 2
Adding to batch
done inserting collection: 3 rows inserted
Inserting collection: [edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs#8]
Executing batch size: 3
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
update CATISSUE_DATA_AUDIT_EVENT_LOG set PARENT_LOG_ID=? where IDENTIFIER=?
preparing statement
binding '8' to parameter: 1
binding '9' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_DATA_AUDIT_EVENT_LOG set PARENT_LOG_ID=? where IDENTIFIER=?
binding '8' to parameter: 1
binding '10' to parameter: 2
Adding to batch
done inserting collection: 2 rows inserted
Inserting collection: [edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection#8]
Executing batch size: 2
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
preparing statement
binding '8' to parameter: 1
binding '34' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '8' to parameter: 1
binding '35' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '8' to parameter: 1
binding '36' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '8' to parameter: 1
binding '37' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '8' to parameter: 1
binding '38' to parameter: 2
Adding to batch
done inserting collection: 5 rows inserted
Inserting collection: [edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs#9]
collection was empty
Inserting collection: [edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection#9]
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '9' to parameter: 1
binding '30' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '9' to parameter: 1
binding '31' to parameter: 2
Adding to batch
done inserting collection: 2 rows inserted
Inserting collection: [edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs#10]
collection was empty
Inserting collection: [edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection#10]
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '10' to parameter: 1
binding '32' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '10' to parameter: 1
binding '33' to parameter: 2
Adding to batch
done inserting collection: 2 rows inserted
Executing batch size: 9
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
registering flush end
post flush
before transaction completion
before transaction completion
committed JDBC Connection
after transaction completion
aggressively releasing JDBC connection
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
after transaction completion
Updating: test.Person#1
key: test.Person#1
test.PersonCache: test.PersonMemoryStore hit for test.Person#1
Updated: test.Person#1
Updating: test.Address#115
key: test.Address#115
test.AddressCache: test.AddressMemoryStore hit for test.Address#115
Updated: test.Address#115
Updating: test.Order#1
key: test.Order#1
test.OrderCache: test.OrderMemoryStore hit for test.Order#1
Updated: test.Order#1
Releasing: test.Person.orderCollection#1
key: test.Person.orderCollection#1
test.Person.orderCollectionCache: test.Person.orderCollectionMemoryStore hit for test.Person.orderCollection#1
Releasing: test.Person.orderCollection#1
key: test.Person.orderCollection#1
test.Person.orderCollectionCache: test.Person.orderCollectionMemoryStore hit for test.Person.orderCollection#1
Close the session
closing session
connection already null in cleanup : no action
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5163164386562053
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
begin
current autocommit status: false
after transaction begin
Inside retrieve method
loading entity: [test.Person#1]
attempting to resolve: [test.Person#1]
Cache lookup: test.Person#1
key: test.Person#1
test.PersonCache: test.PersonMemoryStore hit for test.Person#1
Cache hit: test.Person#1
assembling entity from second-level cache: [test.Person#1]
loading entity: [test.Address#115]
attempting to resolve: [test.Address#115]
Cache lookup: test.Address#115
key: test.Address#115
test.AddressCache: test.AddressMemoryStore hit for test.Address#115
Cache hit: test.Address#115
assembling entity from second-level cache: [test.Address#115]
Cached Version: null
initializing non-lazy collections
resolved object in second-level cache: [test.Address#115]
creating collection wrapper:[test.Person.orderCollection#1]
Cached Version: null
initializing non-lazy collections
initializing collection [test.Person.orderCollection#1]
checking second-level cache
Cache lookup: test.Person.orderCollection#1
key: test.Person.orderCollection#1
test.Person.orderCollectionCache: test.Person.orderCollectionMemoryStore hit for test.Person.orderCollection#1
Cached item was locked: test.Person.orderCollection#1
collection not cached
loading collection: [test.Person.orderCollection#1]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select ordercolle0_.person_id as person2_1_, ordercolle0_.IDENTIFIER as IDENTIFIER1_, ordercolle0_.IDENTIFIER as IDENTIFIER3_0_, ordercolle0_.person_id as person2_3_0_, ordercolle0_.user_id as user3_3_0_ from test_order ordercolle0_ where ordercolle0_.person_id=?
preparing statement
binding '1' to parameter: 1
about to open ResultSet (open ResultSets: 0, globally: 0)
result set contains (possibly empty) collection: [test.Person.orderCollection#1]
uninitialized collection: initializing
processing result set
result set row: 0
returning '1' as column: IDENTIFIER3_0_
result row: EntityKey[test.Order#1]
Initializing object from ResultSet: [test.Order#1]
Hydrating entity: [test.Order#1]
returning '1' as column: person2_3_0_
returning null as column: user3_3_0_
returning '1' as column: person2_1_
found row of collection: [test.Person.orderCollection#1]
reading row
returning '1' as column: IDENTIFIER1_
loading entity: [test.Order#1]
attempting to resolve: [test.Order#1]
resolved object in session cache: [test.Order#1]
result set row: 1
returning '2' as column: IDENTIFIER3_0_
result row: EntityKey[test.Order#2]
Initializing object from ResultSet: [test.Order#2]
Hydrating entity: [test.Order#2]
returning '1' as column: person2_3_0_
returning null as column: user3_3_0_
returning '1' as column: person2_1_
found row of collection: [test.Person.orderCollection#1]
reading row
returning '2' as column: IDENTIFIER1_
loading entity: [test.Order#2]
attempting to resolve: [test.Order#2]
resolved object in session cache: [test.Order#2]
done processing result set (2 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
total objects hydrated: 2
resolving associations for [test.Order#1]
loading entity: [test.Person#1]
attempting to resolve: [test.Person#1]
resolved object in session cache: [test.Person#1]
adding entity to second-level cache: [test.Order#1]
Caching: test.Order#1
key: test.Order#1
test.OrderCache: test.OrderMemoryStore hit for test.Order#1
Item was already cached: test.Order#1
done materializing entity [test.Order#1]
resolving associations for [test.Order#2]
loading entity: [test.Person#1]
attempting to resolve: [test.Person#1]
resolved object in session cache: [test.Person#1]
adding entity to second-level cache: [test.Order#2]
Caching: test.Order#2
key: test.Order#2
test.OrderCache: test.OrderMemoryStore hit for test.Order#2
Item was already cached: test.Order#2
done materializing entity [test.Order#2]
1 collections were found in result set for role: test.Person.orderCollection
Caching collection: [test.Person.orderCollection#1]
Caching: test.Person.orderCollection#1
key: test.Person.orderCollection#1
test.Person.orderCollectionCache: test.Person.orderCollectionMemoryStore hit for test.Person.orderCollection#1
Cached: test.Person.orderCollection#1
collection fully initialized: [test.Person.orderCollection#1]
1 collections initialized for role: test.Person.orderCollection
done loading collection
collection initialized
resolved object in second-level cache: [test.Person#1]
Update Object
Class test.Personis present in auditablemetadata.xml and set to auditable. Audit all it's instance while inserting/updating it to database.
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Error key name ::class.auditable
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()

edu.wustl.dao.exception.AuditException: 
	at edu.wustl.common.audit.AuditManager.isObjectAuditable(AuditManager.java:874)
	at edu.wustl.dao.HibernateDAOImpl.update(HibernateDAOImpl.java:152)
	at edu.wustl.dao.test.HibernateTestCaseForCatissue.testUpdateAuditablePerson(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at junit.framework.TestCase.runTest(TestCase.java:168)
	at junit.framework.TestCase.runBare(TestCase.java:134)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Error key name ::
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5163164386623489
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
begin
current autocommit status: false
after transaction begin
Insert Object
saving transient instance
saving [test.User#<null>]
executing insertions
processing cascade ACTION_SAVE_UPDATE for: test.User
done processing cascade ACTION_SAVE_UPDATE for: test.User
Wrapped collection in role: test.User.orderCollection
Inserting entity: test.User (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into test_user (EMAIL_ADDRESS, FIRST_NAME, LAST_NAME, ACTIVITY_STATUS) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [test.User#<null>]
binding 'abhijit_naik@persistent.co.in' to parameter: 1
binding 'abhijit' to parameter: 2
binding 'naik' to parameter: 3
binding null to parameter: 4
Natively generated identity: 3
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
processing cascade ACTION_SAVE_UPDATE for: test.User
cascade ACTION_SAVE_UPDATE for collection: test.User.orderCollection
done cascade ACTION_SAVE_UPDATE for collection: test.User.orderCollection
deleting orphans for collection: test.User.orderCollection
done deleting orphans for collection: test.User.orderCollection
done processing cascade ACTION_SAVE_UPDATE for: test.User
Inside isObjectAuditable method.
Inside obtainAuditableEventLog method.
Inside startAuditing method.
Inside auditReferenceAssociations method.
Inside auditContainmentAssociation method.
saving transient instance
saving [edu.wustl.common.domain.AuditEvent#<null>]
executing insertions
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
Wrapped collection in role: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
Inserting entity: edu.wustl.common.domain.AuditEvent (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT (EVENT_TIMESTAMP, USER_ID, EVENT_TYPE, COMMENTS, IP_ADDRESS) values (?, ?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEvent#<null>]
binding '2009-12-11 18:59:40' to parameter: 1
binding null to parameter: 2
binding 'INSERT' to parameter: 3
binding null to parameter: 4
binding null to parameter: 5
Natively generated identity: 6
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AbstractAuditEventLog
transient instance of: edu.wustl.common.domain.AbstractAuditEventLog
saving transient instance
saving [edu.wustl.common.domain.AuditDataEventLog#<null>]
executing insertions
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
Wrapped collection in role: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
Wrapped collection in role: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
Inserting entity: edu.wustl.common.domain.AuditDataEventLog (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_LOG (AUDIT_EVENT_ID) values (?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditDataEventLog#<null>]
binding '6' to parameter: 1
Natively generated identity: 11
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
Inserting entity: [edu.wustl.common.domain.AuditDataEventLog#11]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_DATA_AUDIT_EVENT_LOG (OBJECT_IDENTIFIER, OBJECT_NAME, IDENTIFIER) values (?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditDataEventLog#11]
binding '3' to parameter: 1
binding 'test_user' to parameter: 2
binding '11' to parameter: 3
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'IDENTIFIER' to parameter: 1
binding null to parameter: 2
binding '3' to parameter: 3
binding '11' to parameter: 4
Natively generated identity: 39
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'EMAIL_ADDRESS' to parameter: 1
binding null to parameter: 2
binding 'abhijit_naik@persistent.co.in' to parameter: 3
binding '11' to parameter: 4
Natively generated identity: 40
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'LAST_NAME' to parameter: 1
binding null to parameter: 2
binding 'naik' to parameter: 3
binding '11' to parameter: 4
Natively generated identity: 41
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'FIRST_NAME' to parameter: 1
binding null to parameter: 2
binding 'abhijit' to parameter: 3
binding '11' to parameter: 4
Natively generated identity: 42
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
Insert Object
saving transient instance
saving [test.User#<null>]
executing insertions
processing cascade ACTION_SAVE_UPDATE for: test.User
done processing cascade ACTION_SAVE_UPDATE for: test.User
Wrapped collection in role: test.User.orderCollection
Inserting entity: test.User (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into test_user (EMAIL_ADDRESS, FIRST_NAME, LAST_NAME, ACTIVITY_STATUS) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [test.User#<null>]
binding 'sach@lale.co.in' to parameter: 1
binding 'sachin' to parameter: 2
binding 'Lale' to parameter: 3
binding null to parameter: 4
Natively generated identity: 4
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
processing cascade ACTION_SAVE_UPDATE for: test.User
cascade ACTION_SAVE_UPDATE for collection: test.User.orderCollection
done cascade ACTION_SAVE_UPDATE for collection: test.User.orderCollection
deleting orphans for collection: test.User.orderCollection
done deleting orphans for collection: test.User.orderCollection
done processing cascade ACTION_SAVE_UPDATE for: test.User
Inside isObjectAuditable method.
Inside obtainAuditableEventLog method.
Inside startAuditing method.
Inside auditReferenceAssociations method.
Inside auditContainmentAssociation method.
saving transient instance
saving [edu.wustl.common.domain.AuditEvent#<null>]
executing insertions
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
Wrapped collection in role: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
Inserting entity: edu.wustl.common.domain.AuditEvent (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT (EVENT_TIMESTAMP, USER_ID, EVENT_TYPE, COMMENTS, IP_ADDRESS) values (?, ?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEvent#<null>]
binding '2009-12-11 18:59:40' to parameter: 1
binding null to parameter: 2
binding 'INSERT' to parameter: 3
binding null to parameter: 4
binding null to parameter: 5
Natively generated identity: 7
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AbstractAuditEventLog
transient instance of: edu.wustl.common.domain.AbstractAuditEventLog
saving transient instance
saving [edu.wustl.common.domain.AuditDataEventLog#<null>]
executing insertions
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
Wrapped collection in role: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
Wrapped collection in role: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
Inserting entity: edu.wustl.common.domain.AuditDataEventLog (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_LOG (AUDIT_EVENT_ID) values (?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditDataEventLog#<null>]
binding '7' to parameter: 1
Natively generated identity: 12
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
Inserting entity: [edu.wustl.common.domain.AuditDataEventLog#12]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_DATA_AUDIT_EVENT_LOG (OBJECT_IDENTIFIER, OBJECT_NAME, IDENTIFIER) values (?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditDataEventLog#12]
binding '4' to parameter: 1
binding 'test_user' to parameter: 2
binding '12' to parameter: 3
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'IDENTIFIER' to parameter: 1
binding null to parameter: 2
binding '4' to parameter: 3
binding '12' to parameter: 4
Natively generated identity: 43
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'FIRST_NAME' to parameter: 1
binding null to parameter: 2
binding 'sachin' to parameter: 3
binding '12' to parameter: 4
Natively generated identity: 44
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'EMAIL_ADDRESS' to parameter: 1
binding null to parameter: 2
binding 'sach@lale.co.in' to parameter: 3
binding '12' to parameter: 4
Natively generated identity: 45
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
transient instance of: edu.wustl.common.domain.AuditEventDetails
saving transient instance
saving [edu.wustl.common.domain.AuditEventDetails#<null>]
executing insertions
Inserting entity: edu.wustl.common.domain.AuditEventDetails (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into CATISSUE_AUDIT_EVENT_DETAILS (ELEMENT_NAME, PREVIOUS_VALUE, CURRENT_VALUE, AUDIT_EVENT_LOG_ID) values (?, ?, ?, ?)
preparing statement
Dehydrating entity: [edu.wustl.common.domain.AuditEventDetails#<null>]
binding 'LAST_NAME' to parameter: 1
binding null to parameter: 2
binding 'Lale' to parameter: 3
binding '12' to parameter: 4
Natively generated identity: 46
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
Session commit
commit
automatically flushing session
flushing session
processing flush-time cascades
processing cascade ACTION_SAVE_UPDATE for: test.User
cascade ACTION_SAVE_UPDATE for collection: test.User.orderCollection
done cascade ACTION_SAVE_UPDATE for collection: test.User.orderCollection
deleting orphans for collection: test.User.orderCollection
done deleting orphans for collection: test.User.orderCollection
done processing cascade ACTION_SAVE_UPDATE for: test.User
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AbstractAuditEventLog
persistent instance of: edu.wustl.common.domain.AbstractAuditEventLog
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditDataEventLog#11]
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#39]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#40]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#41]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#42]
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
processing cascade ACTION_SAVE_UPDATE for: test.User
cascade ACTION_SAVE_UPDATE for collection: test.User.orderCollection
done cascade ACTION_SAVE_UPDATE for collection: test.User.orderCollection
deleting orphans for collection: test.User.orderCollection
done deleting orphans for collection: test.User.orderCollection
done processing cascade ACTION_SAVE_UPDATE for: test.User
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AbstractAuditEventLog
persistent instance of: edu.wustl.common.domain.AbstractAuditEventLog
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditDataEventLog#12]
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditEvent.auditEventLogCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditEvent
processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs
cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#43]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#44]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#45]
cascading to saveOrUpdate: edu.wustl.common.domain.AuditEventDetails
persistent instance of: edu.wustl.common.domain.AuditEventDetails
ignoring persistent instance
object already associated with session: [edu.wustl.common.domain.AuditEventDetails#46]
done cascade ACTION_SAVE_UPDATE for collection: edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection
done processing cascade ACTION_SAVE_UPDATE for: edu.wustl.common.domain.AuditDataEventLog
dirty checking collections
Flushing entities and processing referenced collections
Collection found: [test.User.orderCollection#3], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditEvent.auditEventLogCollection#6], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs#11], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection#11], was: [<unreferenced>] (initialized)
Collection found: [test.User.orderCollection#4], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditEvent.auditEventLogCollection#7], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs#12], was: [<unreferenced>] (initialized)
Collection found: [edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection#12], was: [<unreferenced>] (initialized)
Processing unreferenced collections
Scheduling collection removes/(re)creates/updates
Flushed: 0 insertions, 0 updates, 0 deletions to 14 objects
Flushed: 8 (re)creations, 0 updates, 0 removals to 8 collections
listing entities:
edu.wustl.common.domain.AuditDataEventLog{objectName=test_user, objectIdentifier=3, auditEventDetailsCollection=[edu.wustl.common.domain.AuditEventDetails#39, edu.wustl.common.domain.AuditEventDetails#40, edu.wustl.common.domain.AuditEventDetails#41, edu.wustl.common.domain.AuditEventDetails#42], auditEvent=edu.wustl.common.domain.AuditEvent#6, auditDataEventLogs=[], id=11}
test.User{orderCollection=[], emailAddress=sach@lale.co.in, activityStatus=null, firstName=sachin, id=4, lastName=Lale}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#12, currentValue=Lale, previousValue=null, elementName=LAST_NAME, id=46}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#12, currentValue=4, previousValue=null, elementName=IDENTIFIER, id=43}
edu.wustl.common.domain.AuditEvent{comments=null, userId=null, auditEventLogCollection=[edu.wustl.common.domain.AbstractAuditEventLog#12], ipAddress=null, timestamp=2009-12-11 18:59:40, eventType=INSERT, id=7}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#12, currentValue=sachin, previousValue=null, elementName=FIRST_NAME, id=44}
edu.wustl.common.domain.AuditEvent{comments=null, userId=null, auditEventLogCollection=[edu.wustl.common.domain.AbstractAuditEventLog#11], ipAddress=null, timestamp=2009-12-11 18:59:40, eventType=INSERT, id=6}
test.User{orderCollection=[], emailAddress=abhijit_naik@persistent.co.in, activityStatus=null, firstName=abhijit, id=3, lastName=naik}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#11, currentValue=abhijit_naik@persistent.co.in, previousValue=null, elementName=EMAIL_ADDRESS, id=40}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#11, currentValue=abhijit, previousValue=null, elementName=FIRST_NAME, id=42}
edu.wustl.common.domain.AuditDataEventLog{objectName=test_user, objectIdentifier=4, auditEventDetailsCollection=[edu.wustl.common.domain.AuditEventDetails#43, edu.wustl.common.domain.AuditEventDetails#44, edu.wustl.common.domain.AuditEventDetails#45, edu.wustl.common.domain.AuditEventDetails#46], auditEvent=edu.wustl.common.domain.AuditEvent#7, auditDataEventLogs=[], id=12}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#11, currentValue=naik, previousValue=null, elementName=LAST_NAME, id=41}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#11, currentValue=3, previousValue=null, elementName=IDENTIFIER, id=39}
edu.wustl.common.domain.AuditEventDetails{auditEventLog=edu.wustl.common.domain.AuditDataEventLog#12, currentValue=sach@lale.co.in, previousValue=null, elementName=EMAIL_ADDRESS, id=45}
executing flush
registering flush begin
Invalidating: test.User.orderCollection#3
key: test.User.orderCollection#3
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore miss for test.User.orderCollection#3
test.User.orderCollection cache - Miss
Element for test.User.orderCollection#3 is null
Invalidating: test.User.orderCollection#4
key: test.User.orderCollection#4
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore miss for test.User.orderCollection#4
test.User.orderCollection cache - Miss
Element for test.User.orderCollection#4 is null
Inserting collection: [edu.wustl.common.domain.AuditEvent.auditEventLogCollection#6]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
update CATISSUE_AUDIT_EVENT_LOG set AUDIT_EVENT_ID=? where IDENTIFIER=?
preparing statement
binding '6' to parameter: 1
binding '11' to parameter: 2
Adding to batch
done inserting collection: 1 rows inserted
Inserting collection: [edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs#11]
collection was empty
Inserting collection: [edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection#11]
Executing batch size: 1
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
preparing statement
binding '11' to parameter: 1
binding '39' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '11' to parameter: 1
binding '40' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '11' to parameter: 1
binding '41' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '11' to parameter: 1
binding '42' to parameter: 2
Adding to batch
done inserting collection: 4 rows inserted
Inserting collection: [edu.wustl.common.domain.AuditEvent.auditEventLogCollection#7]
Executing batch size: 4
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
update CATISSUE_AUDIT_EVENT_LOG set AUDIT_EVENT_ID=? where IDENTIFIER=?
preparing statement
binding '7' to parameter: 1
binding '12' to parameter: 2
Adding to batch
done inserting collection: 1 rows inserted
Inserting collection: [edu.wustl.common.domain.AuditDataEventLog.auditDataEventLogs#12]
collection was empty
Inserting collection: [edu.wustl.common.domain.AuditDataEventLog.auditEventDetailsCollection#12]
Executing batch size: 1
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
preparing statement
binding '12' to parameter: 1
binding '43' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '12' to parameter: 1
binding '44' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '12' to parameter: 1
binding '45' to parameter: 2
Adding to batch
reusing prepared statement
update CATISSUE_AUDIT_EVENT_DETAILS set AUDIT_EVENT_LOG_ID=? where IDENTIFIER=?
binding '12' to parameter: 1
binding '46' to parameter: 2
Adding to batch
done inserting collection: 4 rows inserted
Executing batch size: 4
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
registering flush end
post flush
before transaction completion
before transaction completion
committed JDBC Connection
after transaction completion
aggressively releasing JDBC connection
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
after transaction completion
Releasing: test.User.orderCollection#3
key: test.User.orderCollection#3
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#3
Releasing: test.User.orderCollection#4
key: test.User.orderCollection#4
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#4
Close the session
closing session
connection already null in cleanup : no action
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5163164386816002
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
begin
current autocommit status: false
after transaction begin
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Inside retrieve method
Prepare select part of query.
Prepare from part of query
unable to locate HQL query plan in cache; generating (from test.User User WHERE  User.lastName = 'Naik' OR User.id in (  1, 2) )
parse() - HQL: from test.User User WHERE  User.lastName = 'Naik' OR User.id in (  1, 2) 
--- HQL AST ---
 \-[QUERY] 'query'
    +-[SELECT_FROM] 'SELECT_FROM'
    |  \-[FROM] 'from'
    |     \-[RANGE] 'RANGE'
    |        +-[DOT] '.'
    |        |  +-[IDENT] 'test'
    |        |  \-[IDENT] 'User'
    |        \-[ALIAS] 'User'
    \-[WHERE] 'WHERE'
       \-[OR] 'OR'
          +-[EQ] '='
          |  +-[DOT] '.'
          |  |  +-[IDENT] 'User'
          |  |  \-[IDENT] 'lastName'
          |  \-[QUOTED_STRING] ''Naik''
          \-[IN] 'in'
             +-[DOT] '.'
             |  +-[IDENT] 'User'
             |  \-[IDENT] 'id'
             \-[IN_LIST] 'inList'
                +-[NUM_INT] '1'
                \-[NUM_INT] '2'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} :  test.User (User) -> user0_
Resolved :  User -> user0_.IDENTIFIER
getDataType() : lastName -> org.hibernate.type.StringType@c8769b
Resolved :  User.lastName -> user0_.LAST_NAME
Resolved :  User -> user0_.IDENTIFIER
getDataType() : id -> org.hibernate.type.LongType@1584807
Resolved :  User.id -> user0_.IDENTIFIER
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( FromClause{level=1} test_user user0_ ) ( WHERE ( OR ( = ( user0_.LAST_NAME user0_.IDENTIFIER lastName ) 'Naik' ) ( in ( user0_.IDENTIFIER user0_.IDENTIFIER id ) ( inList 1 2 ) ) ) ) )
Derived SELECT clause created.
Using FROM fragment [test_user user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (test_user)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.IDENTIFIER as IDENTIFIER0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[User], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'test_user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[OR] SqlNode: 'OR'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.LAST_NAME' {propertyName=lastName,dereferenceType=4,propertyPath=lastName,path=User.lastName,tableAlias=user0_,className=test.User,classAlias=User}
          |  |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[QUOTED_STRING] LiteralNode: ''Naik''
          \-[IN] InLogicOperatorNode: 'in'
             +-[DOT] DotNode: 'user0_.IDENTIFIER' {propertyName=id,dereferenceType=4,propertyPath=id,path=User.id,tableAlias=user0_,className=test.User,classAlias=User}
             |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'id' {originalText=id}
             \-[IN_LIST] SqlNode: 'inList'
                +-[NUM_INT] LiteralNode: '1'
                \-[NUM_INT] LiteralNode: '2'

throwQueryException() : no errors
HQL: from test.User User WHERE  User.lastName = 'Naik' OR User.id in (  1, 2) 
SQL: select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_ where user0_.LAST_NAME='Naik' or user0_.IDENTIFIER in (1 , 2)
throwQueryException() : no errors
HQL param location recognition took 0 mills (from test.User User WHERE  User.lastName = 'Naik' OR User.id in (  1, 2) )
located HQL query plan in cache (from test.User User WHERE  User.lastName = 'Naik' OR User.id in (  1, 2) )
find: from test.User User WHERE  User.lastName = 'Naik' OR User.id in (  1, 2) 
named parameters: {}
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_ where user0_.LAST_NAME='Naik' or user0_.IDENTIFIER in (1 , 2)
preparing statement
about to open ResultSet (open ResultSets: 0, globally: 0)
processing result set
result set row: 0
returning '1' as column: IDENTIFIER0_
result row: EntityKey[test.User#1]
Initializing object from ResultSet: [test.User#1]
Hydrating entity: [test.User#1]
returning 'kalpana@kalpana.com' as column: EMAIL2_0_
returning 'Maria johns' as column: FIRST3_0_
returning 'Thakur' as column: LAST4_0_
returning 'Active' as column: ACTIVITY5_0_
result set row: 1
returning '2' as column: IDENTIFIER0_
result row: EntityKey[test.User#2]
Initializing object from ResultSet: [test.User#2]
Hydrating entity: [test.User#2]
returning 'kalpana@kalpana.com' as column: EMAIL2_0_
returning 'kalpana' as column: FIRST3_0_
returning 'Thakur' as column: LAST4_0_
returning 'Active' as column: ACTIVITY5_0_
result set row: 2
returning '3' as column: IDENTIFIER0_
result row: EntityKey[test.User#3]
Initializing object from ResultSet: [test.User#3]
Hydrating entity: [test.User#3]
returning 'abhijit_naik@persistent.co.in' as column: EMAIL2_0_
returning 'abhijit' as column: FIRST3_0_
returning 'naik' as column: LAST4_0_
returning null as column: ACTIVITY5_0_
done processing result set (3 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
total objects hydrated: 3
resolving associations for [test.User#1]
creating collection wrapper:[test.User.orderCollection#1]
adding entity to second-level cache: [test.User#1]
Caching: test.User#1
key: test.User#1
test.UserCache: test.UserMemoryStore hit for test.User#1
Item was already cached: test.User#1
done materializing entity [test.User#1]
resolving associations for [test.User#2]
creating collection wrapper:[test.User.orderCollection#2]
adding entity to second-level cache: [test.User#2]
Caching: test.User#2
key: test.User#2
test.UserCache: test.UserMemoryStore miss for test.User#2
test.User cache - Miss
Element for test.User#2 is null
Cached: test.User#2
done materializing entity [test.User#2]
resolving associations for [test.User#3]
creating collection wrapper:[test.User.orderCollection#3]
adding entity to second-level cache: [test.User#3]
Caching: test.User#3
key: test.User#3
test.UserCache: test.UserMemoryStore miss for test.User#3
test.User cache - Miss
Element for test.User#3 is null
Cached: test.User#3
done materializing entity [test.User#3]
initializing non-lazy collections
initializing collection [test.User.orderCollection#3]
checking second-level cache
Cache lookup: test.User.orderCollection#3
key: test.User.orderCollection#3
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#3
Cached item was locked: test.User.orderCollection#3
collection not cached
loading collection: [test.User.orderCollection#3]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select ordercolle0_.user_id as user3_2_, ordercolle0_.IDENTIFIER as IDENTIFIER2_, ordercolle0_.IDENTIFIER as IDENTIFIER3_1_, ordercolle0_.person_id as person2_3_1_, ordercolle0_.user_id as user3_3_1_, person1_.IDENTIFIER as IDENTIFIER1_0_, person1_.NAME as NAME1_0_, person1_.ADDRESS_ID as ADDRESS3_1_0_ from test_order ordercolle0_ left outer join test_person person1_ on ordercolle0_.person_id=person1_.IDENTIFIER where ordercolle0_.user_id=?
preparing statement
binding '3' to parameter: 1
about to open ResultSet (open ResultSets: 0, globally: 0)
result set contains (possibly empty) collection: [test.User.orderCollection#3]
uninitialized collection: initializing
processing result set
done processing result set (0 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
total objects hydrated: 0
1 collections were found in result set for role: test.User.orderCollection
Caching collection: [test.User.orderCollection#3]
Caching: test.User.orderCollection#3
key: test.User.orderCollection#3
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#3
Cached: test.User.orderCollection#3
collection fully initialized: [test.User.orderCollection#3]
1 collections initialized for role: test.User.orderCollection
done loading collection
collection initialized
initializing collection [test.User.orderCollection#2]
checking second-level cache
Cache lookup: test.User.orderCollection#2
key: test.User.orderCollection#2
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#2
Cached item was locked: test.User.orderCollection#2
collection not cached
loading collection: [test.User.orderCollection#2]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select ordercolle0_.user_id as user3_2_, ordercolle0_.IDENTIFIER as IDENTIFIER2_, ordercolle0_.IDENTIFIER as IDENTIFIER3_1_, ordercolle0_.person_id as person2_3_1_, ordercolle0_.user_id as user3_3_1_, person1_.IDENTIFIER as IDENTIFIER1_0_, person1_.NAME as NAME1_0_, person1_.ADDRESS_ID as ADDRESS3_1_0_ from test_order ordercolle0_ left outer join test_person person1_ on ordercolle0_.person_id=person1_.IDENTIFIER where ordercolle0_.user_id=?
preparing statement
binding '2' to parameter: 1
about to open ResultSet (open ResultSets: 0, globally: 0)
result set contains (possibly empty) collection: [test.User.orderCollection#2]
uninitialized collection: initializing
processing result set
result set row: 0
returning null as column: IDENTIFIER1_0_
returning '5' as column: IDENTIFIER3_1_
result row: null, EntityKey[test.Order#5]
Initializing object from ResultSet: [test.Order#5]
Hydrating entity: [test.Order#5]
returning null as column: person2_3_1_
returning '2' as column: user3_3_1_
returning '2' as column: user3_2_
found row of collection: [test.User.orderCollection#2]
reading row
returning '5' as column: IDENTIFIER2_
loading entity: [test.Order#5]
attempting to resolve: [test.Order#5]
resolved object in session cache: [test.Order#5]
result set row: 1
returning null as column: IDENTIFIER1_0_
returning '6' as column: IDENTIFIER3_1_
result row: null, EntityKey[test.Order#6]
Initializing object from ResultSet: [test.Order#6]
Hydrating entity: [test.Order#6]
returning null as column: person2_3_1_
returning '2' as column: user3_3_1_
returning '2' as column: user3_2_
found row of collection: [test.User.orderCollection#2]
reading row
returning '6' as column: IDENTIFIER2_
loading entity: [test.Order#6]
attempting to resolve: [test.Order#6]
resolved object in session cache: [test.Order#6]
done processing result set (2 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
total objects hydrated: 2
resolving associations for [test.Order#5]
loading entity: [test.User#2]
entity found in session cache
adding entity to second-level cache: [test.Order#5]
Caching: test.Order#5
key: test.Order#5
test.OrderCache: test.OrderMemoryStore miss for test.Order#5
test.Order cache - Miss
Element for test.Order#5 is null
Cached: test.Order#5
done materializing entity [test.Order#5]
resolving associations for [test.Order#6]
loading entity: [test.User#2]
entity found in session cache
adding entity to second-level cache: [test.Order#6]
Caching: test.Order#6
key: test.Order#6
test.OrderCache: test.OrderMemoryStore miss for test.Order#6
test.Order cache - Miss
Element for test.Order#6 is null
Cached: test.Order#6
done materializing entity [test.Order#6]
1 collections were found in result set for role: test.User.orderCollection
Caching collection: [test.User.orderCollection#2]
Caching: test.User.orderCollection#2
key: test.User.orderCollection#2
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#2
Cached: test.User.orderCollection#2
collection fully initialized: [test.User.orderCollection#2]
1 collections initialized for role: test.User.orderCollection
done loading collection
collection initialized
initializing collection [test.User.orderCollection#1]
checking second-level cache
Cache lookup: test.User.orderCollection#1
key: test.User.orderCollection#1
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#1
Cached item was locked: test.User.orderCollection#1
collection not cached
loading collection: [test.User.orderCollection#1]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select ordercolle0_.user_id as user3_2_, ordercolle0_.IDENTIFIER as IDENTIFIER2_, ordercolle0_.IDENTIFIER as IDENTIFIER3_1_, ordercolle0_.person_id as person2_3_1_, ordercolle0_.user_id as user3_3_1_, person1_.IDENTIFIER as IDENTIFIER1_0_, person1_.NAME as NAME1_0_, person1_.ADDRESS_ID as ADDRESS3_1_0_ from test_order ordercolle0_ left outer join test_person person1_ on ordercolle0_.person_id=person1_.IDENTIFIER where ordercolle0_.user_id=?
preparing statement
binding '1' to parameter: 1
about to open ResultSet (open ResultSets: 0, globally: 0)
result set contains (possibly empty) collection: [test.User.orderCollection#1]
uninitialized collection: initializing
processing result set
result set row: 0
returning null as column: IDENTIFIER1_0_
returning '3' as column: IDENTIFIER3_1_
result row: null, EntityKey[test.Order#3]
Initializing object from ResultSet: [test.Order#3]
Hydrating entity: [test.Order#3]
returning null as column: person2_3_1_
returning '1' as column: user3_3_1_
returning '1' as column: user3_2_
found row of collection: [test.User.orderCollection#1]
reading row
returning '3' as column: IDENTIFIER2_
loading entity: [test.Order#3]
attempting to resolve: [test.Order#3]
resolved object in session cache: [test.Order#3]
result set row: 1
returning null as column: IDENTIFIER1_0_
returning '4' as column: IDENTIFIER3_1_
result row: null, EntityKey[test.Order#4]
Initializing object from ResultSet: [test.Order#4]
Hydrating entity: [test.Order#4]
returning null as column: person2_3_1_
returning '1' as column: user3_3_1_
returning '1' as column: user3_2_
found row of collection: [test.User.orderCollection#1]
reading row
returning '4' as column: IDENTIFIER2_
loading entity: [test.Order#4]
attempting to resolve: [test.Order#4]
resolved object in session cache: [test.Order#4]
done processing result set (2 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
total objects hydrated: 2
resolving associations for [test.Order#3]
loading entity: [test.User#1]
entity found in session cache
adding entity to second-level cache: [test.Order#3]
Caching: test.Order#3
key: test.Order#3
test.OrderCache: test.OrderMemoryStore hit for test.Order#3
Item was already cached: test.Order#3
done materializing entity [test.Order#3]
resolving associations for [test.Order#4]
loading entity: [test.User#1]
entity found in session cache
adding entity to second-level cache: [test.Order#4]
Caching: test.Order#4
key: test.Order#4
test.OrderCache: test.OrderMemoryStore hit for test.Order#4
Item was already cached: test.Order#4
done materializing entity [test.Order#4]
1 collections were found in result set for role: test.User.orderCollection
Caching collection: [test.User.orderCollection#1]
Caching: test.User.orderCollection#1
key: test.User.orderCollection#1
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#1
Cached: test.User.orderCollection#1
collection fully initialized: [test.User.orderCollection#1]
1 collections initialized for role: test.User.orderCollection
done loading collection
collection initialized
Inside retrieve method
Prepare select part of query.
Prepare from part of query
unable to locate HQL query plan in cache; generating (from test.User User WHERE  User.id = 1 OR User.lastName is not null )
parse() - HQL: from test.User User WHERE  User.id = 1 OR User.lastName is not null 
--- HQL AST ---
 \-[QUERY] 'query'
    +-[SELECT_FROM] 'SELECT_FROM'
    |  \-[FROM] 'from'
    |     \-[RANGE] 'RANGE'
    |        +-[DOT] '.'
    |        |  +-[IDENT] 'test'
    |        |  \-[IDENT] 'User'
    |        \-[ALIAS] 'User'
    \-[WHERE] 'WHERE'
       \-[OR] 'OR'
          +-[EQ] '='
          |  +-[DOT] '.'
          |  |  +-[IDENT] 'User'
          |  |  \-[IDENT] 'id'
          |  \-[NUM_INT] '1'
          \-[IS_NOT_NULL] 'is not null'
             \-[DOT] '.'
                +-[IDENT] 'User'
                \-[IDENT] 'lastName'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} :  test.User (User) -> user0_
Resolved :  User -> user0_.IDENTIFIER
getDataType() : id -> org.hibernate.type.LongType@1584807
Resolved :  User.id -> user0_.IDENTIFIER
Resolved :  User -> user0_.IDENTIFIER
getDataType() : lastName -> org.hibernate.type.StringType@c8769b
Resolved :  User.lastName -> user0_.LAST_NAME
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( FromClause{level=1} test_user user0_ ) ( WHERE ( OR ( = ( user0_.IDENTIFIER user0_.IDENTIFIER id ) 1 ) ( is not null ( user0_.LAST_NAME user0_.IDENTIFIER lastName ) ) ) ) )
Derived SELECT clause created.
Using FROM fragment [test_user user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (test_user)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.IDENTIFIER as IDENTIFIER0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[User], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'test_user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[OR] SqlNode: 'OR'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.IDENTIFIER' {propertyName=id,dereferenceType=4,propertyPath=id,path=User.id,tableAlias=user0_,className=test.User,classAlias=User}
          |  |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
          |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
          |  \-[NUM_INT] LiteralNode: '1'
          \-[IS_NOT_NULL] UnaryLogicOperatorNode: 'is not null'
             \-[DOT] DotNode: 'user0_.LAST_NAME' {propertyName=lastName,dereferenceType=4,propertyPath=lastName,path=User.lastName,tableAlias=user0_,className=test.User,classAlias=User}
                +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
                \-[IDENT] IdentNode: 'lastName' {originalText=lastName}

throwQueryException() : no errors
HQL: from test.User User WHERE  User.id = 1 OR User.lastName is not null 
SQL: select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_ where user0_.IDENTIFIER=1 or user0_.LAST_NAME is not null
throwQueryException() : no errors
HQL param location recognition took 0 mills (from test.User User WHERE  User.id = 1 OR User.lastName is not null )
located HQL query plan in cache (from test.User User WHERE  User.id = 1 OR User.lastName is not null )
find: from test.User User WHERE  User.id = 1 OR User.lastName is not null 
named parameters: {}
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_ where user0_.IDENTIFIER=1 or user0_.LAST_NAME is not null
preparing statement
about to open ResultSet (open ResultSets: 0, globally: 0)
processing result set
result set row: 0
returning '1' as column: IDENTIFIER0_
result row: EntityKey[test.User#1]
result set row: 1
returning '2' as column: IDENTIFIER0_
result row: EntityKey[test.User#2]
result set row: 2
returning '3' as column: IDENTIFIER0_
result row: EntityKey[test.User#3]
result set row: 3
returning '4' as column: IDENTIFIER0_
result row: EntityKey[test.User#4]
Initializing object from ResultSet: [test.User#4]
Hydrating entity: [test.User#4]
returning 'sach@lale.co.in' as column: EMAIL2_0_
returning 'sachin' as column: FIRST3_0_
returning 'Lale' as column: LAST4_0_
returning null as column: ACTIVITY5_0_
done processing result set (4 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
total objects hydrated: 1
resolving associations for [test.User#4]
creating collection wrapper:[test.User.orderCollection#4]
adding entity to second-level cache: [test.User#4]
Caching: test.User#4
key: test.User#4
test.UserCache: test.UserMemoryStore miss for test.User#4
test.User cache - Miss
Element for test.User#4 is null
Cached: test.User#4
done materializing entity [test.User#4]
initializing non-lazy collections
initializing collection [test.User.orderCollection#4]
checking second-level cache
Cache lookup: test.User.orderCollection#4
key: test.User.orderCollection#4
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#4
Cached item was locked: test.User.orderCollection#4
collection not cached
loading collection: [test.User.orderCollection#4]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select ordercolle0_.user_id as user3_2_, ordercolle0_.IDENTIFIER as IDENTIFIER2_, ordercolle0_.IDENTIFIER as IDENTIFIER3_1_, ordercolle0_.person_id as person2_3_1_, ordercolle0_.user_id as user3_3_1_, person1_.IDENTIFIER as IDENTIFIER1_0_, person1_.NAME as NAME1_0_, person1_.ADDRESS_ID as ADDRESS3_1_0_ from test_order ordercolle0_ left outer join test_person person1_ on ordercolle0_.person_id=person1_.IDENTIFIER where ordercolle0_.user_id=?
preparing statement
binding '4' to parameter: 1
about to open ResultSet (open ResultSets: 0, globally: 0)
result set contains (possibly empty) collection: [test.User.orderCollection#4]
uninitialized collection: initializing
processing result set
done processing result set (0 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
total objects hydrated: 0
1 collections were found in result set for role: test.User.orderCollection
Caching collection: [test.User.orderCollection#4]
Caching: test.User.orderCollection#4
key: test.User.orderCollection#4
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#4
Cached: test.User.orderCollection#4
collection fully initialized: [test.User.orderCollection#4]
1 collections initialized for role: test.User.orderCollection
done loading collection
collection initialized
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5163164387840002
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
begin
current autocommit status: false
after transaction begin
Inside retrieve method
Prepare select part of query.
Prepare from part of query
unable to locate HQL query plan in cache; generating (from test.User User)
parse() - HQL: from test.User User
--- HQL AST ---
 \-[QUERY] 'query'
    \-[SELECT_FROM] 'SELECT_FROM'
       \-[FROM] 'from'
          \-[RANGE] 'RANGE'
             +-[DOT] '.'
             |  +-[IDENT] 'test'
             |  \-[IDENT] 'User'
             \-[ALIAS] 'User'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} :  test.User (User) -> user0_
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( FromClause{level=1} test_user user0_ ) )
Derived SELECT clause created.
Using FROM fragment [test_user user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (test_user)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.IDENTIFIER as IDENTIFIER0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[User], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'test_user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}

throwQueryException() : no errors
HQL: from test.User User
SQL: select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_
throwQueryException() : no errors
HQL param location recognition took 0 mills (from test.User User)
located HQL query plan in cache (from test.User User)
find: from test.User User
named parameters: {}
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_
preparing statement
about to open ResultSet (open ResultSets: 0, globally: 0)
processing result set
result set row: 0
returning '1' as column: IDENTIFIER0_
result row: EntityKey[test.User#1]
Initializing object from ResultSet: [test.User#1]
Hydrating entity: [test.User#1]
returning 'kalpana@kalpana.com' as column: EMAIL2_0_
returning 'Maria johns' as column: FIRST3_0_
returning 'Thakur' as column: LAST4_0_
returning 'Active' as column: ACTIVITY5_0_
result set row: 1
returning '2' as column: IDENTIFIER0_
result row: EntityKey[test.User#2]
Initializing object from ResultSet: [test.User#2]
Hydrating entity: [test.User#2]
returning 'kalpana@kalpana.com' as column: EMAIL2_0_
returning 'kalpana' as column: FIRST3_0_
returning 'Thakur' as column: LAST4_0_
returning 'Active' as column: ACTIVITY5_0_
result set row: 2
returning '3' as column: IDENTIFIER0_
result row: EntityKey[test.User#3]
Initializing object from ResultSet: [test.User#3]
Hydrating entity: [test.User#3]
returning 'abhijit_naik@persistent.co.in' as column: EMAIL2_0_
returning 'abhijit' as column: FIRST3_0_
returning 'naik' as column: LAST4_0_
returning null as column: ACTIVITY5_0_
result set row: 3
returning '4' as column: IDENTIFIER0_
result row: EntityKey[test.User#4]
Initializing object from ResultSet: [test.User#4]
Hydrating entity: [test.User#4]
returning 'sach@lale.co.in' as column: EMAIL2_0_
returning 'sachin' as column: FIRST3_0_
returning 'Lale' as column: LAST4_0_
returning null as column: ACTIVITY5_0_
done processing result set (4 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
total objects hydrated: 4
resolving associations for [test.User#1]
creating collection wrapper:[test.User.orderCollection#1]
adding entity to second-level cache: [test.User#1]
Caching: test.User#1
key: test.User#1
test.UserCache: test.UserMemoryStore hit for test.User#1
Item was already cached: test.User#1
done materializing entity [test.User#1]
resolving associations for [test.User#2]
creating collection wrapper:[test.User.orderCollection#2]
adding entity to second-level cache: [test.User#2]
Caching: test.User#2
key: test.User#2
test.UserCache: test.UserMemoryStore hit for test.User#2
Item was already cached: test.User#2
done materializing entity [test.User#2]
resolving associations for [test.User#3]
creating collection wrapper:[test.User.orderCollection#3]
adding entity to second-level cache: [test.User#3]
Caching: test.User#3
key: test.User#3
test.UserCache: test.UserMemoryStore hit for test.User#3
Item was already cached: test.User#3
done materializing entity [test.User#3]
resolving associations for [test.User#4]
creating collection wrapper:[test.User.orderCollection#4]
adding entity to second-level cache: [test.User#4]
Caching: test.User#4
key: test.User#4
test.UserCache: test.UserMemoryStore hit for test.User#4
Item was already cached: test.User#4
done materializing entity [test.User#4]
initializing non-lazy collections
initializing collection [test.User.orderCollection#4]
checking second-level cache
Cache lookup: test.User.orderCollection#4
key: test.User.orderCollection#4
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#4
Cache hit: test.User.orderCollection#4
collection initialized from cache
initializing collection [test.User.orderCollection#3]
checking second-level cache
Cache lookup: test.User.orderCollection#3
key: test.User.orderCollection#3
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#3
Cache hit: test.User.orderCollection#3
collection initialized from cache
initializing collection [test.User.orderCollection#2]
checking second-level cache
Cache lookup: test.User.orderCollection#2
key: test.User.orderCollection#2
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#2
Cache hit: test.User.orderCollection#2
loading entity: [test.Order#5]
attempting to resolve: [test.Order#5]
Cache lookup: test.Order#5
key: test.Order#5
test.OrderCache: test.OrderMemoryStore hit for test.Order#5
Cache hit: test.Order#5
assembling entity from second-level cache: [test.Order#5]
loading entity: [test.User#2]
entity found in session cache
Cached Version: null
resolved object in second-level cache: [test.Order#5]
loading entity: [test.Order#6]
attempting to resolve: [test.Order#6]
Cache lookup: test.Order#6
key: test.Order#6
test.OrderCache: test.OrderMemoryStore hit for test.Order#6
Cache hit: test.Order#6
assembling entity from second-level cache: [test.Order#6]
loading entity: [test.User#2]
entity found in session cache
Cached Version: null
resolved object in second-level cache: [test.Order#6]
collection initialized from cache
initializing collection [test.User.orderCollection#1]
checking second-level cache
Cache lookup: test.User.orderCollection#1
key: test.User.orderCollection#1
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#1
Cache hit: test.User.orderCollection#1
loading entity: [test.Order#3]
attempting to resolve: [test.Order#3]
Cache lookup: test.Order#3
key: test.Order#3
test.OrderCache: test.OrderMemoryStore hit for test.Order#3
Cache hit: test.Order#3
assembling entity from second-level cache: [test.Order#3]
loading entity: [test.User#1]
entity found in session cache
Cached Version: null
resolved object in second-level cache: [test.Order#3]
loading entity: [test.Order#4]
attempting to resolve: [test.Order#4]
Cache lookup: test.Order#4
key: test.Order#4
test.OrderCache: test.OrderMemoryStore hit for test.Order#4
Cache hit: test.Order#4
assembling entity from second-level cache: [test.Order#4]
loading entity: [test.User#1]
entity found in session cache
Cached Version: null
resolved object in second-level cache: [test.Order#4]
collection initialized from cache
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5163164387840003
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
begin
current autocommit status: false
after transaction begin
Inside retrieve method
Prepare select part of query.
Prepare from part of query
unable to locate HQL query plan in cache; generating (from test.User User WHERE  User.id = 1 )
parse() - HQL: from test.User User WHERE  User.id = 1 
--- HQL AST ---
 \-[QUERY] 'query'
    +-[SELECT_FROM] 'SELECT_FROM'
    |  \-[FROM] 'from'
    |     \-[RANGE] 'RANGE'
    |        +-[DOT] '.'
    |        |  +-[IDENT] 'test'
    |        |  \-[IDENT] 'User'
    |        \-[ALIAS] 'User'
    \-[WHERE] 'WHERE'
       \-[EQ] '='
          +-[DOT] '.'
          |  +-[IDENT] 'User'
          |  \-[IDENT] 'id'
          \-[NUM_INT] '1'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} :  test.User (User) -> user0_
Resolved :  User -> user0_.IDENTIFIER
getDataType() : id -> org.hibernate.type.LongType@1584807
Resolved :  User.id -> user0_.IDENTIFIER
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( FromClause{level=1} test_user user0_ ) ( WHERE ( = ( user0_.IDENTIFIER user0_.IDENTIFIER id ) 1 ) ) )
Derived SELECT clause created.
Using FROM fragment [test_user user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (test_user)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.IDENTIFIER as IDENTIFIER0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[User], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'test_user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.IDENTIFIER' {propertyName=id,dereferenceType=4,propertyPath=id,path=User.id,tableAlias=user0_,className=test.User,classAlias=User}
          |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_INT] LiteralNode: '1'

throwQueryException() : no errors
HQL: from test.User User WHERE  User.id = 1 
SQL: select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_ where user0_.IDENTIFIER=1
throwQueryException() : no errors
HQL param location recognition took 0 mills (from test.User User WHERE  User.id = 1 )
located HQL query plan in cache (from test.User User WHERE  User.id = 1 )
find: from test.User User WHERE  User.id = 1 
named parameters: {}
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_ where user0_.IDENTIFIER=1
preparing statement
about to open ResultSet (open ResultSets: 0, globally: 0)
processing result set
result set row: 0
returning '1' as column: IDENTIFIER0_
result row: EntityKey[test.User#1]
Initializing object from ResultSet: [test.User#1]
Hydrating entity: [test.User#1]
returning 'kalpana@kalpana.com' as column: EMAIL2_0_
returning 'Maria johns' as column: FIRST3_0_
returning 'Thakur' as column: LAST4_0_
returning 'Active' as column: ACTIVITY5_0_
done processing result set (1 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
total objects hydrated: 1
resolving associations for [test.User#1]
creating collection wrapper:[test.User.orderCollection#1]
adding entity to second-level cache: [test.User#1]
Caching: test.User#1
key: test.User#1
test.UserCache: test.UserMemoryStore hit for test.User#1
Item was already cached: test.User#1
done materializing entity [test.User#1]
initializing non-lazy collections
initializing collection [test.User.orderCollection#1]
checking second-level cache
Cache lookup: test.User.orderCollection#1
key: test.User.orderCollection#1
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#1
Cache hit: test.User.orderCollection#1
loading entity: [test.Order#3]
attempting to resolve: [test.Order#3]
Cache lookup: test.Order#3
key: test.Order#3
test.OrderCache: test.OrderMemoryStore hit for test.Order#3
Cache hit: test.Order#3
assembling entity from second-level cache: [test.Order#3]
loading entity: [test.User#1]
entity found in session cache
Cached Version: null
resolved object in second-level cache: [test.Order#3]
loading entity: [test.Order#4]
attempting to resolve: [test.Order#4]
Cache lookup: test.Order#4
key: test.Order#4
test.OrderCache: test.OrderMemoryStore hit for test.Order#4
Cache hit: test.Order#4
assembling entity from second-level cache: [test.Order#4]
loading entity: [test.User#1]
entity found in session cache
Cached Version: null
resolved object in second-level cache: [test.Order#4]
collection initialized from cache
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5163164387905536
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
begin
current autocommit status: false
after transaction begin
Inside retrieve method
Prepare select part of query.
Prepare from part of query
unable to locate HQL query plan in cache; generating (Select User.id, User.firstName, User.lastName, User.emailAddress   from test.User User)
parse() - HQL: Select User.id, User.firstName, User.lastName, User.emailAddress   from test.User User
--- HQL AST ---
 \-[QUERY] 'query'
    \-[SELECT_FROM] 'SELECT_FROM'
       +-[FROM] 'from'
       |  \-[RANGE] 'RANGE'
       |     +-[DOT] '.'
       |     |  +-[IDENT] 'test'
       |     |  \-[IDENT] 'User'
       |     \-[ALIAS] 'User'
       \-[SELECT] 'Select'
          +-[DOT] '.'
          |  +-[IDENT] 'User'
          |  \-[IDENT] 'id'
          +-[DOT] '.'
          |  +-[IDENT] 'User'
          |  \-[IDENT] 'firstName'
          +-[DOT] '.'
          |  +-[IDENT] 'User'
          |  \-[IDENT] 'lastName'
          \-[DOT] '.'
             +-[IDENT] 'User'
             \-[IDENT] 'emailAddress'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} :  test.User (User) -> user0_
Resolved :  User -> user0_.IDENTIFIER
getDataType() : id -> org.hibernate.type.LongType@1584807
Resolved :  User.id -> user0_.IDENTIFIER
Resolved :  User -> user0_.IDENTIFIER
getDataType() : firstName -> org.hibernate.type.StringType@c8769b
Resolved :  User.firstName -> user0_.FIRST_NAME
Resolved :  User -> user0_.IDENTIFIER
getDataType() : lastName -> org.hibernate.type.StringType@c8769b
Resolved :  User.lastName -> user0_.LAST_NAME
Resolved :  User -> user0_.IDENTIFIER
getDataType() : emailAddress -> org.hibernate.type.StringType@c8769b
Resolved :  User.emailAddress -> user0_.EMAIL_ADDRESS
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( user0_.IDENTIFIER user0_.IDENTIFIER id ) ( user0_.FIRST_NAME user0_.IDENTIFIER firstName ) ( user0_.LAST_NAME user0_.IDENTIFIER lastName ) ( user0_.EMAIL_ADDRESS user0_.IDENTIFIER emailAddress ) ) ( FromClause{level=1} test_user user0_ ) )
Using FROM fragment [test_user user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (test_user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'user0_.IDENTIFIER' {propertyName=id,dereferenceType=4,propertyPath=id,path=User.id,tableAlias=user0_,className=test.User,classAlias=User}
    |  |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'user0_.FIRST_NAME' {propertyName=firstName,dereferenceType=4,propertyPath=firstName,path=User.firstName,tableAlias=user0_,className=test.User,classAlias=User}
    |  |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
    |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[DOT] DotNode: 'user0_.LAST_NAME' {propertyName=lastName,dereferenceType=4,propertyPath=lastName,path=User.lastName,tableAlias=user0_,className=test.User,classAlias=User}
    |  |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
    |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_2_0_'
    |  +-[DOT] DotNode: 'user0_.EMAIL_ADDRESS' {propertyName=emailAddress,dereferenceType=4,propertyPath=emailAddress,path=User.emailAddress,tableAlias=user0_,className=test.User,classAlias=User}
    |  |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
    |  |  \-[IDENT] IdentNode: 'emailAddress' {originalText=emailAddress}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[User], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'test_user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}

throwQueryException() : no errors
HQL: Select User.id, User.firstName, User.lastName, User.emailAddress   from test.User User
SQL: select user0_.IDENTIFIER as col_0_0_, user0_.FIRST_NAME as col_1_0_, user0_.LAST_NAME as col_2_0_, user0_.EMAIL_ADDRESS as col_3_0_ from test_user user0_
throwQueryException() : no errors
HQL param location recognition took 0 mills (Select User.id, User.firstName, User.lastName, User.emailAddress   from test.User User)
located HQL query plan in cache (Select User.id, User.firstName, User.lastName, User.emailAddress   from test.User User)
find: Select User.id, User.firstName, User.lastName, User.emailAddress   from test.User User
named parameters: {}
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select user0_.IDENTIFIER as col_0_0_, user0_.FIRST_NAME as col_1_0_, user0_.LAST_NAME as col_2_0_, user0_.EMAIL_ADDRESS as col_3_0_ from test_user user0_
preparing statement
about to open ResultSet (open ResultSets: 0, globally: 0)
processing result set
result set row: 0
result row: 
returning '1' as column: col_0_0_
returning 'Maria johns' as column: col_1_0_
returning 'Thakur' as column: col_2_0_
returning 'kalpana@kalpana.com' as column: col_3_0_
result set row: 1
result row: 
returning '2' as column: col_0_0_
returning 'kalpana' as column: col_1_0_
returning 'Thakur' as column: col_2_0_
returning 'kalpana@kalpana.com' as column: col_3_0_
result set row: 2
result row: 
returning '3' as column: col_0_0_
returning 'abhijit' as column: col_1_0_
returning 'naik' as column: col_2_0_
returning 'abhijit_naik@persistent.co.in' as column: col_3_0_
result set row: 3
result row: 
returning '4' as column: col_0_0_
returning 'sachin' as column: col_1_0_
returning 'Lale' as column: col_2_0_
returning 'sach@lale.co.in' as column: col_3_0_
done processing result set (4 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
initializing non-lazy collections
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5163164387971072
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
begin
current autocommit status: false
after transaction begin
Inside retrieve method
loading entity: [test.User#1]
creating new proxy for entity
initializing proxy: [test.User#1]
attempting to resolve: [test.User#1]
Cache lookup: test.User#1
key: test.User#1
test.UserCache: test.UserMemoryStore hit for test.User#1
Cache hit: test.User#1
assembling entity from second-level cache: [test.User#1]
creating collection wrapper:[test.User.orderCollection#1]
Cached Version: null
initializing non-lazy collections
initializing collection [test.User.orderCollection#1]
checking second-level cache
Cache lookup: test.User.orderCollection#1
key: test.User.orderCollection#1
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#1
Cache hit: test.User.orderCollection#1
loading entity: [test.Order#3]
attempting to resolve: [test.Order#3]
Cache lookup: test.Order#3
key: test.Order#3
test.OrderCache: test.OrderMemoryStore hit for test.Order#3
Cache hit: test.Order#3
assembling entity from second-level cache: [test.Order#3]
loading entity: [test.User#1]
entity proxy found in session cache
Cached Version: null
resolved object in second-level cache: [test.Order#3]
loading entity: [test.Order#4]
attempting to resolve: [test.Order#4]
Cache lookup: test.Order#4
key: test.Order#4
test.OrderCache: test.OrderMemoryStore hit for test.Order#4
Cache hit: test.Order#4
assembling entity from second-level cache: [test.Order#4]
loading entity: [test.User#1]
entity proxy found in session cache
Cached Version: null
resolved object in second-level cache: [test.Order#4]
collection initialized from cache
resolved object in second-level cache: [test.User#1]
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5163164387971073
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
begin
current autocommit status: false
after transaction begin
Inside retrieve method
Prepare select part of query.
Prepare from part of query
unable to locate HQL query plan in cache; generating (from test.User User WHERE  User.firstName in (  'JOHN', 'abhijit') AND User.lastName in (  'naik') OR User.id != 1 )
parse() - HQL: from test.User User WHERE  User.firstName in (  'JOHN', 'abhijit') AND User.lastName in (  'naik') OR User.id != 1 
--- HQL AST ---
 \-[QUERY] 'query'
    +-[SELECT_FROM] 'SELECT_FROM'
    |  \-[FROM] 'from'
    |     \-[RANGE] 'RANGE'
    |        +-[DOT] '.'
    |        |  +-[IDENT] 'test'
    |        |  \-[IDENT] 'User'
    |        \-[ALIAS] 'User'
    \-[WHERE] 'WHERE'
       \-[OR] 'OR'
          +-[AND] 'AND'
          |  +-[IN] 'in'
          |  |  +-[DOT] '.'
          |  |  |  +-[IDENT] 'User'
          |  |  |  \-[IDENT] 'firstName'
          |  |  \-[IN_LIST] 'inList'
          |  |     +-[QUOTED_STRING] ''JOHN''
          |  |     \-[QUOTED_STRING] ''abhijit''
          |  \-[IN] 'in'
          |     +-[DOT] '.'
          |     |  +-[IDENT] 'User'
          |     |  \-[IDENT] 'lastName'
          |     \-[IN_LIST] 'inList'
          |        \-[QUOTED_STRING] ''naik''
          \-[NE] '!='
             +-[DOT] '.'
             |  +-[IDENT] 'User'
             |  \-[IDENT] 'id'
             \-[NUM_INT] '1'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} :  test.User (User) -> user0_
Resolved :  User -> user0_.IDENTIFIER
getDataType() : firstName -> org.hibernate.type.StringType@c8769b
Resolved :  User.firstName -> user0_.FIRST_NAME
Resolved :  User -> user0_.IDENTIFIER
getDataType() : lastName -> org.hibernate.type.StringType@c8769b
Resolved :  User.lastName -> user0_.LAST_NAME
Resolved :  User -> user0_.IDENTIFIER
getDataType() : id -> org.hibernate.type.LongType@1584807
Resolved :  User.id -> user0_.IDENTIFIER
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( FromClause{level=1} test_user user0_ ) ( WHERE ( OR ( AND ( in ( user0_.FIRST_NAME user0_.IDENTIFIER firstName ) ( inList 'JOHN' 'abhijit' ) ) ( in ( user0_.LAST_NAME user0_.IDENTIFIER lastName ) ( inList 'naik' ) ) ) ( != ( user0_.IDENTIFIER user0_.IDENTIFIER id ) 1 ) ) ) )
Derived SELECT clause created.
Using FROM fragment [test_user user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (test_user)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.IDENTIFIER as IDENTIFIER0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[User], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'test_user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[OR] SqlNode: 'OR'
          +-[AND] SqlNode: 'AND'
          |  +-[IN] InLogicOperatorNode: 'in'
          |  |  +-[DOT] DotNode: 'user0_.FIRST_NAME' {propertyName=firstName,dereferenceType=4,propertyPath=firstName,path=User.firstName,tableAlias=user0_,className=test.User,classAlias=User}
          |  |  |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
          |  |  |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |  \-[IN_LIST] SqlNode: 'inList'
          |  |     +-[QUOTED_STRING] LiteralNode: ''JOHN''
          |  |     \-[QUOTED_STRING] LiteralNode: ''abhijit''
          |  \-[IN] InLogicOperatorNode: 'in'
          |     +-[DOT] DotNode: 'user0_.LAST_NAME' {propertyName=lastName,dereferenceType=4,propertyPath=lastName,path=User.lastName,tableAlias=user0_,className=test.User,classAlias=User}
          |     |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
          |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |     \-[IN_LIST] SqlNode: 'inList'
          |        \-[QUOTED_STRING] LiteralNode: ''naik''
          \-[NE] BinaryLogicOperatorNode: '!='
             +-[DOT] DotNode: 'user0_.IDENTIFIER' {propertyName=id,dereferenceType=4,propertyPath=id,path=User.id,tableAlias=user0_,className=test.User,classAlias=User}
             |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'id' {originalText=id}
             \-[NUM_INT] LiteralNode: '1'

throwQueryException() : no errors
HQL: from test.User User WHERE  User.firstName in (  'JOHN', 'abhijit') AND User.lastName in (  'naik') OR User.id != 1 
SQL: select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_ where (user0_.FIRST_NAME in ('JOHN' , 'abhijit')) and (user0_.LAST_NAME in ('naik')) or user0_.IDENTIFIER<>1
throwQueryException() : no errors
HQL param location recognition took 0 mills (from test.User User WHERE  User.firstName in (  'JOHN', 'abhijit') AND User.lastName in (  'naik') OR User.id != 1 )
located HQL query plan in cache (from test.User User WHERE  User.firstName in (  'JOHN', 'abhijit') AND User.lastName in (  'naik') OR User.id != 1 )
find: from test.User User WHERE  User.firstName in (  'JOHN', 'abhijit') AND User.lastName in (  'naik') OR User.id != 1 
named parameters: {}
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_ where (user0_.FIRST_NAME in ('JOHN' , 'abhijit')) and (user0_.LAST_NAME in ('naik')) or user0_.IDENTIFIER<>1
preparing statement
about to open ResultSet (open ResultSets: 0, globally: 0)
processing result set
result set row: 0
returning '2' as column: IDENTIFIER0_
result row: EntityKey[test.User#2]
Initializing object from ResultSet: [test.User#2]
Hydrating entity: [test.User#2]
returning 'kalpana@kalpana.com' as column: EMAIL2_0_
returning 'kalpana' as column: FIRST3_0_
returning 'Thakur' as column: LAST4_0_
returning 'Active' as column: ACTIVITY5_0_
result set row: 1
returning '3' as column: IDENTIFIER0_
result row: EntityKey[test.User#3]
Initializing object from ResultSet: [test.User#3]
Hydrating entity: [test.User#3]
returning 'abhijit_naik@persistent.co.in' as column: EMAIL2_0_
returning 'abhijit' as column: FIRST3_0_
returning 'naik' as column: LAST4_0_
returning null as column: ACTIVITY5_0_
result set row: 2
returning '4' as column: IDENTIFIER0_
result row: EntityKey[test.User#4]
Initializing object from ResultSet: [test.User#4]
Hydrating entity: [test.User#4]
returning 'sach@lale.co.in' as column: EMAIL2_0_
returning 'sachin' as column: FIRST3_0_
returning 'Lale' as column: LAST4_0_
returning null as column: ACTIVITY5_0_
done processing result set (3 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
total objects hydrated: 3
resolving associations for [test.User#2]
creating collection wrapper:[test.User.orderCollection#2]
adding entity to second-level cache: [test.User#2]
Caching: test.User#2
key: test.User#2
test.UserCache: test.UserMemoryStore hit for test.User#2
Item was already cached: test.User#2
done materializing entity [test.User#2]
resolving associations for [test.User#3]
creating collection wrapper:[test.User.orderCollection#3]
adding entity to second-level cache: [test.User#3]
Caching: test.User#3
key: test.User#3
test.UserCache: test.UserMemoryStore hit for test.User#3
Item was already cached: test.User#3
done materializing entity [test.User#3]
resolving associations for [test.User#4]
creating collection wrapper:[test.User.orderCollection#4]
adding entity to second-level cache: [test.User#4]
Caching: test.User#4
key: test.User#4
test.UserCache: test.UserMemoryStore hit for test.User#4
Item was already cached: test.User#4
done materializing entity [test.User#4]
initializing non-lazy collections
initializing collection [test.User.orderCollection#4]
checking second-level cache
Cache lookup: test.User.orderCollection#4
key: test.User.orderCollection#4
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#4
Cache hit: test.User.orderCollection#4
collection initialized from cache
initializing collection [test.User.orderCollection#3]
checking second-level cache
Cache lookup: test.User.orderCollection#3
key: test.User.orderCollection#3
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#3
Cache hit: test.User.orderCollection#3
collection initialized from cache
initializing collection [test.User.orderCollection#2]
checking second-level cache
Cache lookup: test.User.orderCollection#2
key: test.User.orderCollection#2
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#2
Cache hit: test.User.orderCollection#2
loading entity: [test.Order#5]
attempting to resolve: [test.Order#5]
Cache lookup: test.Order#5
key: test.Order#5
test.OrderCache: test.OrderMemoryStore hit for test.Order#5
Cache hit: test.Order#5
assembling entity from second-level cache: [test.Order#5]
loading entity: [test.User#2]
entity found in session cache
Cached Version: null
resolved object in second-level cache: [test.Order#5]
loading entity: [test.Order#6]
attempting to resolve: [test.Order#6]
Cache lookup: test.Order#6
key: test.Order#6
test.OrderCache: test.OrderMemoryStore hit for test.Order#6
Cache hit: test.Order#6
assembling entity from second-level cache: [test.Order#6]
loading entity: [test.User#2]
entity found in session cache
Cached Version: null
resolved object in second-level cache: [test.Order#6]
collection initialized from cache
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5163164388032512
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
begin
current autocommit status: false
after transaction begin
Inside retrieve method
Prepare select part of query.
Prepare from part of query
unable to locate HQL query plan in cache; generating (from test.User User WHERE  User.id is not null OR User.lastName is not null )
parse() - HQL: from test.User User WHERE  User.id is not null OR User.lastName is not null 
--- HQL AST ---
 \-[QUERY] 'query'
    +-[SELECT_FROM] 'SELECT_FROM'
    |  \-[FROM] 'from'
    |     \-[RANGE] 'RANGE'
    |        +-[DOT] '.'
    |        |  +-[IDENT] 'test'
    |        |  \-[IDENT] 'User'
    |        \-[ALIAS] 'User'
    \-[WHERE] 'WHERE'
       \-[OR] 'OR'
          +-[IS_NOT_NULL] 'is not null'
          |  \-[DOT] '.'
          |     +-[IDENT] 'User'
          |     \-[IDENT] 'id'
          \-[IS_NOT_NULL] 'is not null'
             \-[DOT] '.'
                +-[IDENT] 'User'
                \-[IDENT] 'lastName'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} :  test.User (User) -> user0_
Resolved :  User -> user0_.IDENTIFIER
getDataType() : id -> org.hibernate.type.LongType@1584807
Resolved :  User.id -> user0_.IDENTIFIER
Resolved :  User -> user0_.IDENTIFIER
getDataType() : lastName -> org.hibernate.type.StringType@c8769b
Resolved :  User.lastName -> user0_.LAST_NAME
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( FromClause{level=1} test_user user0_ ) ( WHERE ( OR ( is not null ( user0_.IDENTIFIER user0_.IDENTIFIER id ) ) ( is not null ( user0_.LAST_NAME user0_.IDENTIFIER lastName ) ) ) ) )
Derived SELECT clause created.
Using FROM fragment [test_user user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (test_user)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.IDENTIFIER as IDENTIFIER0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[User], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'test_user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[OR] SqlNode: 'OR'
          +-[IS_NOT_NULL] UnaryLogicOperatorNode: 'is not null'
          |  \-[DOT] DotNode: 'user0_.IDENTIFIER' {propertyName=id,dereferenceType=4,propertyPath=id,path=User.id,tableAlias=user0_,className=test.User,classAlias=User}
          |     +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
          |     \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[IS_NOT_NULL] UnaryLogicOperatorNode: 'is not null'
             \-[DOT] DotNode: 'user0_.LAST_NAME' {propertyName=lastName,dereferenceType=4,propertyPath=lastName,path=User.lastName,tableAlias=user0_,className=test.User,classAlias=User}
                +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
                \-[IDENT] IdentNode: 'lastName' {originalText=lastName}

throwQueryException() : no errors
HQL: from test.User User WHERE  User.id is not null OR User.lastName is not null 
SQL: select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_ where user0_.IDENTIFIER is not null or user0_.LAST_NAME is not null
throwQueryException() : no errors
HQL param location recognition took 0 mills (from test.User User WHERE  User.id is not null OR User.lastName is not null )
located HQL query plan in cache (from test.User User WHERE  User.id is not null OR User.lastName is not null )
find: from test.User User WHERE  User.id is not null OR User.lastName is not null 
named parameters: {}
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_ where user0_.IDENTIFIER is not null or user0_.LAST_NAME is not null
preparing statement
about to open ResultSet (open ResultSets: 0, globally: 0)
processing result set
result set row: 0
returning '1' as column: IDENTIFIER0_
result row: EntityKey[test.User#1]
Initializing object from ResultSet: [test.User#1]
Hydrating entity: [test.User#1]
returning 'kalpana@kalpana.com' as column: EMAIL2_0_
returning 'Maria johns' as column: FIRST3_0_
returning 'Thakur' as column: LAST4_0_
returning 'Active' as column: ACTIVITY5_0_
result set row: 1
returning '2' as column: IDENTIFIER0_
result row: EntityKey[test.User#2]
Initializing object from ResultSet: [test.User#2]
Hydrating entity: [test.User#2]
returning 'kalpana@kalpana.com' as column: EMAIL2_0_
returning 'kalpana' as column: FIRST3_0_
returning 'Thakur' as column: LAST4_0_
returning 'Active' as column: ACTIVITY5_0_
result set row: 2
returning '3' as column: IDENTIFIER0_
result row: EntityKey[test.User#3]
Initializing object from ResultSet: [test.User#3]
Hydrating entity: [test.User#3]
returning 'abhijit_naik@persistent.co.in' as column: EMAIL2_0_
returning 'abhijit' as column: FIRST3_0_
returning 'naik' as column: LAST4_0_
returning null as column: ACTIVITY5_0_
result set row: 3
returning '4' as column: IDENTIFIER0_
result row: EntityKey[test.User#4]
Initializing object from ResultSet: [test.User#4]
Hydrating entity: [test.User#4]
returning 'sach@lale.co.in' as column: EMAIL2_0_
returning 'sachin' as column: FIRST3_0_
returning 'Lale' as column: LAST4_0_
returning null as column: ACTIVITY5_0_
done processing result set (4 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
total objects hydrated: 4
resolving associations for [test.User#1]
creating collection wrapper:[test.User.orderCollection#1]
adding entity to second-level cache: [test.User#1]
Caching: test.User#1
key: test.User#1
test.UserCache: test.UserMemoryStore hit for test.User#1
Item was already cached: test.User#1
done materializing entity [test.User#1]
resolving associations for [test.User#2]
creating collection wrapper:[test.User.orderCollection#2]
adding entity to second-level cache: [test.User#2]
Caching: test.User#2
key: test.User#2
test.UserCache: test.UserMemoryStore hit for test.User#2
Item was already cached: test.User#2
done materializing entity [test.User#2]
resolving associations for [test.User#3]
creating collection wrapper:[test.User.orderCollection#3]
adding entity to second-level cache: [test.User#3]
Caching: test.User#3
key: test.User#3
test.UserCache: test.UserMemoryStore hit for test.User#3
Item was already cached: test.User#3
done materializing entity [test.User#3]
resolving associations for [test.User#4]
creating collection wrapper:[test.User.orderCollection#4]
adding entity to second-level cache: [test.User#4]
Caching: test.User#4
key: test.User#4
test.UserCache: test.UserMemoryStore hit for test.User#4
Item was already cached: test.User#4
done materializing entity [test.User#4]
initializing non-lazy collections
initializing collection [test.User.orderCollection#4]
checking second-level cache
Cache lookup: test.User.orderCollection#4
key: test.User.orderCollection#4
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#4
Cache hit: test.User.orderCollection#4
collection initialized from cache
initializing collection [test.User.orderCollection#3]
checking second-level cache
Cache lookup: test.User.orderCollection#3
key: test.User.orderCollection#3
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#3
Cache hit: test.User.orderCollection#3
collection initialized from cache
initializing collection [test.User.orderCollection#2]
checking second-level cache
Cache lookup: test.User.orderCollection#2
key: test.User.orderCollection#2
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#2
Cache hit: test.User.orderCollection#2
loading entity: [test.Order#5]
attempting to resolve: [test.Order#5]
Cache lookup: test.Order#5
key: test.Order#5
test.OrderCache: test.OrderMemoryStore hit for test.Order#5
Cache hit: test.Order#5
assembling entity from second-level cache: [test.Order#5]
loading entity: [test.User#2]
entity found in session cache
Cached Version: null
resolved object in second-level cache: [test.Order#5]
loading entity: [test.Order#6]
attempting to resolve: [test.Order#6]
Cache lookup: test.Order#6
key: test.Order#6
test.OrderCache: test.OrderMemoryStore hit for test.Order#6
Cache hit: test.Order#6
assembling entity from second-level cache: [test.Order#6]
loading entity: [test.User#2]
entity found in session cache
Cached Version: null
resolved object in second-level cache: [test.Order#6]
collection initialized from cache
initializing collection [test.User.orderCollection#1]
checking second-level cache
Cache lookup: test.User.orderCollection#1
key: test.User.orderCollection#1
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#1
Cache hit: test.User.orderCollection#1
loading entity: [test.Order#3]
attempting to resolve: [test.Order#3]
Cache lookup: test.Order#3
key: test.Order#3
test.OrderCache: test.OrderMemoryStore hit for test.Order#3
Cache hit: test.Order#3
assembling entity from second-level cache: [test.Order#3]
loading entity: [test.User#1]
entity found in session cache
Cached Version: null
resolved object in second-level cache: [test.Order#3]
loading entity: [test.Order#4]
attempting to resolve: [test.Order#4]
Cache lookup: test.Order#4
key: test.Order#4
test.OrderCache: test.OrderMemoryStore hit for test.Order#4
Cache hit: test.Order#4
assembling entity from second-level cache: [test.Order#4]
loading entity: [test.User#1]
entity found in session cache
Cached Version: null
resolved object in second-level cache: [test.Order#4]
collection initialized from cache
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5163164388098048
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
begin
current autocommit status: false
after transaction begin
Inside retrieve method
Prepare select part of query.
Prepare from part of query
unable to locate HQL query plan in cache; generating (from test.User User WHERE  User.lastName is null )
parse() - HQL: from test.User User WHERE  User.lastName is null 
--- HQL AST ---
 \-[QUERY] 'query'
    +-[SELECT_FROM] 'SELECT_FROM'
    |  \-[FROM] 'from'
    |     \-[RANGE] 'RANGE'
    |        +-[DOT] '.'
    |        |  +-[IDENT] 'test'
    |        |  \-[IDENT] 'User'
    |        \-[ALIAS] 'User'
    \-[WHERE] 'WHERE'
       \-[IS_NULL] 'is null'
          \-[DOT] '.'
             +-[IDENT] 'User'
             \-[IDENT] 'lastName'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} :  test.User (User) -> user0_
Resolved :  User -> user0_.IDENTIFIER
getDataType() : lastName -> org.hibernate.type.StringType@c8769b
Resolved :  User.lastName -> user0_.LAST_NAME
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( FromClause{level=1} test_user user0_ ) ( WHERE ( is null ( user0_.LAST_NAME user0_.IDENTIFIER lastName ) ) ) )
Derived SELECT clause created.
Using FROM fragment [test_user user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (test_user)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.IDENTIFIER as IDENTIFIER0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[User], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'test_user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[IS_NULL] UnaryLogicOperatorNode: 'is null'
          \-[DOT] DotNode: 'user0_.LAST_NAME' {propertyName=lastName,dereferenceType=4,propertyPath=lastName,path=User.lastName,tableAlias=user0_,className=test.User,classAlias=User}
             +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
             \-[IDENT] IdentNode: 'lastName' {originalText=lastName}

throwQueryException() : no errors
HQL: from test.User User WHERE  User.lastName is null 
SQL: select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_ where user0_.LAST_NAME is null
throwQueryException() : no errors
HQL param location recognition took 0 mills (from test.User User WHERE  User.lastName is null )
located HQL query plan in cache (from test.User User WHERE  User.lastName is null )
find: from test.User User WHERE  User.lastName is null 
named parameters: {}
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_ where user0_.LAST_NAME is null
preparing statement
about to open ResultSet (open ResultSets: 0, globally: 0)
processing result set
done processing result set (0 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
total objects hydrated: 0
initializing non-lazy collections
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5163164388483072
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
begin
current autocommit status: false
after transaction begin
Execute query
unable to locate HQL query plan in cache; generating (select count(*) from test.User)
parse() - HQL: select count(*) from test.User
--- HQL AST ---
 \-[QUERY] 'query'
    \-[SELECT_FROM] 'SELECT_FROM'
       +-[FROM] 'from'
       |  \-[RANGE] 'RANGE'
       |     \-[DOT] '.'
       |        +-[IDENT] 'test'
       |        \-[IDENT] 'User'
       \-[SELECT] 'select'
          \-[COUNT] 'count'
             \-[ROW_STAR] '*'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} :  test.User (no alias) -> user0_
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( count * ) ) ( FromClause{level=1} test_user user0_ ) )
Using FROM fragment [test_user user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (test_user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ROW_STAR] SqlNode: '*'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'test_user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}

throwQueryException() : no errors
HQL: select count(*) from test.User
SQL: select count(*) as col_0_0_ from test_user user0_
throwQueryException() : no errors
HQL param location recognition took 0 mills (select count(*) from test.User)
located HQL query plan in cache (select count(*) from test.User)
find: select count(*) from test.User
named parameters: {}
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select count(*) as col_0_0_ from test_user user0_
preparing statement
about to open ResultSet (open ResultSets: 0, globally: 0)
processing result set
result set row: 0
result row: 
returning '4' as column: col_0_0_
done processing result set (1 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
initializing non-lazy collections
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5163164388544512
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
begin
current autocommit status: false
after transaction begin
Retrieve attributes
Inside retrieve method
Prepare select part of query.
Prepare from part of query
unable to locate HQL query plan in cache; generating (Select User.emailAddress   from test.User User WHERE  User.id = 1 )
parse() - HQL: Select User.emailAddress   from test.User User WHERE  User.id = 1 
--- HQL AST ---
 \-[QUERY] 'query'
    +-[SELECT_FROM] 'SELECT_FROM'
    |  +-[FROM] 'from'
    |  |  \-[RANGE] 'RANGE'
    |  |     +-[DOT] '.'
    |  |     |  +-[IDENT] 'test'
    |  |     |  \-[IDENT] 'User'
    |  |     \-[ALIAS] 'User'
    |  \-[SELECT] 'Select'
    |     \-[DOT] '.'
    |        +-[IDENT] 'User'
    |        \-[IDENT] 'emailAddress'
    \-[WHERE] 'WHERE'
       \-[EQ] '='
          +-[DOT] '.'
          |  +-[IDENT] 'User'
          |  \-[IDENT] 'id'
          \-[NUM_INT] '1'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} :  test.User (User) -> user0_
Resolved :  User -> user0_.IDENTIFIER
getDataType() : emailAddress -> org.hibernate.type.StringType@c8769b
Resolved :  User.emailAddress -> user0_.EMAIL_ADDRESS
Resolved :  User -> user0_.IDENTIFIER
getDataType() : id -> org.hibernate.type.LongType@1584807
Resolved :  User.id -> user0_.IDENTIFIER
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( user0_.EMAIL_ADDRESS user0_.IDENTIFIER emailAddress ) ) ( FromClause{level=1} test_user user0_ ) ( WHERE ( = ( user0_.IDENTIFIER user0_.IDENTIFIER id ) 1 ) ) )
Using FROM fragment [test_user user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (test_user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'user0_.EMAIL_ADDRESS' {propertyName=emailAddress,dereferenceType=4,propertyPath=emailAddress,path=User.emailAddress,tableAlias=user0_,className=test.User,classAlias=User}
    |  |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
    |  |  \-[IDENT] IdentNode: 'emailAddress' {originalText=emailAddress}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[User], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'test_user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.IDENTIFIER' {propertyName=id,dereferenceType=4,propertyPath=id,path=User.id,tableAlias=user0_,className=test.User,classAlias=User}
          |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_INT] LiteralNode: '1'

throwQueryException() : no errors
HQL: Select User.emailAddress   from test.User User WHERE  User.id = 1 
SQL: select user0_.EMAIL_ADDRESS as col_0_0_ from test_user user0_ where user0_.IDENTIFIER=1
throwQueryException() : no errors
HQL param location recognition took 0 mills (Select User.emailAddress   from test.User User WHERE  User.id = 1 )
located HQL query plan in cache (Select User.emailAddress   from test.User User WHERE  User.id = 1 )
find: Select User.emailAddress   from test.User User WHERE  User.id = 1 
named parameters: {}
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select user0_.EMAIL_ADDRESS as col_0_0_ from test_user user0_ where user0_.IDENTIFIER=1
preparing statement
about to open ResultSet (open ResultSets: 0, globally: 0)
processing result set
result set row: 0
result row: 
returning 'kalpana@kalpana.com' as column: col_0_0_
done processing result set (1 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
initializing non-lazy collections
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5163164388610048
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
begin
current autocommit status: false
after transaction begin
Inside retrieve method
Prepare select part of query.
Prepare from part of query
unable to locate HQL query plan in cache; generating (from test.User User WHERE  User.id in (  1, 2) OR User.firstName is not null OR User.firstName = 'Washu' OR User.id < 100 OR User.id < 100 OR User.id > 100 OR User.id > 1 )
parse() - HQL: from test.User User WHERE  User.id in (  1, 2) OR User.firstName is not null OR User.firstName = 'Washu' OR User.id < 100 OR User.id < 100 OR User.id > 100 OR User.id > 1 
--- HQL AST ---
 \-[QUERY] 'query'
    +-[SELECT_FROM] 'SELECT_FROM'
    |  \-[FROM] 'from'
    |     \-[RANGE] 'RANGE'
    |        +-[DOT] '.'
    |        |  +-[IDENT] 'test'
    |        |  \-[IDENT] 'User'
    |        \-[ALIAS] 'User'
    \-[WHERE] 'WHERE'
       \-[OR] 'OR'
          +-[OR] 'OR'
          |  +-[OR] 'OR'
          |  |  +-[OR] 'OR'
          |  |  |  +-[OR] 'OR'
          |  |  |  |  +-[OR] 'OR'
          |  |  |  |  |  +-[IN] 'in'
          |  |  |  |  |  |  +-[DOT] '.'
          |  |  |  |  |  |  |  +-[IDENT] 'User'
          |  |  |  |  |  |  |  \-[IDENT] 'id'
          |  |  |  |  |  |  \-[IN_LIST] 'inList'
          |  |  |  |  |  |     +-[NUM_INT] '1'
          |  |  |  |  |  |     \-[NUM_INT] '2'
          |  |  |  |  |  \-[IS_NOT_NULL] 'is not null'
          |  |  |  |  |     \-[DOT] '.'
          |  |  |  |  |        +-[IDENT] 'User'
          |  |  |  |  |        \-[IDENT] 'firstName'
          |  |  |  |  \-[EQ] '='
          |  |  |  |     +-[DOT] '.'
          |  |  |  |     |  +-[IDENT] 'User'
          |  |  |  |     |  \-[IDENT] 'firstName'
          |  |  |  |     \-[QUOTED_STRING] ''Washu''
          |  |  |  \-[LT] '<'
          |  |  |     +-[DOT] '.'
          |  |  |     |  +-[IDENT] 'User'
          |  |  |     |  \-[IDENT] 'id'
          |  |  |     \-[NUM_INT] '100'
          |  |  \-[LT] '<'
          |  |     +-[DOT] '.'
          |  |     |  +-[IDENT] 'User'
          |  |     |  \-[IDENT] 'id'
          |  |     \-[NUM_INT] '100'
          |  \-[GT] '>'
          |     +-[DOT] '.'
          |     |  +-[IDENT] 'User'
          |     |  \-[IDENT] 'id'
          |     \-[NUM_INT] '100'
          \-[GT] '>'
             +-[DOT] '.'
             |  +-[IDENT] 'User'
             |  \-[IDENT] 'id'
             \-[NUM_INT] '1'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} :  test.User (User) -> user0_
Resolved :  User -> user0_.IDENTIFIER
getDataType() : id -> org.hibernate.type.LongType@1584807
Resolved :  User.id -> user0_.IDENTIFIER
Resolved :  User -> user0_.IDENTIFIER
getDataType() : firstName -> org.hibernate.type.StringType@c8769b
Resolved :  User.firstName -> user0_.FIRST_NAME
Resolved :  User -> user0_.IDENTIFIER
getDataType() : firstName -> org.hibernate.type.StringType@c8769b
Resolved :  User.firstName -> user0_.FIRST_NAME
Resolved :  User -> user0_.IDENTIFIER
getDataType() : id -> org.hibernate.type.LongType@1584807
Resolved :  User.id -> user0_.IDENTIFIER
Resolved :  User -> user0_.IDENTIFIER
getDataType() : id -> org.hibernate.type.LongType@1584807
Resolved :  User.id -> user0_.IDENTIFIER
Resolved :  User -> user0_.IDENTIFIER
getDataType() : id -> org.hibernate.type.LongType@1584807
Resolved :  User.id -> user0_.IDENTIFIER
Resolved :  User -> user0_.IDENTIFIER
getDataType() : id -> org.hibernate.type.LongType@1584807
Resolved :  User.id -> user0_.IDENTIFIER
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( FromClause{level=1} test_user user0_ ) ( WHERE ( OR ( OR ( OR ( OR ( OR ( OR ( in ( user0_.IDENTIFIER user0_.IDENTIFIER id ) ( inList 1 2 ) ) ( is not null ( user0_.FIRST_NAME user0_.IDENTIFIER firstName ) ) ) ( = ( user0_.FIRST_NAME user0_.IDENTIFIER firstName ) 'Washu' ) ) ( < ( user0_.IDENTIFIER user0_.IDENTIFIER id ) 100 ) ) ( < ( user0_.IDENTIFIER user0_.IDENTIFIER id ) 100 ) ) ( > ( user0_.IDENTIFIER user0_.IDENTIFIER id ) 100 ) ) ( > ( user0_.IDENTIFIER user0_.IDENTIFIER id ) 1 ) ) ) )
Derived SELECT clause created.
Using FROM fragment [test_user user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (test_user)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.IDENTIFIER as IDENTIFIER0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[User], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'test_user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=User,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[OR] SqlNode: 'OR'
          +-[OR] SqlNode: 'OR'
          |  +-[OR] SqlNode: 'OR'
          |  |  +-[OR] SqlNode: 'OR'
          |  |  |  +-[OR] SqlNode: 'OR'
          |  |  |  |  +-[OR] SqlNode: 'OR'
          |  |  |  |  |  +-[IN] InLogicOperatorNode: 'in'
          |  |  |  |  |  |  +-[DOT] DotNode: 'user0_.IDENTIFIER' {propertyName=id,dereferenceType=4,propertyPath=id,path=User.id,tableAlias=user0_,className=test.User,classAlias=User}
          |  |  |  |  |  |  |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
          |  |  |  |  |  |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
          |  |  |  |  |  |  \-[IN_LIST] SqlNode: 'inList'
          |  |  |  |  |  |     +-[NUM_INT] LiteralNode: '1'
          |  |  |  |  |  |     \-[NUM_INT] LiteralNode: '2'
          |  |  |  |  |  \-[IS_NOT_NULL] UnaryLogicOperatorNode: 'is not null'
          |  |  |  |  |     \-[DOT] DotNode: 'user0_.FIRST_NAME' {propertyName=firstName,dereferenceType=4,propertyPath=firstName,path=User.firstName,tableAlias=user0_,className=test.User,classAlias=User}
          |  |  |  |  |        +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
          |  |  |  |  |        \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |  |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  |     +-[DOT] DotNode: 'user0_.FIRST_NAME' {propertyName=firstName,dereferenceType=4,propertyPath=firstName,path=User.firstName,tableAlias=user0_,className=test.User,classAlias=User}
          |  |  |  |     |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
          |  |  |  |     |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          |  |  |  |     \-[QUOTED_STRING] LiteralNode: ''Washu''
          |  |  |  \-[LT] BinaryLogicOperatorNode: '<'
          |  |  |     +-[DOT] DotNode: 'user0_.IDENTIFIER' {propertyName=id,dereferenceType=4,propertyPath=id,path=User.id,tableAlias=user0_,className=test.User,classAlias=User}
          |  |  |     |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
          |  |  |     |  \-[IDENT] IdentNode: 'id' {originalText=id}
          |  |  |     \-[NUM_INT] LiteralNode: '100'
          |  |  \-[LT] BinaryLogicOperatorNode: '<'
          |  |     +-[DOT] DotNode: 'user0_.IDENTIFIER' {propertyName=id,dereferenceType=4,propertyPath=id,path=User.id,tableAlias=user0_,className=test.User,classAlias=User}
          |  |     |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
          |  |     |  \-[IDENT] IdentNode: 'id' {originalText=id}
          |  |     \-[NUM_INT] LiteralNode: '100'
          |  \-[GT] BinaryLogicOperatorNode: '>'
          |     +-[DOT] DotNode: 'user0_.IDENTIFIER' {propertyName=id,dereferenceType=4,propertyPath=id,path=User.id,tableAlias=user0_,className=test.User,classAlias=User}
          |     |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
          |     |  \-[IDENT] IdentNode: 'id' {originalText=id}
          |     \-[NUM_INT] LiteralNode: '100'
          \-[GT] BinaryLogicOperatorNode: '>'
             +-[DOT] DotNode: 'user0_.IDENTIFIER' {propertyName=id,dereferenceType=4,propertyPath=id,path=User.id,tableAlias=user0_,className=test.User,classAlias=User}
             |  +-[ALIAS_REF] IdentNode: 'user0_.IDENTIFIER' {alias=User, className=test.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'id' {originalText=id}
             \-[NUM_INT] LiteralNode: '1'

throwQueryException() : no errors
HQL: from test.User User WHERE  User.id in (  1, 2) OR User.firstName is not null OR User.firstName = 'Washu' OR User.id < 100 OR User.id < 100 OR User.id > 100 OR User.id > 1 
SQL: select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_ where user0_.IDENTIFIER in (1 , 2) or user0_.FIRST_NAME is not null or user0_.FIRST_NAME='Washu' or user0_.IDENTIFIER<100 or user0_.IDENTIFIER<100 or user0_.IDENTIFIER>100 or user0_.IDENTIFIER>1
throwQueryException() : no errors
HQL param location recognition took 0 mills (from test.User User WHERE  User.id in (  1, 2) OR User.firstName is not null OR User.firstName = 'Washu' OR User.id < 100 OR User.id < 100 OR User.id > 100 OR User.id > 1 )
located HQL query plan in cache (from test.User User WHERE  User.id in (  1, 2) OR User.firstName is not null OR User.firstName = 'Washu' OR User.id < 100 OR User.id < 100 OR User.id > 100 OR User.id > 1 )
find: from test.User User WHERE  User.id in (  1, 2) OR User.firstName is not null OR User.firstName = 'Washu' OR User.id < 100 OR User.id < 100 OR User.id > 100 OR User.id > 1 
named parameters: {}
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select user0_.IDENTIFIER as IDENTIFIER0_, user0_.EMAIL_ADDRESS as EMAIL2_0_, user0_.FIRST_NAME as FIRST3_0_, user0_.LAST_NAME as LAST4_0_, user0_.ACTIVITY_STATUS as ACTIVITY5_0_ from test_user user0_ where user0_.IDENTIFIER in (1 , 2) or user0_.FIRST_NAME is not null or user0_.FIRST_NAME='Washu' or user0_.IDENTIFIER<100 or user0_.IDENTIFIER<100 or user0_.IDENTIFIER>100 or user0_.IDENTIFIER>1
preparing statement
about to open ResultSet (open ResultSets: 0, globally: 0)
processing result set
result set row: 0
returning '1' as column: IDENTIFIER0_
result row: EntityKey[test.User#1]
Initializing object from ResultSet: [test.User#1]
Hydrating entity: [test.User#1]
returning 'kalpana@kalpana.com' as column: EMAIL2_0_
returning 'Maria johns' as column: FIRST3_0_
returning 'Thakur' as column: LAST4_0_
returning 'Active' as column: ACTIVITY5_0_
result set row: 1
returning '2' as column: IDENTIFIER0_
result row: EntityKey[test.User#2]
Initializing object from ResultSet: [test.User#2]
Hydrating entity: [test.User#2]
returning 'kalpana@kalpana.com' as column: EMAIL2_0_
returning 'kalpana' as column: FIRST3_0_
returning 'Thakur' as column: LAST4_0_
returning 'Active' as column: ACTIVITY5_0_
result set row: 2
returning '3' as column: IDENTIFIER0_
result row: EntityKey[test.User#3]
Initializing object from ResultSet: [test.User#3]
Hydrating entity: [test.User#3]
returning 'abhijit_naik@persistent.co.in' as column: EMAIL2_0_
returning 'abhijit' as column: FIRST3_0_
returning 'naik' as column: LAST4_0_
returning null as column: ACTIVITY5_0_
result set row: 3
returning '4' as column: IDENTIFIER0_
result row: EntityKey[test.User#4]
Initializing object from ResultSet: [test.User#4]
Hydrating entity: [test.User#4]
returning 'sach@lale.co.in' as column: EMAIL2_0_
returning 'sachin' as column: FIRST3_0_
returning 'Lale' as column: LAST4_0_
returning null as column: ACTIVITY5_0_
done processing result set (4 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
total objects hydrated: 4
resolving associations for [test.User#1]
creating collection wrapper:[test.User.orderCollection#1]
adding entity to second-level cache: [test.User#1]
Caching: test.User#1
key: test.User#1
test.UserCache: test.UserMemoryStore hit for test.User#1
Item was already cached: test.User#1
done materializing entity [test.User#1]
resolving associations for [test.User#2]
creating collection wrapper:[test.User.orderCollection#2]
adding entity to second-level cache: [test.User#2]
Caching: test.User#2
key: test.User#2
test.UserCache: test.UserMemoryStore hit for test.User#2
Item was already cached: test.User#2
done materializing entity [test.User#2]
resolving associations for [test.User#3]
creating collection wrapper:[test.User.orderCollection#3]
adding entity to second-level cache: [test.User#3]
Caching: test.User#3
key: test.User#3
test.UserCache: test.UserMemoryStore hit for test.User#3
Item was already cached: test.User#3
done materializing entity [test.User#3]
resolving associations for [test.User#4]
creating collection wrapper:[test.User.orderCollection#4]
adding entity to second-level cache: [test.User#4]
Caching: test.User#4
key: test.User#4
test.UserCache: test.UserMemoryStore hit for test.User#4
Item was already cached: test.User#4
done materializing entity [test.User#4]
initializing non-lazy collections
initializing collection [test.User.orderCollection#4]
checking second-level cache
Cache lookup: test.User.orderCollection#4
key: test.User.orderCollection#4
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#4
Cache hit: test.User.orderCollection#4
collection initialized from cache
initializing collection [test.User.orderCollection#3]
checking second-level cache
Cache lookup: test.User.orderCollection#3
key: test.User.orderCollection#3
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#3
Cache hit: test.User.orderCollection#3
collection initialized from cache
initializing collection [test.User.orderCollection#2]
checking second-level cache
Cache lookup: test.User.orderCollection#2
key: test.User.orderCollection#2
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#2
Cache hit: test.User.orderCollection#2
loading entity: [test.Order#5]
attempting to resolve: [test.Order#5]
Cache lookup: test.Order#5
key: test.Order#5
test.OrderCache: test.OrderMemoryStore hit for test.Order#5
Cache hit: test.Order#5
assembling entity from second-level cache: [test.Order#5]
loading entity: [test.User#2]
entity found in session cache
Cached Version: null
resolved object in second-level cache: [test.Order#5]
loading entity: [test.Order#6]
attempting to resolve: [test.Order#6]
Cache lookup: test.Order#6
key: test.Order#6
test.OrderCache: test.OrderMemoryStore hit for test.Order#6
Cache hit: test.Order#6
assembling entity from second-level cache: [test.Order#6]
loading entity: [test.User#2]
entity found in session cache
Cached Version: null
resolved object in second-level cache: [test.Order#6]
collection initialized from cache
initializing collection [test.User.orderCollection#1]
checking second-level cache
Cache lookup: test.User.orderCollection#1
key: test.User.orderCollection#1
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#1
Cache hit: test.User.orderCollection#1
loading entity: [test.Order#3]
attempting to resolve: [test.Order#3]
Cache lookup: test.Order#3
key: test.Order#3
test.OrderCache: test.OrderMemoryStore hit for test.Order#3
Cache hit: test.Order#3
assembling entity from second-level cache: [test.Order#3]
loading entity: [test.User#1]
entity found in session cache
Cached Version: null
resolved object in second-level cache: [test.Order#3]
loading entity: [test.Order#4]
attempting to resolve: [test.Order#4]
Cache lookup: test.Order#4
key: test.Order#4
test.OrderCache: test.OrderMemoryStore hit for test.Order#4
Cache hit: test.Order#4
assembling entity from second-level cache: [test.Order#4]
loading entity: [test.User#1]
entity found in session cache
Cached Version: null
resolved object in second-level cache: [test.Order#4]
collection initialized from cache
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5163164388671488
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
begin
current autocommit status: false
after transaction begin
Inside retrieve method
loading entity: [test.User#1]
creating new proxy for entity
initializing proxy: [test.User#1]
attempting to resolve: [test.User#1]
Cache lookup: test.User#1
key: test.User#1
test.UserCache: test.UserMemoryStore hit for test.User#1
Cache hit: test.User#1
assembling entity from second-level cache: [test.User#1]
creating collection wrapper:[test.User.orderCollection#1]
Cached Version: null
initializing non-lazy collections
initializing collection [test.User.orderCollection#1]
checking second-level cache
Cache lookup: test.User.orderCollection#1
key: test.User.orderCollection#1
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#1
Cache hit: test.User.orderCollection#1
loading entity: [test.Order#3]
attempting to resolve: [test.Order#3]
Cache lookup: test.Order#3
key: test.Order#3
test.OrderCache: test.OrderMemoryStore hit for test.Order#3
Cache hit: test.Order#3
assembling entity from second-level cache: [test.Order#3]
loading entity: [test.User#1]
entity proxy found in session cache
Cached Version: null
resolved object in second-level cache: [test.Order#3]
loading entity: [test.Order#4]
attempting to resolve: [test.Order#4]
Cache lookup: test.Order#4
key: test.Order#4
test.OrderCache: test.OrderMemoryStore hit for test.Order#4
Cache hit: test.Order#4
assembling entity from second-level cache: [test.Order#4]
loading entity: [test.User#1]
entity proxy found in session cache
Cached Version: null
resolved object in second-level cache: [test.Order#4]
collection initialized from cache
resolved object in second-level cache: [test.User#1]
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5163164388671489
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
begin
current autocommit status: false
after transaction begin
Insert Object
saving transient instance
saving [test.Address#<null>]
executing insertions
Inserting entity: test.Address (native id)
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
insert into test_address (STREET) values (?)
preparing statement
Dehydrating entity: [test.Address#<null>]
binding 'Street unknown' to parameter: 1
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
could not insert: [test.Address] [insert into test_address (STREET) values (?)]
com.mysql.jdbc.exceptions.MySQLIntegrityConstraintViolationException: Duplicate entry 'Street unknown' for key 2
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:931)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:2985)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1631)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1723)
	at com.mysql.jdbc.Connection.execSQL(Connection.java:3283)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1332)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1604)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1519)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1504)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:1968)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2405)
	at org.hibernate.action.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:37)
	at org.hibernate.engine.ActionQueue.execute(ActionQueue.java:248)
	at org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:269)
	at org.hibernate.event.def.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)
	at org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:101)
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:186)
	at org.hibernate.event.def.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:33)
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:175)
	at org.hibernate.event.def.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:27)
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:70)
	at org.hibernate.impl.SessionImpl.fireSave(SessionImpl.java:530)
	at org.hibernate.impl.SessionImpl.save(SessionImpl.java:518)
	at org.hibernate.impl.SessionImpl.save(SessionImpl.java:514)
	at edu.wustl.dao.HibernateDAOImpl.insert(HibernateDAOImpl.java:123)
	at edu.wustl.dao.test.HibernateTestCaseForCatissue.testConstraintViolation(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at junit.framework.TestCase.runTest(TestCase.java:168)
	at junit.framework.TestCase.runBare(TestCase.java:134)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
SQL Error: 1062, SQLState: 23000
Duplicate entry 'Street unknown' for key 2
could not insert: [test.Address]
org.hibernate.exception.ConstraintViolationException: could not insert: [test.Address]
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:71)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:1986)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2405)
	at org.hibernate.action.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:37)
	at org.hibernate.engine.ActionQueue.execute(ActionQueue.java:248)
	at org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:269)
	at org.hibernate.event.def.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)
	at org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:101)
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:186)
	at org.hibernate.event.def.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:33)
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:175)
	at org.hibernate.event.def.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:27)
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:70)
	at org.hibernate.impl.SessionImpl.fireSave(SessionImpl.java:530)
	at org.hibernate.impl.SessionImpl.save(SessionImpl.java:518)
	at org.hibernate.impl.SessionImpl.save(SessionImpl.java:514)
	at edu.wustl.dao.HibernateDAOImpl.insert(HibernateDAOImpl.java:123)
	at edu.wustl.dao.test.HibernateTestCaseForCatissue.testConstraintViolation(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at junit.framework.TestCase.runTest(TestCase.java:168)
	at junit.framework.TestCase.runBare(TestCase.java:134)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Caused by: com.mysql.jdbc.exceptions.MySQLIntegrityConstraintViolationException: Duplicate entry 'Street unknown' for key 2
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:931)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:2985)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1631)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1723)
	at com.mysql.jdbc.Connection.execSQL(Connection.java:3283)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1332)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1604)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1519)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1504)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:1968)
	... 33 more
could not insert: [test.Address]
org.hibernate.exception.ConstraintViolationException: could not insert: [test.Address]
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:71)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:1986)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2405)
	at org.hibernate.action.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:37)
	at org.hibernate.engine.ActionQueue.execute(ActionQueue.java:248)
	at org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:269)
	at org.hibernate.event.def.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)
	at org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:101)
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:186)
	at org.hibernate.event.def.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:33)
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:175)
	at org.hibernate.event.def.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:27)
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:70)
	at org.hibernate.impl.SessionImpl.fireSave(SessionImpl.java:530)
	at org.hibernate.impl.SessionImpl.save(SessionImpl.java:518)
	at org.hibernate.impl.SessionImpl.save(SessionImpl.java:514)
	at edu.wustl.dao.HibernateDAOImpl.insert(HibernateDAOImpl.java:123)
	at edu.wustl.dao.test.HibernateTestCaseForCatissue.testConstraintViolation(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at junit.framework.TestCase.runTest(TestCase.java:168)
	at junit.framework.TestCase.runBare(TestCase.java:134)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Caused by: com.mysql.jdbc.exceptions.MySQLIntegrityConstraintViolationException: Duplicate entry 'Street unknown' for key 2
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:931)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:2985)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1631)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1723)
	at com.mysql.jdbc.Connection.execSQL(Connection.java:3283)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1332)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1604)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1519)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1504)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:1968)
	... 33 more
Error key name ::db.insert.data.error
------------------------------------------------------------------------
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5163164388737024
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
begin
current autocommit status: false
after transaction begin
Execute query
unable to locate HQL query plan in cache; generating (select id from test.User)
parse() - HQL: select id from test.User
--- HQL AST ---
 \-[QUERY] 'query'
    \-[SELECT_FROM] 'SELECT_FROM'
       +-[FROM] 'from'
       |  \-[RANGE] 'RANGE'
       |     \-[DOT] '.'
       |        +-[IDENT] 'test'
       |        \-[IDENT] 'User'
       \-[SELECT] 'select'
          \-[IDENT] 'id'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} :  test.User (no alias) -> user0_
attempting to resolve property [id] as a non-qualified ref
Resolved :  {synthetic-alias} -> {synthetic-alias}
getDataType() : id -> org.hibernate.type.LongType@1584807
Resolved :  {synthetic-alias}.id -> user0_.IDENTIFIER
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( user0_.IDENTIFIER {synthetic-alias} id ) ) ( FromClause{level=1} test_user user0_ ) )
Using FROM fragment [test_user user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (test_user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'user0_.IDENTIFIER' {propertyName=id,dereferenceType=4,propertyPath=id,path={synthetic-alias}.id,tableAlias=user0_,className=test.User,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'test_user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=test_user,tableAlias=user0_,origin=null,colums={,className=test.User}}

throwQueryException() : no errors
HQL: select id from test.User
SQL: select user0_.IDENTIFIER as col_0_0_ from test_user user0_
throwQueryException() : no errors
HQL param location recognition took 0 mills (select id from test.User)
located HQL query plan in cache (select id from test.User)
find: select id from test.User
named parameters: {}
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
select user0_.IDENTIFIER as col_0_0_ from test_user user0_ limit ?
preparing statement
about to open ResultSet (open ResultSets: 0, globally: 0)
processing result set
result set row: 0
result row: 
returning '1' as column: col_0_0_
done processing result set (1 rows)
about to close ResultSet (open ResultSets: 1, globally: 1)
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
initializing non-lazy collections
Close the session
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Open the session
opened session at timestamp: 5163164388737025
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
begin
current autocommit status: false
after transaction begin
Delete Object
deleting a detached instance
collection dereferenced while transient [test.User.orderCollection#3]
deleting [test.User#3]
setting cache mode to: GET
processing cascade ACTION_DELETE for: test.User
cascade ACTION_DELETE for collection: test.User.orderCollection
done cascade ACTION_DELETE for collection: test.User.orderCollection
done processing cascade ACTION_DELETE for: test.User
setting cache mode to: NORMAL
setting cache mode to: GET
processing cascade ACTION_DELETE for: test.User
done processing cascade ACTION_DELETE for: test.User
setting cache mode to: NORMAL
Session commit
commit
automatically flushing session
flushing session
processing flush-time cascades
dirty checking collections
Flushing entities and processing referenced collections
Processing unreferenced collections
Scheduling collection removes/(re)creates/updates
Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 1 removals to 0 collections
listing entities:
test.User{orderCollection=[], emailAddress=null, activityStatus=null, firstName=null, id=3, lastName=null}
executing flush
registering flush begin
Invalidating: test.User.orderCollection#3
key: test.User.orderCollection#3
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#3
Invalidating: test.User#3
key: test.User#3
test.UserCache: test.UserMemoryStore hit for test.User#3
Deleting entity: [test.User#3]
about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
delete from test_user where IDENTIFIER=?
preparing statement
binding '3' to parameter: 1
Adding to batch
Executing batch size: 1
about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
closing statement
registering flush end
post flush
before transaction completion
before transaction completion
committed JDBC Connection
after transaction completion
aggressively releasing JDBC connection
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
after transaction completion
Releasing: test.User.orderCollection#3
key: test.User.orderCollection#3
test.User.orderCollectionCache: test.User.orderCollectionMemoryStore hit for test.User.orderCollection#3
Releasing: test.User#3
key: test.User#3
test.UserCache: test.UserMemoryStore hit for test.User#3
Deleted object ::::
Close the session
closing session
connection already null in cleanup : no action
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5163164389507074
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
Get Query RS [select IDENTIFIER from test_user] MAX RECORDS =[2]
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5163164389507075
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
Execute query.
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5163164389568512
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
Get Query RS
Identifier :1
Get Query RS
 Name:::Maria johns
Identifier :2
Get Query RS
 Name:::kalpana
Identifier :4
Get Query RS
 Name:::sachin
connection commit
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5163164389568513
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
Inside retrieve method
Prepare select part of query
Prepare from part of the query
JDBC Query SELECT * FROM test_user
get list from RS
Get Query RS
RScom.mysql.jdbc.ResultSet@3a835d
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5163164389568514
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
Inside retrieve method
Prepare select part of query
Prepare from part of the query
JDBC Query SELECT * FROM test_user WHERE  test_user.IDENTIFIER = 1 
get list from RS
Get Query RS
RScom.mysql.jdbc.ResultSet@107108e
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5163164389568515
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
Inside retrieve method
Prepare select part of query
Prepare from part of the query
JDBC Query SELECT IDENTIFIER  ,FIRST_NAME  ,LAST_NAME  ,EMAIL_ADDRESS  FROM test_user
get list from RS
Get Query RS
RScom.mysql.jdbc.ResultSet@1f38fc6
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5163164389568516
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
Inside retrieve method
Prepare select part of query
Prepare from part of the query
JDBC Query SELECT  DISTINCT IDENTIFIER  ,FIRST_NAME  ,LAST_NAME  ,EMAIL_ADDRESS  FROM test_user
get list from RS
Get Query RS
RScom.mysql.jdbc.ResultSet@15bfdbd
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5163164389568517
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
Inside retrieve method
Prepare select part of query
Prepare from part of the query
JDBC Query SELECT * FROM test_user WHERE  test_user.IDENTIFIER in (  1, 2) OR test_user.FIRST_NAME in (  'JOHN', 'abhijit') 
get list from RS
Get Query RS
RScom.mysql.jdbc.ResultSet@12b19c5
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5163164389634048
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
Inside retrieve method
Prepare select part of query
Prepare from part of the query
JDBC Query SELECT * FROM test_user WHERE  test_user.IDENTIFIER is not null OR test_user.LAST_NAME is not null 
get list from RS
Get Query RS
RScom.mysql.jdbc.ResultSet@1bc1fb9
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5163164389634049
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
Inside retrieve method
Prepare select part of query
Prepare from part of the query
JDBC Query SELECT * FROM test_user WHERE  test_user.LAST_NAME is null OR test_user.IDENTIFIER != 1 
get list from RS
Get Query RS
RScom.mysql.jdbc.ResultSet@17f1841
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5163164389634050
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
Inside retrieve method
Prepare select part of query
Prepare from part of the query
JDBC Query SELECT * FROM test_user WHERE  test_user.IDENTIFIER != 1 AND test_user.LAST_NAME != 'NAIK' 
get list from RS
Get Query RS
RScom.mysql.jdbc.ResultSet@89e2f1
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5163164389634051
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
Inside retrieve method
Prepare select part of query
Prepare from part of the query
JDBC Query SELECT * FROM test_user WHERE  test_user.LAST_NAME = 'NAIK' 
get list from RS
Get Query RS
RScom.mysql.jdbc.ResultSet@2515
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5163164389634052
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
Initialize batch
Application specific logger configuration is not done. Please use Logger.configureLogger(path) before using getLogger()
Generate String
Sql String: insert into person (account_id,address_id,age,birth_date,first_name,identifier,isAvailable,second_name ) values (?,?,?,?,?,?,?,? )
insert batch
insert batch
insert batch
insert batch
insert batch
insert batch
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5163164389888000
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
connection commit
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5163164389953536
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
connection commit
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5163164390080512
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
SQl : insert into person (identifier,first_name,second_name,age,address_id,account_id,birth_date,isAvailable ) values (?,?,?,?,?,?,?,? )  Invalid data : kalpana'delete1 Encountered invalid character:delete
Error key name ::db.malicious.data.encountered
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5163164390080513
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
connection commit
Execute query.
connection commit
connection commit
Execute query.
connection commit
connection commit
Execute query.
connection commit
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5163164390531072
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
Get Query RS [select FIRST_NAME, IDENTIFIER from test_user where IDENTIFIER = ? ] MAX RECORDS =[null]
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5163164390531073
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
Get Query RS [select FIRST_NAME, IDENTIFIER from test_user where FIRST_NAME = ? ] MAX RECORDS =[null]
SQl : select FIRST_NAME, IDENTIFIER from test_user where FIRST_NAME = ?   Invalid data : sri-- Encountered invalid character:--
Error key name ::db.malicious.data.encountered
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
opened session at timestamp: 5163164390531074
setting flush mode to: COMMIT
opening JDBC connection
total checked-out connections: 0
using pooled JDBC connection, pool size: 1
Execute query.
connection commit
closing session
performing cleanup
releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
returning connection to pool, pool size: 2
after transaction completion
aggressively releasing JDBC connection
after transaction completion
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Problem while retrieving factory object :
java.lang.NullPointerException
	at java.util.Properties$LineReader.readLine(Properties.java:365)
	at java.util.Properties.load(Properties.java:293)
	at edu.wustl.common.exception.ErrorKey.addErrorKeysToMap(ErrorKey.java:179)
	at edu.wustl.common.exception.ErrorKey.init(ErrorKey.java:125)
	at edu.wustl.dao.test.BaseTestCase.setUp(Unknown Source)
	at junit.framework.TestCase.runBare(TestCase.java:132)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
]]></system-out>

      <system-err><![CDATA[edu.wustl.dao.exception.DAOException: 
	at edu.wustl.dao.util.DAOUtility.getDAOException(DAOUtility.java:346)
	at edu.wustl.dao.HibernateDAOImpl.insert(HibernateDAOImpl.java:130)
	at edu.wustl.dao.test.HibernateTestCaseForCatissue.testConstraintViolation(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at junit.framework.TestCase.runTest(TestCase.java:168)
	at junit.framework.TestCase.runBare(TestCase.java:134)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
Caused by: org.hibernate.exception.ConstraintViolationException: could not insert: [test.Address]
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:71)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:1986)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2405)
	at org.hibernate.action.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:37)
	at org.hibernate.engine.ActionQueue.execute(ActionQueue.java:248)
	at org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:269)
	at org.hibernate.event.def.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)
	at org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:101)
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:186)
	at org.hibernate.event.def.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:33)
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:175)
	at org.hibernate.event.def.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:27)
	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:70)
	at org.hibernate.impl.SessionImpl.fireSave(SessionImpl.java:530)
	at org.hibernate.impl.SessionImpl.save(SessionImpl.java:518)
	at org.hibernate.impl.SessionImpl.save(SessionImpl.java:514)
	at edu.wustl.dao.HibernateDAOImpl.insert(HibernateDAOImpl.java:123)
	... 18 more
Caused by: com.mysql.jdbc.exceptions.MySQLIntegrityConstraintViolationException: Duplicate entry 'Street unknown' for key 2
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:931)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:2985)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1631)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1723)
	at com.mysql.jdbc.Connection.execSQL(Connection.java:3283)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1332)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1604)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1519)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1504)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:1968)
	... 33 more
edu.wustl.dao.exception.DAOException: 
	at edu.wustl.dao.util.DAOUtility.getDAOException(DAOUtility.java:346)
	at edu.wustl.dao.AbstractJDBCDAOImpl.checkforInvalidData(AbstractJDBCDAOImpl.java:862)
	at edu.wustl.dao.AbstractJDBCDAOImpl.validateSql(AbstractJDBCDAOImpl.java:833)
	at edu.wustl.dao.AbstractJDBCDAOImpl.executeUpdate(AbstractJDBCDAOImpl.java:684)
	at edu.wustl.dao.test.JDBCTestCasesForCatissue.testExecuteUpdateforMaliciousData(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at junit.framework.TestCase.runTest(TestCase.java:168)
	at junit.framework.TestCase.runBare(TestCase.java:134)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
edu.wustl.dao.exception.DAOException: 
	at edu.wustl.dao.util.DAOUtility.getDAOException(DAOUtility.java:346)
	at edu.wustl.dao.AbstractJDBCDAOImpl.checkforInvalidData(AbstractJDBCDAOImpl.java:862)
	at edu.wustl.dao.AbstractJDBCDAOImpl.getResultSet(AbstractJDBCDAOImpl.java:1368)
	at edu.wustl.dao.AbstractJDBCDAOImpl.executeQuery(AbstractJDBCDAOImpl.java:1305)
	at edu.wustl.dao.test.JDBCTestCasesForCatissue.testCaseExecuteQueryWithPreparedStmt(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at junit.framework.TestCase.runTest(TestCase.java:168)
	at junit.framework.TestCase.runBare(TestCase.java:134)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
]]></system-err>

  </testsuite>
</testsuites>
